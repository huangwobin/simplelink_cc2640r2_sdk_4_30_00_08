.. DO NOT RENAME OR MOVE THIS FILE FROM THE QUICKSTART GUIDE! THIS GUARANTEES
   EXTERNAL LINKS TO THIS GUIDE WILL PERSIST IN E2E AND SUCH.
   
TI BLE5-Stack Quick Start
*************************

This section serves as a road map for users developing applications
and products using the TI SimpleLink |DEVICE| wireless MCU platform for
Bluetooth Low Energy applications. Whether a seasoned developer or just getting
started, TI has created a variety of resources to simplify development on the
|DEVICE| platform. These resources will enhance your experience with the TI
SimpleLink |BLE5_STACK| |version| from the out-of-the-box demo to production.

To download the |DEVICE| SDK, please visit the download page:
`http://www.ti.com/tool/SIMPLELINK-CC2640R2-SDK <http://www.ti.com/tool/SIMPLELINK-CC2640R2-SDK>`_.

:numref:`fig_ble5_suggested_workflow` shows the suggested work flow for getting
started with TI's SimpleLink Bluetooth Low Energy (BLE) development environment.

.. _fig_ble5_suggested_workflow:

.. figure:: resources/ble5/ble5suggestedworkflow.png
    :align: center

    Suggested Workflow

.. _get-started-ble5-ccs:

Using BLE5-Stack Projects with CCS
==================================

Importing BLE5-Stack app projects into CCS will also import BLE5-Stack stack
library projects into CCS. The stack library project is a dependent project and
will be automatically built when the example is built.

For more details and how to
change configurations look at the SimpleLink |BLE5_STACK| Userâ€™s Guide.

Import Project Using Resource Explorer
--------------------------------------

A quick and easy way to start working with the SDK is to use the TI Resource
Explorer in CCS.

This section describes how to import and build an existing project and
references the project\_zero project. All of |BLE5_STACK| projects included
in the development kit have a similar structure.

#. Open the CCS IDE from the Start Menu.
#. Create a workspace.

    .. attention::

        Ensure that the CCS workspace path does not contain a whitespace.

#. Import a CCS Project using Resource Explorer

    - Open Resource Explorer (if not open already): View -> Resource Explorer
    - Navigate to the CCS folder for your chosen example:
      Software |rarr| |SDK| |rarr| Examples |rarr| |LP| |rarr|
      ble5stack |rarr| project_zero |rarr| TI-RTOS |rarr| CCS Compiler |rarr|
      project_zero_app

    .. _fig-ccs-import-projects:
    .. figure:: resources/ble5/ble5_ccs_import_project_zero.png
        :align: center

        Import CCS Projects

#.  Select the CCS Logo button to import project into Project Explorer

    .. attention::

        The import process will also install the |SDK| if a local version does
        not exist. You must accept the End User License Agreement to proceeed.

        .. _fig-resource-explorer-eula:
        .. figure:: resources/eula.png
            :align: center

            Install |SDK|

        After the installation finishes, you must reopen CCS before importing
        the project.

    - If you get a pop-up window with an error message, under "Details >>"
      saying "Error: A project with the name 'xx_stack_library' already exists
      in the workplace!", that is fine. You accidentally imported the stack
      twice. Just click OK.

    - If everything is successful, three projects should appear in Resource
      Explorer: one for the application code
      (ble5_project_zero_cc26x2r1lp_app), one for the stack code
      (ble5_project_zero_cc26x2r1lp_stack_library), and one for the BIM
      (cc26x2r1lp_bim_offchip).

    .. note::
        Not all projects in the |SDK| will have both an app and a stack library
        project. Refer to the relevant protocol Quick Start section for working
        with non-BLE5-Stack projects in the |SDK|.

    .. _fig-ccs-project-explorer-after-import:
    .. figure:: resources/ble5/ble5_ccs_project_explorer_after_import.png
        :align: center

        Projects Imported into CCS


Build and Download Project
--------------------------

For all build configurations, the Stack project should always be built before
the Application project.

To build & download Project Zero:

#. Build the Stack Library project.

    - Set the Stack Library project as the active project.
    - Select **Project** -> **Build All** to build the Stack Library project.

#. Build the Application project.

    - Set the Application project as the active project.
    - Select **Project -> Build All** to build the Application project.

#. Load the Application project (this will include the Stack Library)

    - Select **Run** -> **Debug** to download the application

.. note::
    Application projects that consume the stack in a library form will not
    have hard defined image boundaries.

    After the initial build, if the stack project is not modified, only the
    application project needs to be rebuilt.

Before beginning execution, open a terminal window with the following settings:

.. _ccs-terminal-settings-table:
.. table:: Project Zero UART Settings

    +--------------+----------------+
    | UART Param   | Default Values |
    +==============+================+
    | Baud Rate    | 115200         |
    +--------------+----------------+
    | Data length  | 8 bits         |
    +--------------+----------------+
    | Parity       | None           |
    +--------------+----------------+
    | Stop bits    | 1 bit          |
    +--------------+----------------+
    | Flow Control | None           |
    +--------------+----------------+

When the debugging session opens, click the Green start button to start execution.
Continue on to the :ref:`get-started-ble5-demo` section for information about using
``Project Zero``.

.. _get-started-ble5-iar:

Using BLE5-Stack Projects with IAR
==================================

When building with IAR, it is recommended to enable all build messages. This
can be done by right-clicking in the Build window and selecting "All" as shown
below:

    .. _fig-ble5-iar-enable-build-messages:
    .. figure:: resources/iar_enable_build_messages.png
        :align: center

        Enable All Build Messages

Import Project Using Workspace
------------------------------

This section describes how to open and build an existing project and references
the project\_zero project.

All of the |BLE5_STACK| workspace included in the |SDK| have an Application
project and a Stack Library project.


.. error::
    If you have imported the global
    ``<SDK_INSTALL_DIR>/tools/iar/SIMPLELINK_CC2640R2_SDK.custom_argvars``,
    then |BLE5_STACK| examples will fail to build. For |BLE5_STACK| examples,
    you must remove this custom_argvars file from your IAR global custom
    arguments.

#. Open the IAR Embedded Workbench IDE from the Start Menu.
#. Open an IAR workspace project: **File** -> **Open** -> **Workspace...**

    - For this example, select
      *<SDK\_INSTALL\_DIR>\\examples\\rtos\\|LP|\\ble5stack\\project\_zero\\tirtos\\iar\\ble5\_project\_zero.eww*

.. sidebar:: IAR Workspace Pane

    .. _fig-iar-workspace-pane:
    .. figure:: resources/ble5/ble5_iar_workspace_pane.png
        :align: center
        :width: 75%

        IAR Workspace Pane

This workspace file is for the project\_zero project. When selected, the
files associated with the workspace become visible in the Workspace pane on the
left side of the screen. See :numref:`fig-iar-workspace-pane`

Select either project as the active project by clicking the respective tab at
the bottom of the workspace pane. In :numref:`fig-iar-workspace-pane`, the
Overview tab is selected. This tab displays the file structure for both projects
simultaneously. In this case, use the drop-down menu at the top of the workspace
pane to select the active project. Each of these projects produces a separate
downloadable object.

Build and Download Project
--------------------------

For all build configurations, the Stack project should always be built before
the Application project.

To build & download Project Zero:

#. Build the Stack Library project.

    - Select the Stack project.
    - Select **Project** -> **Make** to build the Stack Library project.

#. Build the Application project.

    - Select the Application project.
    - Select **Project** -> Make to build the Application project.

#. Load the Application project (this will include the Stack Library)

    - To download and debug: Select **Project** -> **Download and Debug**
    - To download without debugging: Select **Project** -> **Download** ->
        **Download Active Application**

.. note::
    Application projects that consume the Stack in a library form will not
    have hard defined image boundaries.

    After the initial build, if the Stack project is not modified, only the
    application project needs to be rebuilt.

    Refer to the Project Zero README for more information about this project.

Before beginning execution, open a terminal window with the following settings:

.. _iar-terminal-settings-table:
.. table:: Project Zero UART Settings

    +--------------+----------------+
    | UART Param   | Default Values |
    +==============+================+
    | Baud Rate    | 115200         |
    +--------------+----------------+
    | Data length  | 8 bits         |
    +--------------+----------------+
    | Parity       | None           |
    +--------------+----------------+
    | Stop bits    | 1 bit          |
    +--------------+----------------+
    | Flow Control | None           |
    +--------------+----------------+

When the debugging session opens, click the start button to start execution.
Continue on to the :ref:`get-started-ble5-demo` section for information about
using ``Project Zero``.

.. _get-started-ble5-demo:

Running the Demo
================

After hitting the play button, your terminal window should display the Project
Zero initialization information as shown below:

    .. _fig-ble5_pz_terminal_initialization:
    .. figure:: resources/ble5/ble5_pz_terminal_initialization.png
        :align: center

        Project Zero Initialization

This provides information about the services present in Project Zero. Project
Zero has 3 interactive services: the LED service, the button service and the data
service.

Writing a non-zero value to the LED service will cause the LEDs on the LaunchPad
to light up. Writing zero will turn them off. Enabling notifications on the
Button service will cause the Peripheral to send notifications of current button
state (0 - not pressed, 1 - pressed) to the Central device. The Data service can
be used to read and write multiple bytes of data. 

Choose the Central device from the list below to connect with:

.. container:: toggle

    .. container:: header

        **Click to Expand BTool Instructions**

    **Host Test Setup**

    The easiest way to connect to Project Zero with another CC13xx/26xx
    LaunchPad is by using BTool. BTool allows you to send HCI commands to
    the LaunchPad to easily establish BLE communication with another device.

    To use BTool, you must flash your second |LP| with the Host Test
    firmware from a compatible version of the TI BLE-Stack/BLE5-Stack.
    Pre-built Host Test binaries are included in the ble5stack examples
    directory of the SDK.

    Uniflash can be used to program the LaunchPad with the Host Test firmware:

    .. _fig-ble5-uniflash-host-test:
    .. figure:: resources/ble5/ble5-uniflash-host-test.png
        :align: center

        Flash Host Test using Uniflash

    Open BTool from the tools\ble5stack\btool folder of the SDK\_INSTALL\_DIR.
    Select the XDS110 UART COM Port for your Host Test LaunchPad:

    .. _fig-btool_serial_port:
    .. figure:: resources/ble5/btool_serial_port.png
        :align: center

        BTool Serial Port Settings

    When BTool connects to the LaunchPad, it will issue several initialization
    commands. If the commands succeed, you will receive multiple HCI Events with
    a Status of "SUCCESS".

    **Connect to Project Zero**

    Scan for nearby advertising Bluetooth devices by selecting the Scan button
    in the Discovery window. Make sure your Project Zero LaunchPad is
    connected to power and advertising.

    Compare the device addresses in the Slave BDA dropdown with the address
    shown in the Project Zero terminal window. Select the matching address and
    click "Establish" to connect to Project Zero.

    .. _fig-btool-scan-connect:
    .. figure:: resources/ble5/btool-scan-connect.png
        :align: center

        Scanning & Connecting with BTool

    After the connection has established, discover & read the current value of
    the services and characteristics available on Project Zero by right-clicking
    on the Handle in the Connection Info section and selecting Read Values.

    .. _fig-btool-read-values:
    .. figure:: resources/ble5/btool-read-values.png
        :align: center

        BTool GATT Table Discovery

    The bottom of the BTool GUI will display the Project Zero GATT Table to
    help you navigate and control the Project Zero services.

    .. _fig-btool-gatt-table:
    .. figure:: resources/ble5/btool-gatt-table.png
        :align: center

        BTool GATT Table Discovery

    **Using the LED Service**

    Writing 0x01 to the characteristics in the LED Service will turn on the
    Project Zero LaunchPad LEDs. You can write to the characteristic by double
    clicking the Value field of the LED0 State or LED1 State characteristics.

    .. _fig-btool-write-item:
    .. figure:: resources/ble5/btool-write-item.png
        :align: center

        Writing to a Characteristic

    The Project Zero terminal window will update with the current LED state:

    .. _fig-ble5_btool_leds_on:
    .. figure:: resources/ble5/ble5_leds_on.png
        :align: center

        Turning on Project Zero LEDs

    **Using the Button Service**

    You can choose to receive notifications about the current state of the
    Project Zero Button Service by writing 01:00 to the Client Characteristic
    Configuration Descriptors of the Button Service. After enabling
    notifications, the current value of the Button state will be displayed in
    BTool.

    .. _fig-btool-enable-notifications:
    .. figure:: resources/ble5/btool-enable-notifications.png
        :align: center

        Enabling Notifications in BTool

    .. _fig-btool_ble5_button_notifications:
    .. figure:: resources/ble5/ble5_button_notifications.png
        :align: center

        Pressing & Releasing Buttons

    **Using the Data Service**

    You can read and write multiple bytes of data by using the Data Service.
    Double click on the Value field of the String Char. You can write the new
    value directly in ASCII or you can choose a different type by selecting from
    the Value Type dropdown menu.

    .. _fig-btool-write-string:
    .. figure:: resources/ble5/btool-write-string.png
        :align: center

        Writing to the Data Service

    .. _fig-ble5_btool_writing_datas:
    .. figure:: resources/ble5/ble5_writing_data.png
        :align: center

        Data Service Value change

.. container:: toggle

    .. container:: header

        **Click to Expand iOS Instructions**

    Download the latest version of the TI SimpleLink Starter app from the iOS
    app store. When the download completes, open the app:

        .. _fig-ble5_simplelink_starter_app:
        .. figure:: resources/ble5/ble5_simplelink_starter_app.png
            :align: center

            SimpleLink Starter App

    **Connect to Project Zero**

    When the app opens, nearby Bluetooth Low Energy devices will appear.
    You should see ProjectZero advertising as shown below:

        .. _fig-ble5_simplelink_starter_advertising:
        .. figure:: resources/ble5/ble5_simplelink_starter_advertising.png
            :align: center

            Project Zero Advertising

    Press the Project Zero item and select Sensor View. The services present in
    Project Zero will appear as shown below:

        .. _fig-ble5_simplelink_starter_sensor_view:
        .. figure:: resources/ble5/ble5_simplelink_starter_sensor_view.png
            :align: center

            Project Zero Advertising

    The Project Zero terminal information will also update with connection
    information including the peer device address, PHY, and MTU Size. For more
    information about these parameters, see the BLE5-Stack User's Guide.

        .. _fig-ble5_pz_terminal_connection:
        .. figure:: resources/ble5/ble5_pz_terminal_connection.png
            :align: center

            Project Zero After Connection

    **Using the LED Service**

    To turn on an LED, press one of the buttons on the LED service. The left
    button turns on the Red LED (DIO6). The right button turns on the Green LED
    (DIO7). Pressing the button again will turn the LED off. The Project Zero
    terminal window will update with the current LED state.

        .. _fig-ble5_simplelink_starter_led_service:
        .. figure:: resources/ble5/ble5_simplelink_starter_led_service.png
            :align: center

            Project Zero LED Service

        .. _fig-ble5_simplelink_starter_leds_on:
        .. figure:: resources/ble5/ble5_leds_on.png
            :align: center

            Turning on Project Zero LEDs

    **Using the Button Service**

    Button press notifications are automatically enabled when connecting through the
    Sensor View. If you press and release either button, the Sensor View will update
    with the current state and the button state graph will show the button state
    over time (High corresponds to button pressed, low corresponds with button
    released).

        .. _fig-ble5_simplelink_starter_button_service:
        .. figure:: resources/ble5/ble5_simplelink_starter_button_service.png
            :align: center

            Project Zero Button Service

        .. _fig-ble5_simplelink_starter_button_notifications:
        .. figure:: resources/ble5/ble5_button_notifications.png
            :align: center

            Pressing & Releasing Buttons

    **Using the Data Service**

    The Data Service is not displayed in Sensor View. To use the Data Service, close
    the Sensor View by pressing the < Sensor Tag button in the upper left. This
    returns you to the main SensorTag view. Press the ProjectZero icon again and
    now select Service Explorer. The Data Service is the service with the UUID that
    begins with F0001130 (List Item 3). Press the item and you will see two
    characteristics. The first characteristic can be used to read and write
    multiple bytes of data. You can do this by pressing Read characteristic to get
    data from ProjectZero and Write w/response characteristic to send multiple bytes
    of data to ProjectZero.

        .. _fig-ble5_simplelink_starter_data_service:
        .. figure:: resources/ble5/ble5_simplelink_starter_data_service.png
            :align: center

            Project Zero Data Service

        .. _fig-ble5_simplelink_starter_writing_data:
        .. figure:: resources/ble5/ble5_writing_data.png
            :align: center

            Writing to the Data Service

.. container:: toggle

    .. container:: header

        **Click to Expand Android Instructions**

    Download the latest version of the TI SimpleLink Starter app from your
    app store. When the download completes, open the app:

        .. _fig-ble5_android_app:
        .. figure:: resources/ble5/ble5_android_starter_app.png
            :align: center

            SimpleLink Starter App

    Enable location permissions to allow the app to function properly:

        .. _fig-ble5_android_app_permissions:
        .. figure:: resources/ble5/ble5_android_starter_permissions.png
            :align: center

            SimpleLink Starter Location Permissions

    **Connect to Project Zero**

    Open the SimpleLink Starter app on your device. The app should begin
    scanning for BLE devices automatically but you can force a refresh by
    pulling down on the device list. Make sure your Project Zero LaunchPad is
    nearby and advertising. Project Zero should appear in the Bluetooth low
    energy devices list:

        .. _fig-ble5_android_advertising:
        .. figure:: resources/ble5/ble5_android_advertising.png
            :align: center

            Discovering Project Zero

    Establish a connection to the Project Zero by clicking on its name in the
    devices list. The SimpleLink Starter application will display the Project
    Zero services and displays GUI widgets to interact.

        .. _fig-ble5_android_services:
        .. figure:: resources/ble5/ble5_android_services.png
            :align: center

            Project Zero Services

    **Using the LED Service**

    To turn on an LED, press one of the buttons on the LED service. The left
    button turns on the Red LED (DIO6). The right button turns on the Green LED
    (DIO7). Pressing the button again will turn the LED off. The Project Zero
    terminal window will update with the current LED state.

        .. _fig-ble5_android_led_service:
        .. figure:: resources/ble5/ble5_simplelink_starter_led_service.png
            :align: center

            Project Zero LED Service

        .. _fig-ble5_android_leds_on:
        .. figure:: resources/ble5/ble5_leds_on.png
            :align: center

            Turning on Project Zero LEDs

    **Using the Button Service**

    Button press notifications are automatically enabled when connecting through the
    Sensor View. If you press and release either button, the Sensor View will update
    with the current state and the button state graph will show the button state
    over time (High corresponds to button pressed, low corresponds with button
    released).

        .. _fig-ble5_android_buttons:
        .. figure:: resources/ble5/ble5_simplelink_starter_button_service.png
            :align: center

            Project Zero Button Service

        .. _fig-ble5_android_button_notifications:
        .. figure:: resources/ble5/ble5_button_notifications.png
            :align: center

            Pressing & Releasing Buttons

    **Using the Data Service**

    The Data Service is not displayed in Sensor View. To use the Data Service,
    you will need to switch to the Service Explorer view. Tap Service Explorer
    in the top right of the screen to switch views. The Data Service is the
    service with the UUID that begins with F0001130 (Project Zero Stream
    Service). Tap the item and you will see two characteristics. The first
    characteristic can be used to read and write multiple bytes of data. You can
    do this by pressing Read characteristic to get data from ProjectZero and
    Write w/response characteristic to send multiple bytes of data to
    ProjectZero.

        .. _fig-ble5_android_data_service:
        .. figure:: resources/ble5/ble5_simplelink_starter_data_service.png
            :align: center

            Project Zero Data Service

        .. _fig-ble5_android_writing_data:
        .. figure:: resources/ble5/ble5_writing_data.png
            :align: center

            Writing to the Data Service

.. _get-started-ble5-learn:

Learning More About TI BLE5-Stack
=================================

Resources contained in the Learn track of :numref:`fig_ble5_suggested_workflow` are
intended for users who are new to BLE or TI-RTOS. These modules demonstrate how
to create custom applications with |BLE5_STACK| and TI's Real Time Operation
System (TI-RTOS).

-  **SimpleLink Academy** `www.ti.com/simplelinkacademy <www.ti.com/simplelinkacademy>`_

SimpleLink Academy provides a comprehensive set of training tools that allow
users from beginners to experienced developers to learn about the SimpleLink MCU
Platform.

Using introductory material and labs, learn the fundamentals of
BLE and how to develop a custom BLE profile.

SimpleLink Academy also contains modules written to demonstrate the rich debug
environment and peripheral driver capability provided by TI-RTOS.

-  **TI-RTOS Kernel Workshop** `www.training.ti.com/ti-rtos-kernel-workshop <http://training.ti.com/ti-rtos-kernel-workshop>`_

This material teaches users who are new to TI-RTOS or any RTOS
programming in general about TIâ€™s RTOS kernel implementation.

Modules within the kernel training greatly expand the information
presented in the **TI-RTOS Overview** chapter in the |BLE5_STACK| User's Guide.

Learn how the TI-RTOS provides the most optimal power management
and design flexibly.

.. _get-started-ble5-develop:

Developing a New BLE5-Stack Based Application
=============================================

The develop track of :numref:`fig_ble5_suggested_workflow` is intended for
programmers who are ready to start developing an end product using the |DEVICE|.
To begin:

**Get Familiar with the BLE5-Stack User's Guide**

This User's Guide is meant to be used alongside the |BLE5_STACK|
when developing an end product. It contains documentation on the stack
architecture, APIs, and suggestions for developing applications.

**Select an Example Project**

The |BLE5_STACK| includes a basic set of projects to use as a starting point for
development of your custom application. Click the links below to find
out more information about each project:

.. _tbl-sdk-ble-examples:
.. table:: BLE examples available for the |DEVICE| platform

    +----------------------------------+----------------------------------------------------------------------------------------------+
    | Name                             | Description                                                                                  |
    +----------------------------------+----------------------------------------------------------------------------------------------+
    | `host_test`_                     | A network processor project that is interfaced with HCI and Vendor Specific HCI commands.    |
    +----------------------------------+----------------------------------------------------------------------------------------------+
    | `project_zero`_                  | Feature rich peripheral application that provides LED and button functionality OOB           |
    +----------------------------------+----------------------------------------------------------------------------------------------+
    | `simple_broadcaster`_            | Demonstrates a simple Bluetooth Low Energy broadcaster application that                      |
    |                                  | implements non-connectable advertisements                                                    |
    +----------------------------------+----------------------------------------------------------------------------------------------+
    | `simple_central`_                | Implements a basic BLE central device with GATT client functionality.                        |
    +----------------------------------+----------------------------------------------------------------------------------------------+
    | `simple_peripheral`_             | Demonstrates a simple Bluetooth Low Energy slave application that                            |
    |                                  | implements connectable advertisements and a simple profile.                                  |
    +----------------------------------+----------------------------------------------------------------------------------------------+

**Troubleshooting Help**

While developing your custom application, you may run into issues that require
the use of a debugger. See the **Debugging** chapter in the |BLE5_STACK| User's
Guide for guidance.

.. _get-started-ble5-enhance:

Enhance Your Project
====================

The enhance track of :numref:`fig_ble5_suggested_workflow` is intended to take your
product to
the next level by leveraging TIâ€™s web-based collateral. Additional
resources found in these pages include application-specific source
code examples, smart phone source code, and complete sub-system
designs.

-  **TI SimpleLink GitHub** `TI SimpleLink GitHub  <https://github.com/ti-simplelink/ble_examples>`_

Additional sample applications created to implement specific use
cases and examples. These are made to work in conjunction with the
SDK.

-  **TI Designsâ„¢** `http://www.ti.com/tidesigns <http://www.ti.com/general/docs/refdesignsearchresults.tsp>`_

Examples of system designs containing complete hardware and
software examples, using the |DEVICE|.

.. _get-started-ble5-support:

Getting Support
===============

The support track of :numref:`fig_ble5_suggested_workflow` is intended to provide you
additional help and resources that aren't contained in the previous tracks.


- **E2E Forums** `www.ti.com/ble-forum <https://e2e.ti.com/support/wireless-connectivity/bluetooth/>`_

A support community providing answers to questions relating to the
|version| and the |DEVICE|. You can browse questions from other developers
or ask your own questions if you run into issues developing with |version|.
