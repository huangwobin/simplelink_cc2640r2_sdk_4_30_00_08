<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>ADC.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_d_c_8h</filename>
    <class kind="struct">ADC_Params</class>
    <class kind="struct">ADC_FxnTable</class>
    <class kind="struct">ADC_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>ADC_convertRawToMicroVolts</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>ab9f0fda9cf7e26636cee5817789f0030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_CMD_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga1850e2c1e2791103d1102917d1e5b01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5a8bd7786df22349b1a5434f48b08581</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaee02c8883a7e443d36ea47f9696730ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_ERROR</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga33ce323c3bbdc8a3f4e018f99a92b09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga704a8cd95bdee94b0f61f06566062e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADC_Config *</type>
      <name>ADC_Handle</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>ac98b1222559c172df43505d672e1376c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADC_Config</type>
      <name>ADC_Config</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>af334849657f87b79a31392f89828299a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADC_close</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>adb49f74bdef5e3e45ee5de306c5dfc08</anchor>
      <arglist>(ADC_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADC_control</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>af4be7e5e4f5cc931f4501a542d689c32</anchor>
      <arglist>(ADC_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADC_convert</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>afcac5582b8be42a7740091d150aef05c</anchor>
      <arglist>(ADC_Handle handle, uint16_t *value)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>ADC_convertToMicroVolts</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>aa1cd6feaa85ea5409dbe1769586bff20</anchor>
      <arglist>(ADC_Handle handle, uint16_t adcValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADC_init</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a4b4a2ddcb45df0c8497c47d4ed800e2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ADC_Handle</type>
      <name>ADC_open</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a1bfe07e93650e1288ba5fc6acc212c46</anchor>
      <arglist>(uint_least8_t index, ADC_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADC_Params_init</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a21df1c0987f5cecb660581ae081c4dc7</anchor>
      <arglist>(ADC_Params *params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaee02c8883a7e443d36ea47f9696730ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_ERROR</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga33ce323c3bbdc8a3f4e018f99a92b09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga704a8cd95bdee94b0f61f06566062e8c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Overview</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Usage</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Synopsis</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Synopsis_Code</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples_open</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples_convert</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples_convert_microvolts</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>ADCBuf.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_d_c_buf_8h</filename>
    <class kind="struct">ADCBuf_Conversion</class>
    <class kind="struct">ADCBuf_Params</class>
    <class kind="struct">ADCBuf_FxnTable</class>
    <class kind="struct">ADCBuf_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_CMD_RESERVED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga6d889e191027535ad318be0b9c3765d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_RESERVED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga61f0abe91c78f6ab7003c53e513d4d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gac9c96db575dfaa6bcdfbd94cd875fbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_ERROR</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga78f1a705377b5bb15cc6c152f75846e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5d552a66f63d36a8eaffd53c9deff2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_UNSUPPORTED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga14c9aea90d55fbbf215ab5a17a33573d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBuf_Config *</type>
      <name>ADCBuf_Handle</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a9b9646efcf7a7fd38a2935abd940cf96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>ADCBuf_Callback</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a477c377c65f8de04aa67ff7eefa0a4cf</anchor>
      <arglist>)(ADCBuf_Handle handle, ADCBuf_Conversion *conversion, void *completedADCBuffer, uint32_t completedChannel)</arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBuf_Config</type>
      <name>ADCBuf_Config</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a630c696a789e6c298dc97b960f72e3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBuf_Recurrence_Mode</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>af15cc4961b02af48216132c2b8bc88f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBuf_RECURRENCE_MODE_ONE_SHOT</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>af15cc4961b02af48216132c2b8bc88f1a1916212b661aa853b7a581e3e5dc35e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBuf_RECURRENCE_MODE_CONTINUOUS</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>af15cc4961b02af48216132c2b8bc88f1ac10945188f88ddadd4322c4e117d5b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBuf_Return_Mode</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a3d643e8024503c5ef2679c83419ba6ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBuf_RETURN_MODE_BLOCKING</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a3d643e8024503c5ef2679c83419ba6eea5c6236b2f629b196d7874175be679399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBuf_RETURN_MODE_CALLBACK</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a3d643e8024503c5ef2679c83419ba6eea633b4b063b88d7c62e9e2513075a36a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADCBuf_close</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a04ab5fae5da8f9ff77ab3ae4974d8f7d</anchor>
      <arglist>(ADCBuf_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADCBuf_control</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a87678933c235c0bfc1a26472ef873014</anchor>
      <arglist>(ADCBuf_Handle handle, uint_fast16_t cmd, void *cmdArg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADCBuf_init</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a88a0ab421304465b22417a7adef6c0c2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADCBuf_Params_init</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>ae6ddd34c34fd06cdede98fb01033cc47</anchor>
      <arglist>(ADCBuf_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>ADCBuf_Handle</type>
      <name>ADCBuf_open</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a292e0e615d57d93c2f87f7e915e7027b</anchor>
      <arglist>(uint_least8_t index, ADCBuf_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADCBuf_convert</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a762253a94875258c5a71b591f03f9d97</anchor>
      <arglist>(ADCBuf_Handle handle, ADCBuf_Conversion conversions[], uint_fast8_t channelCount)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADCBuf_convertCancel</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a5201c27bddf11b9f9ae902807bded40d</anchor>
      <arglist>(ADCBuf_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast8_t</type>
      <name>ADCBuf_getResolution</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a2ff6d7db155bcd1367ef82a9f5cef19c</anchor>
      <arglist>(ADCBuf_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADCBuf_adjustRawValues</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a636816201fdb596b748a0ce4d4bf6739</anchor>
      <arglist>(ADCBuf_Handle handle, void *sampleBuf, uint_fast16_t sampleCount, uint32_t adcChan)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADCBuf_convertAdjustedToMicroVolts</name>
      <anchorfile>_a_d_c_buf_8h.html</anchorfile>
      <anchor>a815c5b8d43cb93a46298c889dff1019c</anchor>
      <arglist>(ADCBuf_Handle handle, uint32_t adcChan, void *adjustedSampleBuffer, uint32_t outputMicroVoltBuffer[], uint_fast16_t sampleCount)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gac9c96db575dfaa6bcdfbd94cd875fbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_ERROR</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga78f1a705377b5bb15cc6c152f75846e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5d552a66f63d36a8eaffd53c9deff2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_UNSUPPORTED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga14c9aea90d55fbbf215ab5a17a33573d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Overview</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Usage</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Synopsis</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Synopsis_Code</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Examples</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Examples_open</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Examples_blocking</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Examples_callback</docanchor>
    <docanchor file="_a_d_c_buf_8h">ti_drivers_ADCBuf_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>ADCBufCC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/adcbuf/</path>
    <filename>_a_d_c_buf_c_c26_x2_8h</filename>
    <includes id="_a_d_c_buf_8h" name="ADCBuf.h" local="no" imported="no">ti/drivers/ADCBuf.h</includes>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_u_d_m_a_c_c26_x_x_8h" name="UDMACC26XX.h" local="no" imported="no">ti/drivers/dma/UDMACC26XX.h</includes>
    <includes id="_g_p_timer_c_c26_x_x_8h" name="GPTimerCC26XX.h" local="no" imported="no">ti/drivers/timer/GPTimerCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x2_8h" name="PowerCC26X2.h" local="no" imported="no">ti/drivers/power/PowerCC26X2.h</includes>
    <class kind="struct">ADCBufCC26X2_AdcChannelLutEntry</class>
    <class kind="struct">ADCBufCC26X2_ParamsExtension</class>
    <class kind="struct">ADCBufCC26X2_HWAttrs</class>
    <class kind="struct">ADCBufCC26X2_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_ACQUIRE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>gad718c3bba0f5e4319c9b09e7bf5dc3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga297e57ceef7d21efad09a4c9f8cc5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>gadd5ecbab7264c2cd7b29d9d8e5736387</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga760d6e0d9c8d79bd7fadbd1e72204ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_RESOLUTION</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a85bd850ff22f7dd780deeddc49ad4896</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_BYTES_PER_SAMPLE</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a403ad240860839ba81d9334ca9319516</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCBufCC26X2_Sampling_Mode</type>
      <name>ADCBufCC26X2_Sampling_Mode</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a543debf4d8883cab4cb98e43a90b7dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCBufCC26X2_Sampling_Duration</type>
      <name>ADCBufCC26X2_Sampling_Duration</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a7e7035879f294b7e6c9f4005f0bb2a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCBufCC26X2_Reference_Source</type>
      <name>ADCBufCC26X2_Reference_Source</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>ad3a0f18ea55c5fc67d11c61007aaa0c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26X2_AdcChannelLutEntry</type>
      <name>ADCBufCC26X2_AdcChannelLutEntry</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a210d087934d76f6e42817698d4f88311</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26X2_ParamsExtension</type>
      <name>ADCBufCC26X2_ParamsExtension</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>abe20f6d526124622dbc7496bd24aa559</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26X2_HWAttrs</type>
      <name>ADCBufCC26X2_HWAttrs</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>ad6b9e902125ce0b2c6a128ab11fcab74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26X2_Object</type>
      <name>ADCBufCC26X2_Object</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a3178985af1128ddf7bfbdbc3e612d566</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26X2_Object *</type>
      <name>ADCBufCC26X2_Handle</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a0693d52544e383d437045d1a6de57e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBufCC26X2_Sampling_Mode</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a8350116bf32245b3128dc5018e53ed69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPING_MODE_SYNCHRONOUS</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a8350116bf32245b3128dc5018e53ed69ac9b4b759255867b6f0ebe762ebfe830e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPING_MODE_ASYNCHRONOUS</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a8350116bf32245b3128dc5018e53ed69af0ec7f9f4bc4bd7481b385536144ad97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBufCC26X2_Sampling_Duration</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_2P7_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a91e405f674127ff3e12c216f1c7649f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_5P3_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246ac56fec68c59ad8cea8c224aaed9d2b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_10P6_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246adea25b2e39702800bc558405572ed5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_21P3_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246ac2c293912608c1944a3508599973c5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_42P6_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246add4b91f1736496c609198cf43b4bd0b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_85P3_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a3728f65eb3cb5c35e4bfb96ce43716c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_170_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a9edd384603324a422cfcdf58fe364fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_341_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246aa95cadf2f1f90afd154397f0b0888bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_682_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a4959e22c7fdefe3ab297185673d3f7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_1P37_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246aa597af33dd27ab3f398c4d600b61b54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_2P73_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a918f6e52bf0d77ff10e01448b2b52dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_5P46_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a22a23e9a9c76d01a42fbc0f81bef029d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_SAMPLING_DURATION_10P9_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a017a4e439a51475975a86d669de3d246a244f0103dc68974ffd332ed9cee75be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBufCC26X2_Reference_Source</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a323aa032b8eac0638162f08b4ba49db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_FIXED_REFERENCE</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a323aa032b8eac0638162f08b4ba49db3a61614365f7815f3522749e80932b6c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26X2_VDDS_REFERENCE</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a323aa032b8eac0638162f08b4ba49db3a03b5c4f1aa2722a121c47d08ad14db95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ADCBuf_FxnTable</type>
      <name>ADCBufCC26X2_fxnTable</name>
      <anchorfile>_a_d_c_buf_c_c26_x2_8h.html</anchorfile>
      <anchor>a1fd7e145260476fcc86d59f3d45ffd7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ADCBufCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/adcbuf/</path>
    <filename>_a_d_c_buf_c_c26_x_x_8h</filename>
    <includes id="_a_d_c_buf_8h" name="ADCBuf.h" local="no" imported="no">ti/drivers/ADCBuf.h</includes>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_u_d_m_a_c_c26_x_x_8h" name="UDMACC26XX.h" local="no" imported="no">ti/drivers/dma/UDMACC26XX.h</includes>
    <includes id="_g_p_timer_c_c26_x_x_8h" name="GPTimerCC26XX.h" local="no" imported="no">ti/drivers/timer/GPTimerCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">ADCBufCC26XX_AdcChannelLutEntry</class>
    <class kind="struct">ADCBufCC26XX_ParamsExtension</class>
    <class kind="struct">ADCBufCC26XX_HWAttrs</class>
    <class kind="struct">ADCBufCC26XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_ACQUIRE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga0a536e47b039d0f506a4245079af247e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga830dac4199ded43c278e48bb1fe9725e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga23015764922f21c49518aa1050d70c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_RELEASE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>gaaacc1d31de8c38e71c351bc1fcd54340</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_RESOLUTION</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a909590e3cb53a9e496ee7d706edad6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_BYTES_PER_SAMPLE</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7445395fba5609c1fccae4b67c72f0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCBufCC26XX_Sampling_Mode</type>
      <name>ADCBufCC26XX_Sampling_Mode</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a49a153bb66450bc16c5e2ac674fad698</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCBufCC26XX_Sampling_Duration</type>
      <name>ADCBufCC26XX_Sampling_Duration</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>aeccab39075ab39a107100cfbbc473c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCBufCC26XX_Reference_Source</type>
      <name>ADCBufCC26XX_Reference_Source</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a55267edc4a4440dd55b97f3384474f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26XX_AdcChannelLutEntry</type>
      <name>ADCBufCC26XX_AdcChannelLutEntry</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a99e197fd4f1d0021a0737f74f80d2643</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26XX_ParamsExtension</type>
      <name>ADCBufCC26XX_ParamsExtension</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>afac55b5d59cd880fecafb9a71f73162b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26XX_HWAttrs</type>
      <name>ADCBufCC26XX_HWAttrs</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a22b04734af9e7cbaa1915f92942918fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26XX_Object</type>
      <name>ADCBufCC26XX_Object</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7963f859847ffe0853c06219b63ceb42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCBufCC26XX_Object *</type>
      <name>ADCBufCC26XX_Handle</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1bd07a1b826d70701a49d7d951152504</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBufCC26XX_Sampling_Mode</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a816f299f98f8fc3cc1124cda74a18d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPING_MODE_SYNCHRONOUS</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a816f299f98f8fc3cc1124cda74a18d10a946b45558c94c6f3ade872941a9a3e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPING_MODE_ASYNCHRONOUS</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a816f299f98f8fc3cc1124cda74a18d10a528cdd3ff0e276e7fc85cc6b116af432</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBufCC26XX_Sampling_Duration</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_2P7_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fbacd4d4af4fd7304ce2184fa9a22600a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_5P3_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba4164b576bef7b70e1a3f69eec57a6f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_10P6_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba49ca33f11fcff33041eb0cbc19a089b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_21P3_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba0156bc1aa641d10df8a820395f7193bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_42P6_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba150c59385da570a79aea1e4c0c1e914b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_85P3_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba921a55551370c46180f3ab729a4da912</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_170_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fbad1d82e9bb12e373860ad36ba6cee7a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_341_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba5d7638fadf06f706a13588e0c8957b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_682_US</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba41124a9e4bc93d0ebbc01b78bc3e9a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_1P37_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fbacb02ad19af7a0912549716115af13f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_2P73_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fbab73858ae3ffa520756cdfca77df35602</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_5P46_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fba4dea9b186e256b8cfb71722ae689889d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_SAMPLING_DURATION_10P9_MS</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4a95bf383dea0206b6708496a034a9fbaf5746a2bb589e0fc237dfe7cea002859</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCBufCC26XX_Reference_Source</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a31a41d718712f3d4ff936bb566da0d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_FIXED_REFERENCE</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a31a41d718712f3d4ff936bb566da0d0aad02c445be8959c127744cfe9519d1770</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCBufCC26XX_VDDS_REFERENCE</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>a31a41d718712f3d4ff936bb566da0d0aa4b0c0d3239bf0e32219c87df11baa0c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ADCBuf_FxnTable</type>
      <name>ADCBufCC26XX_fxnTable</name>
      <anchorfile>_a_d_c_buf_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab26fa75463dae8b7a8c9d7585735177a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ADCCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/adc/</path>
    <filename>_a_d_c_c_c26_x_x_8h</filename>
    <includes id="_a_d_c_8h" name="ADC.h" local="no" imported="no">ti/drivers/ADC.h</includes>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">ADCCC26XX_HWAttrs</class>
    <class kind="struct">ADCCC26XX_Object</class>
    <member kind="typedef">
      <type>enum ADCCC26XX_Sampling_Duration</type>
      <name>ADCCC26XX_Sampling_Duration</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a267282cd7cedc4f9562dd5ed3e112b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCCC26XX_Reference_Source</type>
      <name>ADCCC26XX_Reference_Source</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3690de700d303a304c078243b30df922</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ADCCC26XX_Trigger_Source</type>
      <name>ADCCC26XX_Trigger_Source</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a09a1c4f09a9c71437616da95458b10ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCCC26XX_HWAttrs</type>
      <name>ADCCC26XX_HWAttrs</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a02974734e3c626de2dfe586e4498addf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADCCC26XX_Object</type>
      <name>ADCCC26XX_Object</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2aca732c47705fd1004c9fa5d031620d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCCC26XX_Sampling_Duration</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_2P7_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1aba2a098b9bcf13ffe3dc3c5ef69c5452</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_5P3_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a9827d7266c7e2f27fad6bddbf30a71a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_10P6_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a250013498c4ab0a0b1dbfd950a107d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_21P3_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a4d2a5b63503209857e898330299c1f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_42P6_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a27254a92037a20001aaa223facd1bc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_85P3_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a476cb15ad1d204ad35b8e69a396dc476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_170_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a84388397aab7566b272db3b0365e427c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_341_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a867e94bb4303cf3cd543e3e212e5e45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_682_US</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1ab923c950eb31510f3e2bfa377c8b83e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_1P37_MS</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a15f0105a973d2c2c8e0a249909a4396a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_2P73_MS</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1aa9a8a57d24bd02b0fa4cf4073541ade9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_5P46_MS</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1a83687d85af11cd1c395629545c105e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_SAMPLING_DURATION_10P9_MS</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb3cf48cf9cac58a07ade90966bdb8f1aa342c522b5290ad8e8c031ffc5969173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCCC26XX_Reference_Source</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5ed293d16be70036c4008865dbe33b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_FIXED_REFERENCE</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5ed293d16be70036c4008865dbe33b98a31a665bebb0b9c1edc53ca94ff5baa56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_VDDS_REFERENCE</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5ed293d16be70036c4008865dbe33b98a2591afa01edb684501f9c60f646e2dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ADCCC26XX_Trigger_Source</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac122319c50b5f443f4d3254a2b2d58f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADCCC26XX_TRIGGER_MANUAL</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac122319c50b5f443f4d3254a2b2d58f0aafe64b4149875b946350262169812030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ADC_FxnTable</type>
      <name>ADCCC26XX_fxnTable</name>
      <anchorfile>_a_d_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4e18261700c8a99141f2507c54c13227</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AESCBC.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_e_s_c_b_c_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESCBC_Operation</class>
    <class kind="struct">AESCBC_Config</class>
    <class kind="struct">AESCBC_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>AESCBC_STATUS_RESERVED</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a3cd55c1962740cbb6e3217d49ddb8cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCBC_STATUS_SUCCESS</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a0bcb271aa7f9aee37469d242670b6d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCBC_STATUS_ERROR</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a114c760826307af69a93538773a58185</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCBC_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>ad92a5502a5a56aaf28b7d930be275271</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCBC_STATUS_CANCELED</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>aa3ff5d2f23cdceb6652dbe490c6ec93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCBC_Config *</type>
      <name>AESCBC_Handle</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>aad1c9cb398b479fa9590c0d6986a0180</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCBC_Config</type>
      <name>AESCBC_Config</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>abb3360f8099898fa0fa5f8b8050764ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>AESCBC_CallbackFxn</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a02064543ae31ffb15b93a2c090a3531d</anchor>
      <arglist>)(AESCBC_Handle handle, int_fast16_t returnValue, AESCBC_Operation *operation, AESCBC_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCBC_ReturnBehavior</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a34f3e7f586935c9328167d1e03973af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a34f3e7f586935c9328167d1e03973af5acedc995468fd1ad451c6aa24f56d456d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a34f3e7f586935c9328167d1e03973af5ad4cf399115e78f5253b12f88605d212e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a34f3e7f586935c9328167d1e03973af5aeccf5cad47aac1edcef820125f7c361d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCBC_Mode</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a3d0b3dbc7f859b9d0c6acf102adb4d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_MODE_ENCRYPT</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a3d0b3dbc7f859b9d0c6acf102adb4d39a6937032fe648623f9b9a5f7b4dcce26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_MODE_DECRYPT</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a3d0b3dbc7f859b9d0c6acf102adb4d39afacbd481470a984c92878b82c17a825c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCBC_OperationType</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a498551584800977637726dde45cd9959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_OPERATION_TYPE_ENCRYPT</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a498551584800977637726dde45cd9959ae9f86ebbb5b543515e8cf4b63d533924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCBC_OPERATION_TYPE_DECRYPT</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a498551584800977637726dde45cd9959a9c63c1a604a8ef68797d84bed9cf20a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCBC_init</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a72ae710de057086ca1d4e96f1a92a9a1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCBC_Params_init</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a3c0ff1f31e58390f960f927f12756a98</anchor>
      <arglist>(AESCBC_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>AESCBC_Handle</type>
      <name>AESCBC_open</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>ac4e418c0f71f339935513126d37fbc9f</anchor>
      <arglist>(uint_least8_t index, const AESCBC_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCBC_close</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a3189993c935516a40c09110092e6ef19</anchor>
      <arglist>(AESCBC_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCBC_Operation_init</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a0864488e0826602937308930ab60e200</anchor>
      <arglist>(AESCBC_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCBC_oneStepEncrypt</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a692f47fc6e0abc064296a813400e7384</anchor>
      <arglist>(AESCBC_Handle handle, AESCBC_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCBC_oneStepDecrypt</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>af06b14a1067da3ea8c39baa2a9eac695</anchor>
      <arglist>(AESCBC_Handle handle, AESCBC_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCBC_cancelOperation</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a807f254a97d04e2b8e2c73d026d3c81a</anchor>
      <arglist>(AESCBC_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>AESCBC_Handle</type>
      <name>AESCBC_construct</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a0cab3841802fa8f8cb8d19993d25e88d</anchor>
      <arglist>(AESCBC_Config *config, const AESCBC_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCBC_getNextIv</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a0ce535564e61cfbf3c8f5b18b5eb9449</anchor>
      <arglist>(AESCBC_Handle handle, uint8_t *iv)</arglist>
    </member>
    <member kind="variable">
      <type>const AESCBC_Params</type>
      <name>AESCBC_defaultParams</name>
      <anchorfile>_a_e_s_c_b_c_8h.html</anchorfile>
      <anchor>a65d438667291f32d79714a3b24b7e9bb</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_e_s_c_b_c_8h">ti_drivers_AESCBC_Overview</docanchor>
    <docanchor file="_a_e_s_c_b_c_8h">ti_drivers_AESCBC_Usage</docanchor>
    <docanchor file="_a_e_s_c_b_c_8h">ti_drivers_AESCBC_Synopsis</docanchor>
    <docanchor file="_a_e_s_c_b_c_8h">ti_drivers_AESCBC_Synopsis_Code</docanchor>
    <docanchor file="_a_e_s_c_b_c_8h">ti_drivers_AESCBC_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>AESCBCCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/aescbc/</path>
    <filename>_a_e_s_c_b_c_c_c26_x_x_8h</filename>
    <includes id="_a_e_s_c_b_c_8h" name="AESCBC.h" local="no" imported="no">ti/drivers/AESCBC.h</includes>
    <class kind="struct">AESCBCCC26XX_HWAttrs</class>
    <class kind="struct">AESCBCCC26XX_Object</class>
    <member kind="typedef">
      <type>struct AESCBCCC26XX_HWAttrs</type>
      <name>AESCBCCC26XX_HWAttrs</name>
      <anchorfile>_a_e_s_c_b_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a10d95f198c95f0d09926eef071edc2a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCBCCC26XX_Object</type>
      <name>AESCBCCC26XX_Object</name>
      <anchorfile>_a_e_s_c_b_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a021fd74c5691de18a3577d60279d2b30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AESCCM.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_e_s_c_c_m_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESCCM_Operation</class>
    <class kind="struct">AESCCM_Config</class>
    <class kind="struct">AESCCM_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>AESCCM_STATUS_RESERVED</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a92006b2b0e406614ca650c88b5d393ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCCM_STATUS_SUCCESS</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>afde7b16d8daa5643d3d9e4c0ed9fe60d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCCM_STATUS_ERROR</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>af5a6b56e602e7d8730b86ffd0ec46938</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCCM_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>aabf9f8e552b6a5a12f512d6c862f04fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCCM_STATUS_MAC_INVALID</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>adf7ebf9930072745c454b0bf932d694b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCCM_STATUS_CANCELED</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>aedda3f3cdad624c827dffda8e2cad3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCCM_Config *</type>
      <name>AESCCM_Handle</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a9bf4f0d7823cff2aca7c8067eddbd408</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCCM_Config</type>
      <name>AESCCM_Config</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>acf31c69639d2dfebadc679f2895088d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>AESCCM_CallbackFxn</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>adfbf1fbc56aac864fe4953893361dcc1</anchor>
      <arglist>)(AESCCM_Handle handle, int_fast16_t returnValue, AESCCM_Operation *operation, AESCCM_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCCM_ReturnBehavior</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>acd172e5c4f62e036371b2095c0af6e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>acd172e5c4f62e036371b2095c0af6e4aab768e7c12bd6bf9e87bfba1c6bf3d2a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>acd172e5c4f62e036371b2095c0af6e4aa1761cf2c8bd972890a0193f772281a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>acd172e5c4f62e036371b2095c0af6e4aa8077fa385d151d93ed7762a998abd567</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCCM_Mode</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>aa8e2ac1695595c7d416ba650c9110b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_MODE_ENCRYPT</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>aa8e2ac1695595c7d416ba650c9110b5ca1366ac9470982aa8b1457e305df7e026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_MODE_DECRYPT</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>aa8e2ac1695595c7d416ba650c9110b5ca4f3b682868aaacf1a33856fa85543ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCCM_OperationType</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a8b4c0474e73f047a2b920ba2acd5fed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_OPERATION_TYPE_ENCRYPT</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a8b4c0474e73f047a2b920ba2acd5fed0a1c0ce6f811d6c8d513027375449b9fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCCM_OPERATION_TYPE_DECRYPT</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a8b4c0474e73f047a2b920ba2acd5fed0ab20c9152379db6153e39a74f09d0a874</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCCM_init</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a51982c7e9ace406edb69a0345f4c9dfc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCCM_Params_init</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>ab48597e7c8931af81234c786efac7cee</anchor>
      <arglist>(AESCCM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>AESCCM_Handle</type>
      <name>AESCCM_open</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>ac4784269a925110785148701b57e156d</anchor>
      <arglist>(uint_least8_t index, AESCCM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCCM_close</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a2cb2636c081846cfc81b801999a21ec5</anchor>
      <arglist>(AESCCM_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCCM_Operation_init</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a737c52bee6913123f4f1fa54c5c3c2a0</anchor>
      <arglist>(AESCCM_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCCM_oneStepEncrypt</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a38264845fa8b2d9da3cebc4a45a78d0a</anchor>
      <arglist>(AESCCM_Handle handle, AESCCM_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCCM_oneStepDecrypt</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>ae092228253d3a51ea081f99e9865de90</anchor>
      <arglist>(AESCCM_Handle handle, AESCCM_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCCM_cancelOperation</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>afc9d5aa7105de5d54f1e380efa0eaef0</anchor>
      <arglist>(AESCCM_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const AESCCM_Params</type>
      <name>AESCCM_defaultParams</name>
      <anchorfile>_a_e_s_c_c_m_8h.html</anchorfile>
      <anchor>a7057e1ce2ca8a0f7087a8a664ac3560d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_e_s_c_c_m_8h">ti_drivers_AESCCM_Overview</docanchor>
    <docanchor file="_a_e_s_c_c_m_8h">AESCCM_multi_row</docanchor>
    <docanchor file="_a_e_s_c_c_m_8h">ti_drivers_AESCCM_Usage</docanchor>
    <docanchor file="_a_e_s_c_c_m_8h">ti_drivers_AESCCM_Synopsis</docanchor>
    <docanchor file="_a_e_s_c_c_m_8h">ti_drivers_AESCCM_Synopsis_Code</docanchor>
    <docanchor file="_a_e_s_c_c_m_8h">ti_drivers_AESCCM_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>AESCCMCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/aesccm/</path>
    <filename>_a_e_s_c_c_m_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_a_e_s_c_c_m_8h" name="AESCCM.h" local="no" imported="no">ti/drivers/AESCCM.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESCCMCC26XX_HWAttrs</class>
    <class kind="struct">AESCCMCC26XX_Object</class>
    <member kind="typedef">
      <type>struct AESCCMCC26XX_HWAttrs</type>
      <name>AESCCMCC26XX_HWAttrs</name>
      <anchorfile>_a_e_s_c_c_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6c5045ef0ec0b81fc5871eea11ad8020</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCCMCC26XX_Object</type>
      <name>AESCCMCC26XX_Object</name>
      <anchorfile>_a_e_s_c_c_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a48db5d6534c83a878983c596b1f8dfdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AESCTR.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_e_s_c_t_r_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESCTR_Operation</class>
    <class kind="struct">AESCTR_Config</class>
    <class kind="struct">AESCTR_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>AESCTR_STATUS_RESERVED</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a34779c06165f5cb664ef629c238b41ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTR_STATUS_SUCCESS</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a5abdae97a12f798523a6a5835747829e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTR_STATUS_ERROR</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>ad78ff1fad9e9ef24e0dadcc8abe072df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTR_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>afbb647a50a8af8a4c924f338e1bb200a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTR_STATUS_CANCELED</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a65f0b734aea8c3de3fe797b89d9e226b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESCTR_Config</type>
      <name>AESCTR_Config</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a3b7c9591501398f86fc12453ba172491</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AESCTR_Config *</type>
      <name>AESCTR_Handle</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>aa0294b11b975a0227891d616ce130503</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>AESCTR_CallbackFxn</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>aea33ebeb403836d6b73290a7f0c28505</anchor>
      <arglist>)(AESCTR_Handle handle, int_fast16_t returnValue, AESCTR_Operation *operation, AESCTR_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCTR_ReturnBehavior</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a4bca2f2e747d2006dafafb098fd2f2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a4bca2f2e747d2006dafafb098fd2f2b4a40c3b7e8db7ff4ebd81a9f6477139c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a4bca2f2e747d2006dafafb098fd2f2b4ade55945ff11c47457a75d97db2a20b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a4bca2f2e747d2006dafafb098fd2f2b4a4a75cbc6c9b0ccde83c5cf9c5c5f053e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCTR_Mode</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a1b77091ac8d8c88f6d7a9514ab8e0cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_MODE_ENCRYPT</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a1b77091ac8d8c88f6d7a9514ab8e0cc6a81e20f47ee293654cec99f123beb4a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_MODE_DECRYPT</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a1b77091ac8d8c88f6d7a9514ab8e0cc6ab4536ba0413eabcc6f7bfe2296b44c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCTR_OperationType</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a09812f1f01333df2b7cf00570b8e529e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_OPERATION_TYPE_ENCRYPT</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a09812f1f01333df2b7cf00570b8e529eaa67b3972817bf145ee9036fd62e70c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTR_OPERATION_TYPE_DECRYPT</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a09812f1f01333df2b7cf00570b8e529eaefecbb7bf029eedce369d76698411543</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTR_init</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a09d8aeedd73b5cb95c4bc3e8089ea8ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTR_Params_init</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a1f896d0c0acd590dcc9cc796fa96a647</anchor>
      <arglist>(AESCTR_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>AESCTR_Handle</type>
      <name>AESCTR_open</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>ae60ed1df2e6c103601ad406b5ed7664b</anchor>
      <arglist>(uint_least8_t index, const AESCTR_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTR_close</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>acb72a953b2a3426278555b267824f817</anchor>
      <arglist>(AESCTR_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTR_Operation_init</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a079426e5d8924433c8a864894b1aaf62</anchor>
      <arglist>(AESCTR_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCTR_oneStepEncrypt</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>ac0c6e314cc5ac9f3d4357bfdb616e589</anchor>
      <arglist>(AESCTR_Handle handle, AESCTR_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCTR_oneStepDecrypt</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a2733158767222bed2a82b03ab90197c6</anchor>
      <arglist>(AESCTR_Handle handle, AESCTR_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCTR_cancelOperation</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>a738efd3afe2bf4a14ebe9a19aecbe91f</anchor>
      <arglist>(AESCTR_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const AESCTR_Params</type>
      <name>AESCTR_defaultParams</name>
      <anchorfile>_a_e_s_c_t_r_8h.html</anchorfile>
      <anchor>ac30036f5de20f0c36474dc5470c1fc35</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_e_s_c_t_r_8h">ti_drivers_AESCTR_Overview</docanchor>
    <docanchor file="_a_e_s_c_t_r_8h">ti_drivers_AESCTR_Usage</docanchor>
    <docanchor file="_a_e_s_c_t_r_8h">ti_drivers_AESCTR_Synopsis</docanchor>
    <docanchor file="_a_e_s_c_t_r_8h">ti_drivers_AESCTR_Synopsis_Code</docanchor>
    <docanchor file="_a_e_s_c_t_r_8h">ti_drivers_AESCTR_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>AESCTRCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/aesctr/</path>
    <filename>_a_e_s_c_t_r_c_c26_x_x_8h</filename>
    <includes id="_a_e_s_c_t_r_8h" name="AESCTR.h" local="no" imported="no">ti/drivers/AESCTR.h</includes>
    <class kind="struct">AESCTRCC26XX_HWAttrs</class>
    <class kind="struct">AESCTRCC26XX_Object</class>
  </compound>
  <compound kind="file">
    <name>AESCTRDRBG.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_e_s_c_t_r_d_r_b_g_8h</filename>
    <includes id="_a_e_s_c_t_r_8h" name="AESCTR.h" local="no" imported="no">ti/drivers/AESCTR.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESCTRDRBG_Config</class>
    <class kind="struct">AESCTRDRBG_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_STATUS_RESERVED</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a6f128f08bbf34ba31a3c287de8875f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_STATUS_SUCCESS</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a1e05a04971e87a3f4a4f2868b87c2bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_STATUS_ERROR</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>aa99743e9410987ed461857c4be2aec56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>afa91ce263cd14074a2e0dd5ae25b9824</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_STATUS_RESEED_REQUIRED</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a1b1b1edb3f2f940cf9209e1cb3b99288</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_AES_BLOCK_SIZE_BYTES</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a3dcf06dd21f3d01d2eeffc78bb3590e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum AESCTRDRBG_ReturnBehavior_</type>
      <name>AESCTRDRBG_ReturnBehavior</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>afe2dcd2b1259ff74ef3d5da56ccbc8fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AESCTRDRBG_Config *</type>
      <name>AESCTRDRBG_Handle</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>aad30ad6c6ed40050bcd4d8f1dc56b1df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCTRDRBG_AES_KEY_LENGTH</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a1482c6747f5594d24d37f852967386a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTRDRBG_AES_KEY_LENGTH_128</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a1482c6747f5594d24d37f852967386a8ae492ad9709beb7ac44c67e282b9c1abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTRDRBG_AES_KEY_LENGTH_256</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a1482c6747f5594d24d37f852967386a8ad9c83f7b6f813e9f8276e76cc850e0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCTRDRBG_SEED_LENGTH</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a2ce013814c4e735e092d9c56a5790103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTRDRBG_SEED_LENGTH_AES_128</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a2ce013814c4e735e092d9c56a5790103a11c804896f9c835dce56900c8469d03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTRDRBG_SEED_LENGTH_AES_256</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a2ce013814c4e735e092d9c56a5790103a80f638233529d83c63ba4ab6328084ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESCTRDRBG_ReturnBehavior_</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a8d73a9f02ade6c105630c2da45b067ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTRDRBG_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a8d73a9f02ade6c105630c2da45b067ffaecb915547715788b421fd2b4a791823c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESCTRDRBG_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a8d73a9f02ade6c105630c2da45b067ffa00f06cc10c6d8b7a120d06ede4133496</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTRDRBG_init</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>ad53f705cf508c26c1a7434b2329bd494</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTRDRBG_Params_init</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a02e4a1a12968ee0122a7ed5eb4ea1eaa</anchor>
      <arglist>(AESCTRDRBG_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>AESCTRDRBG_Handle</type>
      <name>AESCTRDRBG_open</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>ae44b1a3f0dc0f0e3211d165f40fa5236</anchor>
      <arglist>(uint_least8_t index, const AESCTRDRBG_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESCTRDRBG_close</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a2c44d7603a5fdf712e8ec0c0b2bd2e1c</anchor>
      <arglist>(AESCTRDRBG_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCTRDRBG_getBytes</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>ae6ec8bac3354b04546b7027a7500b5e9</anchor>
      <arglist>(AESCTRDRBG_Handle handle, CryptoKey *randomBytes)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESCTRDRBG_reseed</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>a8633b53b7ce9befaf9b13fe24d533801</anchor>
      <arglist>(AESCTRDRBG_Handle handle, const void *seed, const void *additionalData, size_t additionalDataLength)</arglist>
    </member>
    <member kind="variable">
      <type>const AESCTRDRBG_Params</type>
      <name>AESCTRDRBG_defaultParams</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_8h.html</anchorfile>
      <anchor>ad087c3f8f679279481615c1ddc3ffc60</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_e_s_c_t_r_d_r_b_g_8h">ti_drivers_AESCTRDRBG_Overview</docanchor>
    <docanchor file="_a_e_s_c_t_r_d_r_b_g_8h">ti_drivers_AESCTRDRBG_Usage</docanchor>
    <docanchor file="_a_e_s_c_t_r_d_r_b_g_8h">ti_drivers_AESCTRDRBG_Synopsis</docanchor>
    <docanchor file="_a_e_s_c_t_r_d_r_b_g_8h">ti_drivers_AESCTRDRBG_Synopsis_Code</docanchor>
    <docanchor file="_a_e_s_c_t_r_d_r_b_g_8h">ti_drivers_AESCTRDRBG_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>AESCTRDRBGXX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/aesctrdrbg/</path>
    <filename>_a_e_s_c_t_r_d_r_b_g_x_x_8h</filename>
    <includes id="_a_e_s_c_t_r_d_r_b_g_8h" name="AESCTRDRBG.h" local="no" imported="no">ti/drivers/AESCTRDRBG.h</includes>
    <class kind="struct">AESCTRDRBGXX_HWAttrs</class>
    <class kind="struct">AESCTRDRBGXX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_MAX_KEY_LENGTH</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_x_x_8h.html</anchorfile>
      <anchor>a204dbdf126458f5eb5a9c861f2ca54e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESCTRDRBG_MAX_SEED_LENGTH</name>
      <anchorfile>_a_e_s_c_t_r_d_r_b_g_x_x_8h.html</anchorfile>
      <anchor>af45b4cfd4c8983c3cfb2c97c1d4892ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AESECB.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_e_s_e_c_b_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESECB_Operation</class>
    <class kind="struct">AESECB_Config</class>
    <class kind="struct">AESECB_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>AESECB_STATUS_RESERVED</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a5d1005b6b5eed999a82f89f282bf384f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESECB_STATUS_SUCCESS</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a6dfa9afab09668259531f58273fa4e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESECB_STATUS_ERROR</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>ab8792e83e4a2350e94b1f2a32d4886a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESECB_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a5d09cd5661ac53f7ba3141e23fde65a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESECB_STATUS_CANCELED</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a4c14a4a0b8bc8798e5280761c420aa6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESECB_Config *</type>
      <name>AESECB_Handle</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a5b46eda44c0128b792fa59620c90ca67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESECB_Config</type>
      <name>AESECB_Config</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>ace5d2e09711a3a137195ef57814f3d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>AESECB_CallbackFxn</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a2017e1521b3eeb49c8917dbe1dabf953</anchor>
      <arglist>)(AESECB_Handle handle, int_fast16_t returnValue, AESECB_Operation *operation, AESECB_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESECB_ReturnBehavior</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>abc07192814983f78a08af0f306959bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>abc07192814983f78a08af0f306959bfba945f7703e248cd2d0fc2a08077030e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>abc07192814983f78a08af0f306959bfba09c85edf8278d95609ef9cda74e21640</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>abc07192814983f78a08af0f306959bfba8fb6022bf8730ca0f113fe339b3cf0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESECB_Mode</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a15ba34a139e3ccb671675ff1f8cd42a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_MODE_ENCRYPT</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a15ba34a139e3ccb671675ff1f8cd42a5a444b0bc4a6fa39374155fc2f67fc6a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_MODE_DECRYPT</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a15ba34a139e3ccb671675ff1f8cd42a5a2957e9be6c5c1ce87d927609ce47fb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESECB_OperationType</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>aba58ffed04918dd60cf61212e2adb8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_OPERATION_TYPE_ENCRYPT</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>aba58ffed04918dd60cf61212e2adb8d8af9c903637981109af6af15c94aaf36b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESECB_OPERATION_TYPE_DECRYPT</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>aba58ffed04918dd60cf61212e2adb8d8af42ad89357fc2f25e83fb4d7033bc08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESECB_init</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a4f4274c6aa928e8e10d3e516e73f77ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESECB_Params_init</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>ab200c39cb5a9cc537a9a6047c89d5651</anchor>
      <arglist>(AESECB_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>AESECB_Handle</type>
      <name>AESECB_open</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a970d834b0e1987baa609cb9498a67a0d</anchor>
      <arglist>(uint_least8_t index, const AESECB_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESECB_close</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a55c096b42583d88be9f044dcffad64a8</anchor>
      <arglist>(AESECB_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESECB_Operation_init</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a44a248dfcc9794b28a2eb8eb5570af2d</anchor>
      <arglist>(AESECB_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESECB_oneStepEncrypt</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a8b760e2e52d714c3fb8faf74feb38b3a</anchor>
      <arglist>(AESECB_Handle handle, AESECB_Operation *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESECB_oneStepDecrypt</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>abdd64e5e2b446ef0b884f9d3862d0463</anchor>
      <arglist>(AESECB_Handle handle, AESECB_Operation *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESECB_cancelOperation</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a95851e372c5fb57b80036034d0d829b8</anchor>
      <arglist>(AESECB_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>AESECB_Handle</type>
      <name>AESECB_construct</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>ad955dd76b7e143261e9727eeaddc7f96</anchor>
      <arglist>(AESECB_Config *config, const AESECB_Params *params)</arglist>
    </member>
    <member kind="variable">
      <type>const AESECB_Params</type>
      <name>AESECB_defaultParams</name>
      <anchorfile>_a_e_s_e_c_b_8h.html</anchorfile>
      <anchor>a7a7eab07a0ed40f1e9320f973a74fb8e</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_e_s_e_c_b_8h">ti_drivers_AESECB_Overview</docanchor>
    <docanchor file="_a_e_s_e_c_b_8h">ti_drivers_AESECB_Usage</docanchor>
    <docanchor file="_a_e_s_e_c_b_8h">ti_drivers_AESECB_Synopsis</docanchor>
    <docanchor file="_a_e_s_e_c_b_8h">ti_drivers_AESECB_Synopsis_Code</docanchor>
    <docanchor file="_a_e_s_e_c_b_8h">ti_drivers_AESECB_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>AESECBCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/aesecb/</path>
    <filename>_a_e_s_e_c_b_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_a_e_s_e_c_b_8h" name="AESECB.h" local="no" imported="no">ti/drivers/AESECB.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESECBCC26XX_HWAttrs</class>
    <class kind="struct">AESECBCC26XX_Object</class>
    <member kind="typedef">
      <type>struct AESECBCC26XX_HWAttrs</type>
      <name>AESECBCC26XX_HWAttrs</name>
      <anchorfile>_a_e_s_e_c_b_c_c26_x_x_8h.html</anchorfile>
      <anchor>aee2df425f6f50114e70061723022388f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESECBCC26XX_Object</type>
      <name>AESECBCC26XX_Object</name>
      <anchorfile>_a_e_s_e_c_b_c_c26_x_x_8h.html</anchorfile>
      <anchor>a601f7a88a0a7f8cbe75b722e94025343</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AESGCM.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_a_e_s_g_c_m_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESGCM_Operation</class>
    <class kind="struct">AESGCM_Config</class>
    <class kind="struct">AESGCM_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>AESGCM_STATUS_RESERVED</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a4c11eb3acc40e87633c5921ddcb367cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESGCM_STATUS_SUCCESS</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>aca8f2f76739e5403a8b465da4a0e9379</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESGCM_STATUS_ERROR</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a5c7c063df15cb19f2176358681dbe963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESGCM_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a09267071cac6f0e9cceddf1fb85049d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESGCM_STATUS_MAC_INVALID</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a0afeb773b5c22467af1019b0361dc3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AESGCM_STATUS_CANCELED</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>ae02f2ab16e0c9e15fb6670528de97118</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESGCM_Config *</type>
      <name>AESGCM_Handle</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a369d4b2ab569230d3df201ff77b53825</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESGCM_Config</type>
      <name>AESGCM_Config</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a50546ae338bb51f6e81857b7be3525eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>AESGCM_CallbackFxn</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a93425ed5237036ac28f882518d702013</anchor>
      <arglist>)(AESGCM_Handle handle, int_fast16_t returnValue, AESGCM_Operation *operation, AESGCM_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESGCM_ReturnBehavior</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a194ade55cf88db59f7cf2f836ce37145</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a194ade55cf88db59f7cf2f836ce37145a956aafcfb3b1293e1e51bc84bd21dfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a194ade55cf88db59f7cf2f836ce37145a94ec72fe16e4cd2511b20f9ff8f99026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a194ade55cf88db59f7cf2f836ce37145ad3d5fdbf9caca9ce5c9ce9380cf2d202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESGCM_Mode</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a22bf11aa6287f086823a1d6c1fc32de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_MODE_ENCRYPT</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a22bf11aa6287f086823a1d6c1fc32de8ad528f2f1ac8fd56adbcaf2a205c649ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_MODE_DECRYPT</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a22bf11aa6287f086823a1d6c1fc32de8ae14730c470a9995870f3f72e0cc09c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AESGCM_OperationType</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a6c46f7df33bb1a4e7d664c1ec056eb86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_OPERATION_TYPE_ENCRYPT</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a6c46f7df33bb1a4e7d664c1ec056eb86aaef2721c0d4a24bb1e3e4c24a7565963</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AESGCM_OPERATION_TYPE_DECRYPT</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a6c46f7df33bb1a4e7d664c1ec056eb86a9094bc77d234fe95e2d664a9cc555b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESGCM_init</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a997f24b0b4b6dc5c425df8dfe2ceadfa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESGCM_Params_init</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a6797cf0b48d6455adb41c65a42de11dd</anchor>
      <arglist>(AESGCM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>AESGCM_Handle</type>
      <name>AESGCM_open</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a56f3f3e5f2fe7e9b12bc208fba81406c</anchor>
      <arglist>(uint_least8_t index, AESGCM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESGCM_close</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>ab8ccb816d0e609a87bcb08c10b0185a3</anchor>
      <arglist>(AESGCM_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AESGCM_Operation_init</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a7632b455c1c1a08ab12155b26734dcf6</anchor>
      <arglist>(AESGCM_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESGCM_oneStepEncrypt</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a8d10ed85034fdcfb0cc92acec0cfa12e</anchor>
      <arglist>(AESGCM_Handle handle, AESGCM_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESGCM_oneStepDecrypt</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a46cb4609b19aeb73b78361a8cef2825d</anchor>
      <arglist>(AESGCM_Handle handle, AESGCM_Operation *operationStruct)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>AESGCM_cancelOperation</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a8898853d26da1c3adb0ea8bf11e811c2</anchor>
      <arglist>(AESGCM_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const AESGCM_Params</type>
      <name>AESGCM_defaultParams</name>
      <anchorfile>_a_e_s_g_c_m_8h.html</anchorfile>
      <anchor>a1e53ae163c5726e54da103f77463c820</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_e_s_g_c_m_8h">ti_drivers_AESGCM_Overview</docanchor>
    <docanchor file="_a_e_s_g_c_m_8h">ti_drivers_AESGCM_Usage</docanchor>
    <docanchor file="_a_e_s_g_c_m_8h">ti_drivers_AESGCM_Synopsis</docanchor>
    <docanchor file="_a_e_s_g_c_m_8h">ti_drivers_AESGCM_Synopsis_Code</docanchor>
    <docanchor file="_a_e_s_g_c_m_8h">ti_drivers_AESGCM_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>AESGCMCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/aesgcm/</path>
    <filename>_a_e_s_g_c_m_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_a_e_s_g_c_m_8h" name="AESGCM.h" local="no" imported="no">ti/drivers/AESGCM.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">AESGCMCC26XX_HWAttrs</class>
    <class kind="struct">AESGCMCC26XX_Object</class>
    <member kind="typedef">
      <type>struct AESGCMCC26XX_HWAttrs</type>
      <name>AESGCMCC26XX_HWAttrs</name>
      <anchorfile>_a_e_s_g_c_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab8893fc0dbb28eca367ca67ccab193b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct AESGCMCC26XX_Object</type>
      <name>AESGCMCC26XX_Object</name>
      <anchorfile>_a_e_s_g_c_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0a27ac3f24d5a0a76be6e3bfe84b4238</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AnsiColor.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_ansi_color_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_GET_OVERRIDE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a49965362e47696a62f21ffa09ef0076c</anchor>
      <arglist>(_1, _2, _3, _4, _5, NAME,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR5</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ad57e32136cc9d69fe509c755e2cd4cc3</anchor>
      <arglist>(a, b, c, d, e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR4</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a2026886265de7d76010acce7509775f6</anchor>
      <arglist>(a, b, c, d)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR3</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a20c6ab13ea229a5b74079981271b06cd</anchor>
      <arglist>(a, b, c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR2</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>abd4017412a5fd15fa1178a8ccdfc0201</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR1</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a90ffafe7a1d89932d930575af75a0ddd</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_BLACK</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a043724f878efc719971f723a4d92a84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_RED</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>abcd917cb35f72b774d84ee81afc2163c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_GREEN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>aa13fecf1ab43ae10c79a0f8bdbed9b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_YELLOW</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a4fc1374b41c3b66434c11a58cac171e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_BLUE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ab425ef9a4ca402b1ac39443c317e54e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_MAGENTA</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a30821f9c459eb0e6302a8386408f7615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_CYAN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a36323a8866bed9b28665282e1491ad2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_WHITE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ab441c7b162f6d598a7a42a96ede47715</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_BLACK</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a6cb00a7e9010abe71653852315e7e63c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_RED</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a58929aceffefa7fe319147549ad607e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_GREEN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a4b4a6f764b796b729119b127919d0b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_YELLOW</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a908208bb9586e8e4af51d5b0c58f5b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_BLUE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a9065c6ca2865d2db98f740163de39637</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_MAGENTA</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>aa828e82796953a349685d267542ad3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_CYAN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a9def07af3e36ad6b185e295e169dfd90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_WHITE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a43dad261a112ea2bc013caa4287a3b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_RESET</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>aac41ed0a29c21ed530fc40a65891ba7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_BOLD</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ad9fe9116a2d4bcd648583ed5db66bfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_UNDERLINE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a5f5d28fecca1fd8c0d6e961078e1c0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_BLINK</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a5bec963624ac2d111096807fa9c8ce13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANSI_COLOR</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ae6efc8fc733b092f8c099d238123f946</anchor>
      <arglist>(...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Board.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_board_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>Board_init</name>
      <anchorfile>_board_8h.html</anchorfile>
      <anchor>a6c191e6138454022bba4dbcb4278f141</anchor>
      <arglist>(void)</arglist>
    </member>
    <docanchor file="_board_8h">ti_drivers_Board_Synopsis</docanchor>
    <docanchor file="_board_8h">ti_drivers_Board_Synopsis_Code</docanchor>
    <docanchor file="_board_8h">ti_drivers_I2C_Example_portable</docanchor>
  </compound>
  <compound kind="file">
    <name>Codec1.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/pdm/</path>
    <filename>_codec1_8h</filename>
    <member kind="function">
      <type>uint8_t</type>
      <name>Codec1_encodeSingle</name>
      <anchorfile>_codec1_8h.html</anchorfile>
      <anchor>aacb6c3a21abe774e4c4de11f1d896b93</anchor>
      <arglist>(int16_t audSample)</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>Codec1_decodeSingle</name>
      <anchorfile>_codec1_8h.html</anchorfile>
      <anchor>a2760bbc776c902b16aac59faac057e2d</anchor>
      <arglist>(uint8_t nibble_4bits)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>Codec1_encodeBuff</name>
      <anchorfile>_codec1_8h.html</anchorfile>
      <anchor>abc06b2377cab0c2dc9d81603af17fdc5</anchor>
      <arglist>(uint8_t *dst, int16_t *src, int16_t srcSize, int8_t *si, int16_t *pv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Codec1_decodeBuff</name>
      <anchorfile>_codec1_8h.html</anchorfile>
      <anchor>a77a63b5410a7d5feea0b56808b6c7b96</anchor>
      <arglist>(int16_t *dst, uint8_t *src, unsigned srcSize, int8_t *si, int16_t *pv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/crypto/</path>
    <filename>_crypto_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">CryptoCC26XX_Params</class>
    <class kind="struct">CryptoCC26XX_Transaction</class>
    <class kind="struct">CryptoCC26XX_AESCCM_Transaction</class>
    <class kind="struct">CryptoCC26XX_AESCBC_Transaction</class>
    <class kind="struct">CryptoCC26XX_AESECB_Transaction</class>
    <class kind="struct">CryptoCC26XX_HWAttrs</class>
    <class kind="struct">CryptoCC26XX_Object</class>
    <class kind="struct">CryptoCC26XX_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_TIMEOUT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8a94999f3768d815e26ac50a0debeeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_STATUS_SUCCESS</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>aaebc21d7bb5269638a64ff57f2b758aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_STATUS_ERROR</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a077508dd42d5999244911edc61f63194</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_STATUS_UNDEFINEDCMD</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a32adca418e15c3d66ec8a1b3dfa9f4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCM_ENCRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a00bd9c4c4f823576ed52a99cc1c49df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCM_ENCRYPT_AAD_ONLY</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>adbc0e20b32a3e1b968ea9cb05cd2bde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCM_DECRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>af57bb0e27a57946d9fa6ac747d534f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCM_DECRYPT_AAD_ONLY</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2e9761d83b7e451861e3d1891213d069</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_ECB_ENCRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>af72980622fb0dc9555587ef90083b3ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_ECB_DECRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a74881034cf440f28a91c5263fc728097</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CBC_ENCRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>aab1035e549d6de54b25a9f9a6ae2f3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CBC_DECRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6a2cf7f9abef28bcc0d503d3b7e9a8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCM</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6ab0b59b64c06856c431f91a7e43b34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCM_NOCRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>acc1c159d62112b90da86ecd846994f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCMINV</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a38c8bce4f77947e99d2d877e8d3dee7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_CCMINV_NOCRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a445002cd50ecda94d48f437bc213a499</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_ECB</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9e96510f981e65f0c46c19684daaff07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOCC26XX_OP_AES_ECB_NOCRYPT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>aea29a252e094057f90d0fccd938b8a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_Config *</type>
      <name>CryptoCC26XX_Handle</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8737c63107a1cb5548ba06f7a48259b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CryptoCC26XX_Mode</type>
      <name>CryptoCC26XX_Mode</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2a7a223869fb2c7f4b577f3552563d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>CryptoCC26XX_Operation</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a28465385e5b45efecc00f2015605f970</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CryptoCC26XX_KeyLocation</type>
      <name>CryptoCC26XX_KeyLocation</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4e214e5283d16ac67e593c7c8a5bc058</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_Params</type>
      <name>CryptoCC26XX_Params</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>afd8b8a794d92fe38d4806238c3b6fef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>CryptoCC26XX_KeyStore</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a30e647b6ad6b608b60990929200686e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_Transaction</type>
      <name>CryptoCC26XX_Transaction</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7d5a6e41436163786d2e01c0122a3de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_AESCCM_Transaction</type>
      <name>CryptoCC26XX_AESCCM_Transaction</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9cf6019bce243720cebc70eb8310682e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_AESCBC_Transaction</type>
      <name>CryptoCC26XX_AESCBC_Transaction</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac88ef72b5742d84ef0d51ee6b0fd2fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_AESECB_Transaction</type>
      <name>CryptoCC26XX_AESECB_Transaction</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a49f5f56e3a3f2f1aa354067e4261533f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_HWAttrs</type>
      <name>CryptoCC26XX_HWAttrs</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a43b8004f918cfc847b65ebe981970da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_Object</type>
      <name>CryptoCC26XX_Object</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1d3ce506f41ca09dbb4fc02615c54d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoCC26XX_Config</type>
      <name>CryptoCC26XX_Config</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7ff3fbcb90bc60cea7c5a281d5c7add2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC26XX_Mode</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf86c8ac428559f00fed3299d439e2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_MODE_BLOCKING</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf86c8ac428559f00fed3299d439e2cdaf0a9faf35a12d014c5f3a475906a3373</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_MODE_POLLING</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf86c8ac428559f00fed3299d439e2cda015c9e0e35350eb92ede6ad4109fa50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC26XX_KeyLocation</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_0</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706a49e17e3899e3f3b3fde9a99ab99a4f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_1</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706a6180ef53c43ac78dfd2879e47f0ae2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_2</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706a8fbf1d57797616552fec31ea75968ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_3</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706a4d90bb601a0a135054f4a92f02acf101</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_4</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706a9ebecf9a462870312120060f28f0cd39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_5</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706aa7bf50a9fdbb8eb3eb9d723532c4fe4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_COUNT</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706aa4d6d2c76958ac16f7c4d0d80b34db7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRYPTOCC26XX_KEY_ANY</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5266637af2c4ac36ed58d4e0f158b706a335a9c94549f0e882296bd43ccb4f953</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_close</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa2ece822f0fd8f6dbd3f50500b03bea4</anchor>
      <arglist>(CryptoCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoCC26XX_init</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a512b301a6ebf10a41c86d9ff725f7749</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>CryptoCC26XX_Handle</type>
      <name>CryptoCC26XX_open</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a21aa1458d0b063ee3637a40487e8ee12</anchor>
      <arglist>(unsigned int index, bool exclusiveAccess, CryptoCC26XX_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoCC26XX_Params_init</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a057c8155f3a7eb9560a51e2d8d4d98e3</anchor>
      <arglist>(CryptoCC26XX_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoCC26XX_Transac_init</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>afb3ea8faceda234cdd62c5f53e203946</anchor>
      <arglist>(CryptoCC26XX_Transaction *trans, CryptoCC26XX_Operation opType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_allocateKey</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a50d5828043e87fd37398d2aabe9b9e92</anchor>
      <arglist>(CryptoCC26XX_Handle handle, CryptoCC26XX_KeyLocation keyLocation, const uint32_t *keySrc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_loadKey</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2faba7afcf3ade13881e4f0ece378c63</anchor>
      <arglist>(CryptoCC26XX_Handle handle, int keyIndex, const uint32_t *keySrc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_releaseKey</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa995ee20d8a7fcce66aeae86fee83555</anchor>
      <arglist>(CryptoCC26XX_Handle handle, int *keyIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_transact</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6864191d34a9a3cfbcd36cc34570b3b8</anchor>
      <arglist>(CryptoCC26XX_Handle handle, CryptoCC26XX_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_transactPolling</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2efbef5e059c752e1f5797a4ef3713a3</anchor>
      <arglist>(CryptoCC26XX_Handle handle, CryptoCC26XX_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CryptoCC26XX_transactCallback</name>
      <anchorfile>_crypto_c_c26_x_x_8h.html</anchorfile>
      <anchor>a99eb096ad8f78acf23d4e4b75616dc95</anchor>
      <arglist>(CryptoCC26XX_Handle handle, CryptoCC26XX_Transaction *transaction)</arglist>
    </member>
    <docanchor file="_crypto_c_c26_x_x_8h">ti_drivers_Crypto_Overview</docanchor>
    <docanchor file="_crypto_c_c26_x_x_8h">ti_drivers_Crypto_Usage</docanchor>
    <docanchor file="_crypto_c_c26_x_x_8h">ti_drivers_Crypto_Synopsis</docanchor>
    <docanchor file="_crypto_c_c26_x_x_8h">ti_drivers_Crypto_Synopsis_Code</docanchor>
    <docanchor file="_crypto_c_c26_x_x_8h">ti_drivers_Crypto_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>CryptoKey.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/cryptoutils/cryptokey/</path>
    <filename>_crypto_key_8h</filename>
    <class kind="struct">CryptoKey_Plaintext_</class>
    <class kind="struct">CryptoKey_KeyStore_</class>
    <class kind="struct">CryptoKey_KeyBlob_</class>
    <class kind="struct">CryptoKey_</class>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_RESERVED</name>
      <anchorfile>group___crypto_key___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga804fde3a9a6494b4beeb058556cb6212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_SUCCESS</name>
      <anchorfile>group___crypto_key___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga57bc657c5ea7a274cfc47c3a66829882</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_ERROR</name>
      <anchorfile>group___crypto_key___s_t_a_t_u_s.html</anchorfile>
      <anchor>gade8db452abe2f9f233fd4dbb207d4acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_UNDEFINED_ENCODING</name>
      <anchorfile>group___crypto_key___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga936ba18446ed96ed60511b7e1922da25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CryptoKey_Encoding_</type>
      <name>CryptoKey_Encoding</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a6efa4edc22d31bad5969a0be4a3f25b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoKey_Plaintext_</type>
      <name>CryptoKey_Plaintext</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a3577675d577832bec1d4fab2767b27c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoKey_KeyStore_</type>
      <name>CryptoKey_KeyStore</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>ab556cf5a0cb429c20953db8b508fdeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoKey_KeyBlob_</type>
      <name>CryptoKey_KeyBlob</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>ab2c09d40b44701ffbf74f3910831a5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoKey_</type>
      <name>CryptoKey</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a6f7dd04b6cb67a2b6c40aeb4483be246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CryptoKey_SecurityPolicy_</type>
      <name>CryptoKey_SecurityPolicy</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a300e189aa57e904bfb5d82a3606a3ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoKey_Encoding_</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoKey_PLAINTEXT</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7a048f9b1c3d6249c961ba1fd357513314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoKey_BLANK_PLAINTEXT</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7acc1c12aee0d44d5e961c36b83599ef87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoKey_KEYSTORE</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7ae387f234c17f4b324c04dae61c82b0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoKey_BLANK_KEYSTORE</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7a65d3b19452740d8842af82effe196b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoKey_KEYBLOB</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7afd240741132b531909290a452dbed388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoKey_BLANK_KEYBLOB</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a4f2a1933d1102307b2838dce5dc9a7a7a116461c43c0fa2fc404d9328a4f7fff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKey_getCryptoKeyType</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a885338e1a52e7c404d38d5ff42cd68ae</anchor>
      <arglist>(CryptoKey *keyHandle, CryptoKey_Encoding *keyType)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKey_isBlank</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a8642218d598c03e80669d18d2b839216</anchor>
      <arglist>(CryptoKey *keyHandle, bool *isBlank)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKey_markAsBlank</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a3e15a94bfae314256531235c50c59e75</anchor>
      <arglist>(CryptoKey *keyHandle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKey_initSecurityPolicy</name>
      <anchorfile>_crypto_key_8h.html</anchorfile>
      <anchor>a31717a6db75f38dabe19f3f26343a36c</anchor>
      <arglist>(CryptoKey_SecurityPolicy *policy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoKeyPlaintext.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/cryptoutils/cryptokey/</path>
    <filename>_crypto_key_plaintext_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKeyPlaintext_initKey</name>
      <anchorfile>_crypto_key_plaintext_8h.html</anchorfile>
      <anchor>ace81a1078fd0befbde3f44a9d9d58cc4</anchor>
      <arglist>(CryptoKey *keyHandle, uint8_t *key, size_t keyLength)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKeyPlaintext_initBlankKey</name>
      <anchorfile>_crypto_key_plaintext_8h.html</anchorfile>
      <anchor>a85196071ac68f8d826f5073b86ce593e</anchor>
      <arglist>(CryptoKey *keyHandle, uint8_t *keyLocation, size_t keyLength)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKeyPlaintext_getKeyLength</name>
      <anchorfile>_crypto_key_plaintext_8h.html</anchorfile>
      <anchor>a68af8ecfb9a0ff08f662a93d6f6840c6</anchor>
      <arglist>(CryptoKey *keyHandle, size_t *length)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>CryptoKeyPlaintext_setKeyLocation</name>
      <anchorfile>_crypto_key_plaintext_8h.html</anchorfile>
      <anchor>a15b8d8b766411818ca33a9137433ff1c</anchor>
      <arglist>(CryptoKey *keyHandle, uint8_t *location)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoResourceCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/cryptoutils/sharedresources/</path>
    <filename>_crypto_resource_c_c26_x_x_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>CryptoResourceCC26XX_constructRTOSObjects</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa76cbf822ef127268f961f18d58bb15d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoResourceCC26XX_destructRTOSObjects</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0d3e63506ed3fc81fa51400a60bd0fda</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CryptoResourceCC26XX_acquireLock</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae705de090f7fb8068e8fea2455589083</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoResourceCC26XX_releaseLock</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a57c807c2774cff4d8f531f0f65cd18a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>CryptoResourceCC26XX_accessSemaphore</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9906cd48652e8ec5e697764f11c15849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>CryptoResourceCC26XX_operationSemaphore</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a938ee59571c4fd97f6d47dd20d8c63fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>CryptoResourceCC26XX_pollingFlag</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0812b928f252c8a4350798b501d7aebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>CryptoResourceCC26XX_hwi</name>
      <anchorfile>_crypto_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a54ad5865b0bd15a32c07624dd1a47caa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>disclaimer.dox</name>
    <path>/db/vendors/ti/swtools/1_33_00_06/Linux/etc/doc_api/</path>
    <filename>disclaimer_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Display.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_display_8h</filename>
    <class kind="struct">Display_Params</class>
    <class kind="struct">Display_FxnTable</class>
    <class kind="struct">Display_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANY</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga18e865923359fab7d26c09dc169caf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_INVALID</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga09ec0c157c10708af6c2fec8e5b26805</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LCD</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga9b8f62fe443d3a584f598392d233f38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_UART</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga0257ac5b377a67eb525400e4c2a4f0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LOG</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gaaf8a10cc8b8de9d38f144d44f968b1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ITM</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gae19f6c6b10d4e3d491819fb02ae4c865</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_HOST</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga159af3b59e8fa662fc153a0307fd1817</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANSI</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gabdee477121870fb7102a9a572c5cdc9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_GRLIB</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga498ae390d2feea643ec3f23533859f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_MAXINDEX</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a61eb3c7b2406cb61825a0924b066d1ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga99c2401cd11ea3b49e5e3e4ffac5c886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gacb7031dd18c19e3ecb86d97cb7b17abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_SUCCESS</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f6a4a10f24cf55bc13d1750e38bb946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_ERROR</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaf91798b06dd95fce8063b7328420fab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga3e506301dbdad496a95e12c3b17efc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_CLOSE</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga5be24ea4a3ddfd94efbb513d649ac88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_OPEN</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>gae12206be356c6b2ce885b5ada9b1854d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_clearLine</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a4dacdea7e09ccbb7fc6464bb9af6c2cd</anchor>
      <arglist>(handle, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_isIndex</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a1c085d5459020e806cafd71632e3d8ed</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_isMetaType</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ac0fca232ed955fd16bdf1d7b1b560a9e</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_init</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a587814881d96c49960b4ae2b73199fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_open</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3aa87973a354d4fd6a2969f764e8afe6</anchor>
      <arglist>(id, params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Params_init</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a4fb2982f52995a80194fbb107883a183</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_clear</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ab5a031704e2a1a9525d2c1a92346f842</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_clearLines</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>abae2ae910c2c533dbf11d24c656609d1</anchor>
      <arglist>(handle, fromLine, toLine)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_printf</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a371873a0f96f2e895bf92af7e586b244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print0</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>acd3685718132aa56f51827b28cab9717</anchor>
      <arglist>(handle, line, col, fmt)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print1</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a32faeb481b205f15a47fe8a57b15050c</anchor>
      <arglist>(handle, line, col, fmt, a0)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print2</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a38c04b221312d6810860cc798c5bd87a</anchor>
      <arglist>(handle, line, col, fmt, a0, a1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print3</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ac4666e03680fc5c36ba2d186fce9f8f1</anchor>
      <arglist>(handle, line, col, fmt, a0, a1, a2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print4</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a346f79ffd49fb4b049812cff58e1c55b</anchor>
      <arglist>(handle, line, col, fmt, a0, a1, a2, a3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print5</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a9c5ad419aa15ab0f127aec0e81a4706a</anchor>
      <arglist>(handle, line, col, fmt, a0, a1, a2, a3, a4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_getType</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a16a3d662df61924feff0eb34e5439794</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_control</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ad623d21e3c6d821bf6f4bdcfa05ec21f</anchor>
      <arglist>(handle, cmd, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_close</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>aea13e4e023f2b8020bed2e888cf98599</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_Config *</type>
      <name>Display_Handle</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a045a26811755aabf1886d982c49e54ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_initFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a119c5ae929dff42a62b7ca51a3cad7ef</anchor>
      <arglist>)(Display_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>enum Display_LineClearMode</type>
      <name>Display_LineClearMode</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>af2fe59ceb3d8c9276018f1ef46e4251c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_Params</type>
      <name>Display_Params</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a6b9502df6569d4ba369c01b50c7cdb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Display_Handle(*</type>
      <name>Display_openFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3119ce57fb115a68a37d7ec274cb0001</anchor>
      <arglist>)(Display_Handle handle, Display_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_clearFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>af09f13daab765e83adfac09551e3ee51</anchor>
      <arglist>)(Display_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_clearLinesFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a8350bd25609f51433e21b502ed50f63a</anchor>
      <arglist>)(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_vprintfFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a88a2ad12bc551e22c61e8f1649baf1dd</anchor>
      <arglist>)(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_closeFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ade8c953094781efff0f10ee0696a984f</anchor>
      <arglist>)(Display_Handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>Display_controlFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a67b559ffeebd829633512c4381858cc1</anchor>
      <arglist>)(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int(*</type>
      <name>Display_getTypeFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a2800d49b89aa7e3d9a2ec758d60358f1</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_FxnTable</type>
      <name>Display_FxnTable</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>abdb33c07acce5b6e5affae6725331399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_Config</type>
      <name>Display_Config</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a154de9b84d3b0d30daa9d729d65a6d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Display_LineClearMode</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_NONE</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377a8f60ab659badd77a0591a5357cfe5f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_LEFT</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377aabdeba4f8c5781eaff441a3778e6cc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_RIGHT</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377affc02447ea45e2c3db516a7b211b3b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_BOTH</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377a14588c1117513fc430c964428f62484e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>Display_doOpen</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3e9f4eee43bc9b70a4944e1a3961f7d2</anchor>
      <arglist>(uint32_t id, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doParamsInit</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>aff22833ae1cdccbbde3a57e82f85896c</anchor>
      <arglist>(Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doClear</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a68955bb81b0db818bf2688695dca1e4a</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doClearLines</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a443fc3167f9ce70bebf9e016443c6383</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doPrintf</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a65c7953ed84513f8ebc8b57183056b6f</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doClose</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>add67d9c5e921786ec12d8029fe6096d1</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Display_doGetType</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a2746bc2b6ed341867e8434ed79dfd4b6</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doControl</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a330f4fa1032c03e41d3efee191b9670b</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doInit</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a1b97c9b7855ceba5ddd5a5aaaa15c907</anchor>
      <arglist>(void)</arglist>
    </member>
    <docanchor file="_display_8h">ti_drivers_Display_Overview</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Usage</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Synopsis</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Synopsis_Code</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_open</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_float</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_host</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_lcd</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>DisplayDogm1286.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_display_dogm1286_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <includes id="_l_c_d_dogm1286_8h" name="LCDDogm1286.h" local="no" imported="no">ti/display/lcd/LCDDogm1286.h</includes>
    <class kind="struct">DisplayDogm1286_HWAttrs</class>
    <class kind="struct">DisplayDogm1286_Object</class>
    <member kind="typedef">
      <type>struct DisplayDogm1286_HWAttrs</type>
      <name>DisplayDogm1286_HWAttrs</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a59380665e121771f575e353c0fa5f69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayDogm1286_Object</type>
      <name>DisplayDogm1286_Object</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>ae9fcc5568d4b81bf8085ec89ef4b655c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayDogm1286_Object *</type>
      <name>DisplayDogm1286_Handle</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a717f1494741e8428201f7204f6d5c4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayDogm1286_init</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a1a7c8cffbbfab4480eaa994612a4d176</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayDogm1286_open</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a4c7a1aa2af584f06ad1ff1ee72e54642</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayDogm1286_clear</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a71691cd65dfc4e2958127a24d86d0e1b</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayDogm1286_clearLines</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a3f1cb817259d4bde56d2bfafa686c104</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayDogm1286_vprintf</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a86477ce58608aedd963e5005d35ac19a</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayDogm1286_close</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a16baf7b6fd4bd7b8be9592f00a2eb54f</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayDogm1286_control</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a39ef449adc9aa5322f24bd5750311bcd</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayDogm1286_getType</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>ab8314e4631d8ee4a9f71b1f0dd0c1c0c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayDogm1286_fxnTable</name>
      <anchorfile>_display_dogm1286_8h.html</anchorfile>
      <anchor>a0fe13f03cd4fc79e290221fd2b86d4cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplayExt.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_display_ext_8h</filename>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayGrLib_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DisplayExt_getGraphicsContext</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>a1a91f53b6a55be41a9e1fefb6057a5d2</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayGrLib_Object</type>
      <name>DisplayGrLib_Object</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>a10bc4ee8d6e6e8694b4df64e39375a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayGrLib_Object *</type>
      <name>DisplayGrLib_Handle</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>a4f7c1242c4a278989925cff6ff214fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Graphics_Context *</type>
      <name>DisplayExt_doGetGraphicsContext</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>aeb6dd2d48a05708b28d372a59cfcd95b</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplayHost.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_display_host_8h</filename>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayHost_HWAttrs</class>
    <class kind="struct">DisplayHost_Object</class>
    <member kind="typedef">
      <type>struct DisplayHost_HWAttrs</type>
      <name>DisplayHost_HWAttrs</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a48e0ec430ab0c52fdab7c6c7caf541e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayHost_Object</type>
      <name>DisplayHost_Object</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a253a190cc3419385027ab13f49993fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayHost_Object *</type>
      <name>DisplayHost_Handle</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a593313134b4113afcfc7bf6ac036134c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_init</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a153702ab6f849ceb8c0c9a77aeb8a95d</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayHost_open</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ab01c955367cf2e4713bba470e1c0804f</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_clear</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a83e16fad5a0a4f11f211f5a6352249d5</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_clearLines</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>af8197e0a9f28d818e400fac50d8da98a</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_vprintf</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ab5f31bcb87ec423108d730a193dd141f</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_close</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a18d7e0d4baec8b86da93ede7ed9709dd</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayHost_control</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a404df745dd4de12e069ba923ef5e160e</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayHost_getType</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ae9245a2419d54546a85201237d4f2550</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayHost_fxnTable</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ad22670f7762565fe9060de8d9b335d9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplaySharp.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_display_sharp_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplaySharpColor_t</class>
    <class kind="struct">DisplaySharp_HWAttrsV1</class>
    <class kind="struct">DisplaySharp_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAYSHARP_CMD_SET_COLORS</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga27b9623d9abc7aa7eeae74ea7d77cd0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplaySharp_HWAttrsV1</type>
      <name>DisplaySharp_HWAttrsV1</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>ae2b5bf32cfcefe11aebf7d0edeab6c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>DisplaySharp_Buf_96x96</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a252644281442bd3d66e41b9f4bf668f3</anchor>
      <arglist>[96 *96/8]</arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>DisplaySharp_Buf_128x128</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>ad8ce0f227370642020f4950d846f099b</anchor>
      <arglist>[128 *128/8]</arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplaySharp_Object</type>
      <name>DisplaySharp_Object</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a5c889fe79898e80e246386ed4b147a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplaySharp_Object *</type>
      <name>DisplaySharp_Handle</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>aa5921b9b7a4e44e010d86b858f3de52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_init</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>af86aae1188cffe017e3cb57d254365e4</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplaySharp_open</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a97a0ae6d2811237e4b0cddac24e04880</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_clear</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>adbb2a9fd5349f5ae4cb881a57da90c52</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_clearLines</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a6ca5f8e56b7d7e14d1c8facc1364edb1</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_vprintf</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a939dfd6c0170bd79c6a4b855e580ce44</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_close</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a681c21997c6cc14058bba72bc0586ef4</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplaySharp_control</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a4ab2badbd3b5e9ce136a2d5d6766674a</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplaySharp_getType</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a84b926652d7f687008dc7cd081325c61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplaySharp_fxnTable</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a0177a7fbf362ab53a6fe3d520dd62017</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplayUart.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/</path>
    <filename>_display_uart_8h</filename>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayUart_HWAttrs</class>
    <class kind="struct">DisplayUart_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DisplayUart_fxnTable</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a7b2bde64caaa249727f356615feff4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DisplayUart_SCROLLING</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a52c76b1a3e182b387cb009f1d8cad815</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart_HWAttrs</type>
      <name>DisplayUart_HWAttrs</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a39d1c3ae2b6e69378e721a2730b5b8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart_Object</type>
      <name>DisplayUart_Object</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ae0a2eead2881eb2daaeb792fb471c8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart_Object *</type>
      <name>DisplayUart_Handle</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>af5f02e5764d31e98b6c9862c07fa1d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_init</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a2a214b758f2317eb8e40500e38d87c78</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_init</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a664726066460a13bf0ddab73c5f7239b</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayUartMin_open</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a78dc4bf7f970c0c266727780d1b003ac</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayUartAnsi_open</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a74937e01f8d784f5525bf2c765c83dd9</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_clear</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a05519d14668d58644d8a2255e014c498</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_clear</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a48e8776c969155fca1101048b6d292c4</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_clearLines</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ac10c2786c244506500adb2fb319cf77e</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_clearLines</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>aba62f89a48e90b7d57bf46042ddacc0a</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_vprintf</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>acd09c085448cf45342e412c3fd5f75b0</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_vprintf</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ae217d149ef1ac372a9c28b5c6cb9fe2b</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_close</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ad2f4c6ee02d2d44cd8f908149e47877f</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_close</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a6b1c4b7ed41d355a895bb0a8c800a130</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayUartMin_control</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a482628ebb74ebd192adc42ebab2ae947</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayUartAnsi_control</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a7abb1c2007abac2b0bb86366c21a70b7</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayUartMin_getType</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a33a655668ba7bda2ae230aea2a33147f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayUartAnsi_getType</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a9164c7ab723217f1a002e443ecf95ed7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayUartMin_fxnTable</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a7b5ba2e3b651007636f57ae30d5a413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayUartAnsi_fxnTable</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a025c5a633ea702d14b294072f325f9aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>doxygen_cc13xx_cc26xx.txt</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/source/etc/</path>
    <filename>doxygen__cc13xx__cc26xx_8txt</filename>
  </compound>
  <compound kind="file">
    <name>doxygen_drivers.txt</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/source/etc/</path>
    <filename>doxygen__drivers_8txt</filename>
    <member kind="variable">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************The Display driver is designed abstract to operations &amp;considerations specific to a given output method *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayHost h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayDogm1286 h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************The NoRTOS framework module is provided to enable use of drivers without an underlying operating system The module provides interfaces used by drivers to perform</type>
      <name>delays</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>afc52680c2bc95313269255c0ed39f5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************The Display driver is designed abstract to operations &amp;considerations specific to a given output method *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayHost h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayDogm1286 h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************The NoRTOS framework module is provided to enable use of drivers without an underlying operating system The module provides interfaces used by drivers to perform block</type>
      <name>execution</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a9917c979dcc462431c4539f38f63c90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************The Display driver is designed abstract to operations &amp;considerations specific to a given output method *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayHost h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayDogm1286 h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************The NoRTOS framework module is provided to enable use of drivers without an underlying operating system The module provides interfaces used by drivers to perform block register interrupts and more NoRTOS module documentation and usage can be</type>
      <name>found</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a3d3df5af0fea1beaefe6e32a610c0d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************The Display driver is designed abstract to operations &amp;considerations specific to a given output method *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayHost h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayDogm1286 h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************The NoRTOS framework module is provided to enable use of drivers without an underlying operating system The module provides interfaces used by drivers to perform block register interrupts and more NoRTOS module documentation and usage can be a ref driver_function_table function</type>
      <name>table</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a3b29574e3b125c16315cf5e53d90a264</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECCParams.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/cryptoutils/ecc/</path>
    <filename>_e_c_c_params_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">ECCParams_CurveParams_</class>
    <member kind="define">
      <type>#define</type>
      <name>ECCParams_STATUS_SUCCESS</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>adfa6d0be85f6cfeb4ac5bb6d82759cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECCParams_STATUS_ERROR</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>ae5aaee7c07c2355fcdaae3818e3ac7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ECCParams_CurveType_</type>
      <name>ECCParams_CurveType</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>ab32a990c4ec0b897c27023280295baf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECCParams_CurveParams_</type>
      <name>ECCParams_CurveParams</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a6cbbd6d7c8362ef7e8fccc4f8c4925e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECCParams_CurveType_</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a6ad27176393ff769e10ba3a570dc0f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECCParams_CURVE_TYPE_SHORT_WEIERSTRASS</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a6ad27176393ff769e10ba3a570dc0f43a426bb751772cdf0d835d9cdf1e7d7da4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECCParams_CURVE_TYPE_MONTGOMERY</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a6ad27176393ff769e10ba3a570dc0f43a86919164a8f7536a5668246507272c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECCParams_CURVE_TYPE_EDWARDS</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a6ad27176393ff769e10ba3a570dc0f43a4a23f6721135ef733ba185f354f643bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECCParams_FormatCurve25519PrivateKey</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a3f1e498c742f7029e4206950e07f9736</anchor>
      <arglist>(CryptoKey *myPrivateKey)</arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_NISTP224</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a83f3fda4e311b6d44d8856e183277bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_NISTP256</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>ac0f12e0928f1a87c20ab551901ce6639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_NISTP384</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a204357651de359fc0e7a81829ecc2578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_NISTP521</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a33ce0aff2100d4e17d40dc5c03d5611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_BrainpoolP256R1</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>af29ba334e180fd34abb4a7af18fb3eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_BrainpoolP384R1</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>afbc45b4c3b11426d3e827fd4e9e91618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_BrainpoolP512R1</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>ae5b99337e113112056d9cc6b5cf4b771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ECCParams_CurveParams</type>
      <name>ECCParams_Curve25519</name>
      <anchorfile>_e_c_c_params_8h.html</anchorfile>
      <anchor>a07a7365756426e4c9ac22aae3c9b075b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECDH.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_e_c_d_h_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includes id="_e_c_c_params_8h" name="ECCParams.h" local="no" imported="no">ti/drivers/cryptoutils/ecc/ECCParams.h</includes>
    <class kind="struct">ECDH_Config</class>
    <class kind="struct">ECDH_OperationGeneratePublicKey</class>
    <class kind="struct">ECDH_OperationComputeSharedSecret</class>
    <class kind="union">ECDH_Operation</class>
    <class kind="struct">ECDH_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_RESERVED</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a00dbed059c824024835da32a82143cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_SUCCESS</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>aadb5927711e0215b36d2895573622a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_ERROR</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a833a693cf04fcd2e6983105f9ff137c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>ab70467d8fc82bab4e8e709273d6cd322</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_POINT_AT_INFINITY</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>ad1255d673e521a12585d034ab228af3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_PRIVATE_KEY_LARGER_EQUAL_ORDER</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a9858e344c1e0603f86645ae4928a3eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_PRIVATE_KEY_ZERO</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>ad4a3781705d2a5cf7850187828a27a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_PUBLIC_KEY_NOT_ON_CURVE</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>aaf391c2c59fbf91364c2664b38af7bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_PUBLIC_KEY_LARGER_THAN_PRIME</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a0765420780e918aaa5814c077f59daec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDH_STATUS_CANCELED</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>aabdb2de28f3e3acd88275dc0cdc573c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDH_Config *</type>
      <name>ECDH_Handle</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a4315ab9071ba852159e436a2c5684a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDH_Config</type>
      <name>ECDH_Config</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>ae9a844cbf00537e5b1fd8dfa577a82df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>ECDH_CallbackFxn</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a978c9e16d670371e7c0c50793fc4ec04</anchor>
      <arglist>)(ECDH_Handle handle, int_fast16_t returnStatus, ECDH_Operation operation, ECDH_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECDH_ReturnBehavior</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a95326e8fc727d9426a57cf4a6bb2f670</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDH_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a95326e8fc727d9426a57cf4a6bb2f670aab484909ed8c542b06511a66cc52ef18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDH_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a95326e8fc727d9426a57cf4a6bb2f670ad76afb7626a0e43453bd8d7713eae59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDH_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a95326e8fc727d9426a57cf4a6bb2f670a91e4b64cb2e16e67d8d3085efb31cc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECDH_OperationType</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a99b8a8bbad4e932870174c38dec46490</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDH_OPERATION_TYPE_GENERATE_PUBLIC_KEY</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a99b8a8bbad4e932870174c38dec46490a62570c7af35bd230669defb259782d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDH_OPERATION_TYPE_COMPUTE_SHARED_SECRET</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a99b8a8bbad4e932870174c38dec46490a5cd7dd7ccef7e1a2cda0dda6b6a309e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDH_init</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>aeafc9a67220447bca292685b6b2e7640</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDH_Params_init</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>aba742374e7813cd416d26a1b86872bf4</anchor>
      <arglist>(ECDH_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>ECDH_Handle</type>
      <name>ECDH_open</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a4c10865a8a3c33937111b8a379e3783b</anchor>
      <arglist>(uint_least8_t index, ECDH_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDH_close</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a47f6da8d23ef19680b27354e424dfcc1</anchor>
      <arglist>(ECDH_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDH_OperationGeneratePublicKey_init</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a3828b70f1353f25ed32ce4daff66b5be</anchor>
      <arglist>(ECDH_OperationGeneratePublicKey *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDH_OperationComputeSharedSecret_init</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>ad2eb16f459a7dad3cf51db76c74400bb</anchor>
      <arglist>(ECDH_OperationComputeSharedSecret *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECDH_generatePublicKey</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>af674c6e1f24af5212f0694ac033b3542</anchor>
      <arglist>(ECDH_Handle handle, ECDH_OperationGeneratePublicKey *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECDH_computeSharedSecret</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>aac7cce4647109da02f1f4f952697ae85</anchor>
      <arglist>(ECDH_Handle handle, ECDH_OperationComputeSharedSecret *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECDH_cancelOperation</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>a8590765ee63fff4d29504e25936108af</anchor>
      <arglist>(ECDH_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const ECDH_Params</type>
      <name>ECDH_defaultParams</name>
      <anchorfile>_e_c_d_h_8h.html</anchorfile>
      <anchor>ad97202536e7a3ea20529969825b5c389</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_e_c_d_h_8h">ti_drivers_ECDH_Overview</docanchor>
    <docanchor file="_e_c_d_h_8h">ti_drivers_ECDH_Usage</docanchor>
    <docanchor file="_e_c_d_h_8h">ti_drivers_ECDH_Synopsis</docanchor>
    <docanchor file="_e_c_d_h_8h">ti_drivers_ECDH_Synopsis_Code</docanchor>
    <docanchor file="_e_c_d_h_8h">ti_drivers_ECDH_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>ECDHCC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ecdh/</path>
    <filename>_e_c_d_h_c_c26_x2_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_e_c_d_h_8h" name="ECDH.h" local="no" imported="no">ti/drivers/ECDH.h</includes>
    <includes id="_e_c_c_params_8h" name="ECCParams.h" local="no" imported="no">ti/drivers/cryptoutils/ecc/ECCParams.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">ECDHCC26X2_HWAttrs_</class>
    <class kind="struct">ECDHCC26X2_Object_</class>
    <member kind="define">
      <type>#define</type>
      <name>ECDHCC26X2_STATUS_FSM_RUN_PKA_OP</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a8ddd678d4eb495c5cf704849ae3129a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDHCC26X2_STATUS_FSM_RUN_FSM</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a6cf077d11da397ae0308b5a17ccce612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ECDHCC26X2_FsmState_</type>
      <name>ECDHCC26X2_FsmState</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>ab4c8a11650795e3dc6167cc14bd3e13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDHCC26X2_HWAttrs_</type>
      <name>ECDHCC26X2_HWAttrs</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>aa81632c4fea68b3ba385b2c886110a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDHCC26X2_Object_</type>
      <name>ECDHCC26X2_Object</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>af5b410161f3f5a8befdda0e1dcc4c3ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECDHCC26X2_FsmState_</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_ERROR</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa739eb401b4c16ce0c1741c622d6c16ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_VALIDATE_PRIVATE_KEY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aabe611abc91e79690bbfe3a2cc7004674</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_MULT_PRIVATE_KEY_BY_GENERATOR</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa36663531d8aa1131fe826ac351c25120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_MULT_PRIVATE_KEY_BY_GENERATOR_RESULT</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa53306d3e83c95d210f1f93f3d43c1b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_RETURN</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aaa9c7c8af18847782f0e48d65a22d95ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_VALIDATE_PRIVATE_KEY_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa4c67258a106adf348c73846b94a2d815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_MULT_PRIVATE_KEY_BY_GENERATOR_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aabc2a137bd6194fb92ad57176f17b8300</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_MULT_PRIVATE_KEY_BY_GENERATOR_RESULT_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa1269eda0a15d408407cb5608e2a10517</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_GEN_PUB_KEY_RETURN_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa18e562efc4a04fabc0ed897864169eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_VALIDATE_PUB_KEY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa7c2af8bf987967eac93e4e0e33dfbcc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_MULT_PRIVATE_KEY_BY_PUB_KEY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa7f72c2827c3f7f9de9c4a726a7f24fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_MULT_PRIVATE_KEY_BY_PUB_KEY_RESULT</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa47bb90e00ed53f04734f1510636cd6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_RETURN</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aad848406116ba329cd4fdd9e975545761</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_MULT_PRIVATE_KEY_BY_PUB_KEY_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa4fb8f4ed8c78c99a1012aea517134bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_MULT_PRIVATE_KEY_BY_PUB_KEY_RESULT_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aab28b2c580e77565412d9aa976185fe32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDHCC26X2_FSM_COMPUTE_SHARED_SECRET_RETURN_MONTGOMERY</name>
      <anchorfile>_e_c_d_h_c_c26_x2_8h.html</anchorfile>
      <anchor>a95b313b50fd243b692e175c17da9405aa3e42e79e6768703ff28ace8bfa9b04bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECDSA.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_e_c_d_s_a_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includes id="_e_c_c_params_8h" name="ECCParams.h" local="no" imported="no">ti/drivers/cryptoutils/ecc/ECCParams.h</includes>
    <class kind="struct">ECDSA_Config</class>
    <class kind="struct">ECDSA_OperationSign</class>
    <class kind="struct">ECDSA_OperationVerify</class>
    <class kind="union">ECDSA_Operation</class>
    <class kind="struct">ECDSA_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_RESERVED</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>af0557cd1a241899dbe217ff6f36fffd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_SUCCESS</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a183cb58b608d3ddca2814118bc3e6d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_ERROR</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>af9e7be7d0379e85deb66de69bcc801f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a10c2305f3aad581623a9828b116b6418</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_INVALID_PMSN</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>af8e62a453a17a2259dc7d90cdffa1027</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_R_LARGER_THAN_ORDER</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a7f28203b6d117f448e07f6ca9a76fb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_S_LARGER_THAN_ORDER</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>af49a1701c4762053d1c5bd4f5013f1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_PUBLIC_KEY_NOT_ON_CURVE</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a0b7af7614f3a3f4d318e29f629968524</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_PUBLIC_KEY_LARGER_THAN_PRIME</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a6759d42de4b04816b814b989ca8e42ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_POINT_AT_INFINITY</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>adc0537d9a7af71de05125d7a7abbe578</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSA_STATUS_CANCELED</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a63a2a564cbd3c0f004c8829d95b40b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDSA_Config *</type>
      <name>ECDSA_Handle</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a656e37d7e9595049cad7c4d88e09c545</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDSA_Config</type>
      <name>ECDSA_Config</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a45a1d41d2101d26df62f3e4ed78f08fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>ECDSA_CallbackFxn</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a2969615c2ad61fa703031658001791a1</anchor>
      <arglist>)(ECDSA_Handle handle, int_fast16_t returnStatus, ECDSA_Operation operation, ECDSA_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECDSA_ReturnBehavior</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a7095d19c4638c8e46234d85ed6f0f341</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSA_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a7095d19c4638c8e46234d85ed6f0f341a12caa37a0d66bfabe52862dec969dd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSA_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a7095d19c4638c8e46234d85ed6f0f341a2bb6b8792bfa1d4dca40c458d008d92b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSA_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a7095d19c4638c8e46234d85ed6f0f341aa0384662e30a5de0ab321cdef21f1b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECDSA_OperationType</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a12591c66c1af7e332fb99f04f5c17ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSA_OPERATION_TYPE_SIGN</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a12591c66c1af7e332fb99f04f5c17ec9ac1fb160e151a4c8adbf40e6a6cf94ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSA_OPERATION_TYPE_VERIFY</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a12591c66c1af7e332fb99f04f5c17ec9abb42383a7909a4aadd941cfe98136341</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDSA_init</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a12529e861cad0fd9932b88c7023a3b77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDSA_close</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>afb8b4f22218005bddbed06ead6166bb8</anchor>
      <arglist>(ECDSA_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>ECDSA_Handle</type>
      <name>ECDSA_open</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>af7a157511011586ac3d79800f9ce0aab</anchor>
      <arglist>(uint_least8_t index, ECDSA_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDSA_Params_init</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>ac8a50e673e908088f643396f7f898f84</anchor>
      <arglist>(ECDSA_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDSA_OperationSign_init</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a483eed05a93c583df6599b6a07721a70</anchor>
      <arglist>(ECDSA_OperationSign *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECDSA_OperationVerify_init</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a398f078544d6c5506027a7dd6608db9a</anchor>
      <arglist>(ECDSA_OperationVerify *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECDSA_sign</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a3ad7bc590603181380f2f8d4c01e09f3</anchor>
      <arglist>(ECDSA_Handle handle, ECDSA_OperationSign *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECDSA_verify</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a474b05788ac25fb7ba032490bb418b96</anchor>
      <arglist>(ECDSA_Handle handle, ECDSA_OperationVerify *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECDSA_cancelOperation</name>
      <anchorfile>_e_c_d_s_a_8h.html</anchorfile>
      <anchor>a2b0e1e35912d647f946073b807cf205b</anchor>
      <arglist>(ECDSA_Handle handle)</arglist>
    </member>
    <docanchor file="_e_c_d_s_a_8h">ti_drivers_ECDSA_Overview</docanchor>
    <docanchor file="_e_c_d_s_a_8h">ti_drivers_ECDSA_Usage</docanchor>
    <docanchor file="_e_c_d_s_a_8h">ti_drivers_ECDSA_Synopsis</docanchor>
    <docanchor file="_e_c_d_s_a_8h">ti_drivers_ECDSA_Synopsis_Code</docanchor>
  </compound>
  <compound kind="file">
    <name>ECDSACC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ecdsa/</path>
    <filename>_e_c_d_s_a_c_c26_x2_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_e_c_d_s_a_8h" name="ECDSA.h" local="no" imported="no">ti/drivers/ECDSA.h</includes>
    <includes id="_e_c_c_params_8h" name="ECCParams.h" local="no" imported="no">ti/drivers/cryptoutils/ecc/ECCParams.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">ECDSACC26X2_HWAttrs_</class>
    <class kind="struct">ECDSACC26X2_Object_</class>
    <member kind="define">
      <type>#define</type>
      <name>ECDSACC26X2_STATUS_FSM_RUN_PKA_OP</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a1241939903cd68d899750a6b9e93fe4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECDSACC26X2_STATUS_FSM_RUN_FSM</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a1b0781f9bb757305051b989d31ffe5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ECDSACC26X2_FsmState_</type>
      <name>ECDSACC26X2_FsmState</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>aaaa2f6ea83a14fc67284515798eb87c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>ECDSACC26X2_stateMachineFxn</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a047532d1c443d0aee44da0deace0268a</anchor>
      <arglist>)(ECDSA_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDSACC26X2_HWAttrs_</type>
      <name>ECDSACC26X2_HWAttrs</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a5bca70284084431d5d45b35d3c4923ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECDSACC26X2_Object_</type>
      <name>ECDSACC26X2_Object</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a557bf76f2dc2c7bf7dac3664dfdb935e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECDSACC26X2_FsmState_</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_ERROR</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a21e3b64bcbb683c88b14bc1e15cbbdb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_VALIDATE_PMSN</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a62365f659c79aa0b20dcd6d950aa96c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_COMPUTE_R</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19ac13e7ef80bc0510a1f96e4c12ab2dd6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_COMPUTE_R_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a45afb1940c5383eda9838e44d6411fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_R_MOD_N</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a5f44ad70242f2f8683a25617a673e4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_R_MOD_N_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a92fd461190cc6bb2efbd41e1c12d3901</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_COMPUTE_PMSN_INVERSE</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a63529ec465a6e1b266bf83f3f33d4394</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_COMPUTE_PMSN_INVERSE_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a073fd00784526f7a67d5fa387c185899</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_COMPUTE_PRIVATE_KEY_X_R</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a48cc641bb8facc454a0316295234ae8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_COMPUTE_PRIVATE_KEY_X_R_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a2f5b0cd47d60df5d9293ca81e2071e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_ADD_HASH</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a148da736440e82d9e83fb99925141580</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_ADD_HASH_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a46bdf26662e1dc8ecfdcd9256e96b3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_MULT_BY_PMSN_INVERSE</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a1f36053482f4ff10348c6f80eccc5e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_MULT_BY_PMSN_INVERSE_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19add58b8ab99c74f8c6cdc96c4742d90bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_MOD_N</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a76fdd29eb6d569cea6751cf7f1616c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_SIGN_MOD_N_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a71a5fb55513db9c9f304d21843e9ec3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_R_S_IN_RANGE</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19ac53872ebf07418378d8e5d1f525fb890</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_VALIDATE_PUBLIC_KEY</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19af128b2c921025eef9befdde850cafc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_COMPUTE_S_INV</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a3365e850166b0439856e347170ca76be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_COMPUTE_S_INV_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a2f9bf8500658e8da587c4e97e66af477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_S_INV_HASH</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19aaf2674129f3883bf2f935daf85fe02d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_S_INV_HASH_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a0b664ba3b041a52ae007c7aeb40ff4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_S_INV_MULT_HASH_MOD_N</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a3f748361d61e48e9d76e15844aa38305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_S_INV_MULT_HASH_MOD_N_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a8c8688b72a41bbb7f82b73bf7875b16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_G</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a262618c235bea905d17936e5fe12eb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_G_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a688934e984ee09aaddbacc5f80532148</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_S_INV_R</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19ad2654b917d93e955408f8054e2e3811e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_S_INV_R_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19ad6815042792bce096ad6efe398812eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_S_INV_R_MOD_N</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a98ab4932af790cb78f742b8e0857204e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_S_INV_R_MOD_N_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19ac13987e65a2f57fbf07ac091aa67b4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_PUB_KEY</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a7055c94a1c9da43063a2293c13fe0ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_MULT_PUB_KEY_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19ad1578d57c14499baf65a4a011377ce39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_ADD_MULT_RESULTS</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a2b88f70ec0ba01b32a09fe564a6a7a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_ADD_MULT_RESULTS_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a59c8b507ad12d33cd05f8447ccc4db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_POINTX_MOD_N</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19af7c32c96384d834bb48c9559ed893a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_POINTX_MOD_N_RESULT</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a9b654507bde4a214c51796a3e9bf2222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECDSACC26X2_FSM_VERIFY_COMPARE_RESULT_R</name>
      <anchorfile>_e_c_d_s_a_c_c26_x2_8h.html</anchorfile>
      <anchor>a52c0adca674f409fbfb0bf5053caeb19a5ee10cf6f7ed4891a39af450128b02d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECJPAKE.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_e_c_j_p_a_k_e_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includes id="_e_c_c_params_8h" name="ECCParams.h" local="no" imported="no">ti/drivers/cryptoutils/ecc/ECCParams.h</includes>
    <class kind="struct">ECJPAKE_Config</class>
    <class kind="struct">ECJPAKE_OperationRoundOneGenerateKeys</class>
    <class kind="struct">ECJPAKE_OperationGenerateZKP</class>
    <class kind="struct">ECJPAKE_OperationVerifyZKP</class>
    <class kind="struct">ECJPAKE_OperationRoundTwoGenerateKeys</class>
    <class kind="struct">ECJPAKE_OperationComputeSharedSecret</class>
    <class kind="union">ECJPAKE_Operation</class>
    <class kind="struct">ECJPAKE_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_RESERVED</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a312c0c75c7b47e0d5e8493ca4cb98683</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_SUCCESS</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a1e2fe3a0d3efd4d6505552b732402a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_ERROR</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a3173a5ec592e345c4dc58e9fbbde2825</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a668d9bd2a4926c046f40ee6698892362</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_INVALID_PUBLIC_KEY</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>adc3a17b99ca7816137c60f780b51ef63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_PUBLIC_KEY_NOT_ON_CURVE</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a11dcd54552f0512755ba72f17ae5da46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_PUBLIC_KEY_LARGER_THAN_PRIME</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a79517ed3fbf41907b1d9e495f7bfef5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_POINT_AT_INFINITY</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a74586f857af1aaffbe358721b81f1b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_INVALID_PRIVATE_KEY</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a4ca6b37156ce3f0bd1c26b5ecd4d4a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_INVALID_PRIVATE_V</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a45e8ebd0af128c2b81c249022baa6667</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKE_STATUS_CANCELED</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a583347838bba8d270e653517317aaa39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECJPAKE_Config *</type>
      <name>ECJPAKE_Handle</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>ad4b639bd1d0f7636123df5b1e6f4a73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECJPAKE_Config</type>
      <name>ECJPAKE_Config</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>ab7fb436f7ab84432137943a3b8854772</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>ECJPAKE_CallbackFxn</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a743785709e9ca990077a97befed10232</anchor>
      <arglist>)(ECJPAKE_Handle handle, int_fast16_t returnStatus, ECJPAKE_Operation operation, ECJPAKE_OperationType operationType)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECJPAKE_ReturnBehavior</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a9955de2a9c7b9260b512ca14bf7a634c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a9955de2a9c7b9260b512ca14bf7a634ca5a4164de2fa7a74f8e9a8f21a6f40069</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a9955de2a9c7b9260b512ca14bf7a634ca124c6b724f8fc636176973cbc470d63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a9955de2a9c7b9260b512ca14bf7a634ca5ec172da7685ba35f8337c7f5dc5d5a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECJPAKE_OperationType</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a7cc04050ce660dd03540b7bf8e53fb26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_OPERATION_TYPE_ROUND_ONE_GENERATE_KEYS</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a7cc04050ce660dd03540b7bf8e53fb26a127cd39a054561f63b428ddfafed821a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_OPERATION_TYPE_GENERATE_ZKP</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a7cc04050ce660dd03540b7bf8e53fb26ad08ce6c1fa4c35487af7a3f5faeea4b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_OPERATION_TYPE_VERIFY_ZKP</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a7cc04050ce660dd03540b7bf8e53fb26aae45452ee70a3aa970183c9f5c8ca6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_OPERATION_TYPE_ROUND_TWO_GENERATE_KEYS</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a7cc04050ce660dd03540b7bf8e53fb26acccd1127e96dd121dc8dbe4a600b2903</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKE_OPERATION_TYPE_COMPUTE_SHARED_SECRET</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a7cc04050ce660dd03540b7bf8e53fb26aa121074a25507188f1d89a816cfaf7ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a700d51c05aed0c04a37615136583c96b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_OperationRoundOneGenerateKeys_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>ad4905b7bbdda7a6d84d68a33825d71fc</anchor>
      <arglist>(ECJPAKE_OperationRoundOneGenerateKeys *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_OperationGenerateZKP_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a309530be8bedab920f30a9e31e01f052</anchor>
      <arglist>(ECJPAKE_OperationGenerateZKP *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_OperationVerifyZKP_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>adecdfdaae05bd0dc70f3b2766014c0e4</anchor>
      <arglist>(ECJPAKE_OperationVerifyZKP *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_OperationRoundTwoGenerateKeys_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a779e5c3610e226d58917c1fdf6294f4c</anchor>
      <arglist>(ECJPAKE_OperationRoundTwoGenerateKeys *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_OperationComputeSharedSecret_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a0c65ce541534493bd352248f7bc7314f</anchor>
      <arglist>(ECJPAKE_OperationComputeSharedSecret *operation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_close</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a3fd8ad0728bebfd64e14537b2dbfedf1</anchor>
      <arglist>(ECJPAKE_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>ECJPAKE_Handle</type>
      <name>ECJPAKE_open</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>aee777d6c12846f95c21a7ccce3b5daef</anchor>
      <arglist>(uint_least8_t index, ECJPAKE_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ECJPAKE_Params_init</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>accb0f74e2250c5cdb6bbd2d71d790323</anchor>
      <arglist>(ECJPAKE_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECJPAKE_roundOneGenerateKeys</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a12cd2e0e5f6828d904fbb76bd6c5c2d9</anchor>
      <arglist>(ECJPAKE_Handle handle, ECJPAKE_OperationRoundOneGenerateKeys *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECJPAKE_generateZKP</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a422529b4456d9e53682985002fd87376</anchor>
      <arglist>(ECJPAKE_Handle handle, ECJPAKE_OperationGenerateZKP *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECJPAKE_verifyZKP</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>af47d98b1e451cca11b450f425f94ddb0</anchor>
      <arglist>(ECJPAKE_Handle handle, ECJPAKE_OperationVerifyZKP *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECJPAKE_roundTwoGenerateKeys</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a6b0de26fef61a785906120acb0277074</anchor>
      <arglist>(ECJPAKE_Handle handle, ECJPAKE_OperationRoundTwoGenerateKeys *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECJPAKE_computeSharedSecret</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a6d46725aff59ef45fffff16ec1f5ae5b</anchor>
      <arglist>(ECJPAKE_Handle handle, ECJPAKE_OperationComputeSharedSecret *operation)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ECJPAKE_cancelOperation</name>
      <anchorfile>_e_c_j_p_a_k_e_8h.html</anchorfile>
      <anchor>a220578478388eb6de285a3ced904b4c9</anchor>
      <arglist>(ECJPAKE_Handle handle)</arglist>
    </member>
    <docanchor file="_e_c_j_p_a_k_e_8h">ti_drivers_ECJPAKE_Overview</docanchor>
    <docanchor file="_e_c_j_p_a_k_e_8h">ti_drivers_ECJPAKE_Usage</docanchor>
    <docanchor file="_e_c_j_p_a_k_e_8h">ti_drivers_ECJPAKE_Synopsis</docanchor>
    <docanchor file="_e_c_j_p_a_k_e_8h">ti_drivers_ECJPAKE_Synopsis_Code</docanchor>
    <docanchor file="_e_c_j_p_a_k_e_8h">ti_drivers_ECJPAKE_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>ECJPAKECC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ecjpake/</path>
    <filename>_e_c_j_p_a_k_e_c_c26_x2_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_e_c_j_p_a_k_e_8h" name="ECJPAKE.h" local="no" imported="no">ti/drivers/ECJPAKE.h</includes>
    <includes id="_e_c_c_params_8h" name="ECCParams.h" local="no" imported="no">ti/drivers/cryptoutils/ecc/ECCParams.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">ECJPAKECC26X2_HWAttrs_</class>
    <class kind="struct">ECJPAKECC26X2_Object_</class>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKECC26X2_STATUS_FSM_RUN_PKA_OP</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a7054f81af3352f0d45291819b33b35cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECJPAKECC26X2_STATUS_FSM_RUN_FSM</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a51955c605f09115d3595b82d3dbd5b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum ECJPAKECC26X2_FsmState_</type>
      <name>ECJPAKECC26X2_FsmState</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>aee3a8235e15617b9c754e8944029557d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECJPAKECC26X2_HWAttrs_</type>
      <name>ECJPAKECC26X2_HWAttrs</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a9d07378c875a0b8a87f7bea25a3f9083</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ECJPAKECC26X2_Object_</type>
      <name>ECJPAKECC26X2_Object</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>acb5994d01c8da300c20950e4f7d17ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECJPAKECC26X2_FsmState_</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ERROR</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333caf750831a82d86a0115483e437b41044d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_VALIDATE_MYPRIVATEKEY1</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca617c7fa75fa5999b0aa8501519f8a72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_VALIDATE_MYPRIVATEKEY2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca06525b29d5e681cc2c4fac1592976fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_VALIDATE_MYPRIVATEV1</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cacbef33c036a8e7ffafdbbdec29171b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_VALIDATE_MYPRIVATEV2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca774199a5e96753894591faebb3271c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICKEY1</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca813f47634397f12875cddac5f1b7a777</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICKEY1_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca97c86ad16b25306bfa84223a509528e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICKEY2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca0a49afd1d84c2303523cc05508a5b332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICKEY2_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca5e26a6d38b8c1d2f82577d22823b44ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICV1</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cab130c36ecf69561202e1e4b16940f556</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICV1_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333caf9b4cf5bbed7789df80b8d7c3a9ed29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICV2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cafaeac7083bc0f4608b62423bfe431f20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_MYPUBLICV2_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca932c58e386eea23080bc6da0284f232e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_ONE_GENERATE_RETURN</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca31ef03c9f0b8812f4cbb8502a6c79e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_PRIVATEKEY_X_HASH</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cae99af83be4b24ffaa13d6601cf735ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_PRIVATEKEY_X_HASH_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca323a299916a74330b0c973eb56e8f9b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_PRIVATEKEY_X_HASH_MOD_N</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca2efb0764dc34048d3cc2caa6e260dbd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_PRIVATEKEY_X_HASH_MOD_N_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca19b7078a39176d59cacd2bbbc4b13150</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_ADD_V_TO_N</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cad6d6970e6c756bae94f2b3a412b13d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_ADD_V_TO_N_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca71871f6d10cd400d8647249a42280a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_SUBTRACT_RESULTS</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca430b4bde1d947190e5ba6b66719c80f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_SUBTRACT_RESULTS_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca7dbae876c65f83a9d75bc57700f10d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_SUBTRACT_RESULT_MOD_N</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333caf878737a18b0640564c4679bdf5c08f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_ZKP_SUBTRACT_RESULT_MOD_N_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca29a1c3919c47d9de68b94f745790e2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ZKP_GENERATE_RETURN</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cac3c05e6d09a6b4d31432c4016336f459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_VALIDATE_PUBLIC_KEY</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca3815b0e39e87a68b900b67b71d48e199</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_HASH_MOD_N</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca1fba25d25529eb3155424a85cd87700f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_HASH_MOD_N_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca2591d813ec6ad48880184d7e0ac14e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_MULT_G_BY_R</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cac1408a922c90fd06b64d67a3bf0bcc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_MULT_G_BY_R_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca037579befd0c1a7b428af6fefe69b3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_MULT_X_BY_HASH</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cab93313ca292b0f1b2d40590a107607da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_MULT_X_BY_HASH_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cacf3bd00f9e17195de79dc59219cf4ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_ADD_RESULTS</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333caa9913f9eec2401b5aedf753ebda4061b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_ADD_RESULTS_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca94d28b6bb7798f35bb9815a7b3036424</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_VERIFY_ZKP_COMPARE_AGAINST_V</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca1b0ea1a85365e070bd5f97a075407025</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_MULT_MYPRIVATEKEY2_BY_PRESHAREDSECRET</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca198bb3b2edf91756e400d4e3352dbb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_MULT_MYPRIVATEKEY2_BY_PRESHAREDSECRET_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca8b83bfecff1ff8e19d3315bb1ec3bf6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_MYCOMBINEDPRIVATEKEY_MOD_N</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca20319e0b45d7de9b537192de048a2edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_MYCOMBINEDPRIVATEKEY_MOD_N_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca9ecc440004005a60f030c66b8b318538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_ADD_MYPUBLICKEY1_TO_THEIRPUBLICKEY1</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cac98d710a4f7120fa35d075b6bc18983b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_ADD_MYPUBLICKEY1_TO_THEIRPUBLICKEY1_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca80b26e7526327290ee18f09b0294c36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_ADD_THEIRPUBLICKEY2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca274cd82ab385fba06ecb80f432e00382</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_ADD_THEIRPUBLICKEY2_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca7b058aaf0d5b597f8276341349345624</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_ADD_MYPUBLICKEY2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333caa3e652bd3586dd319c58992a7d549da4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_ADD_MYPUBLICKEY2_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca4c878de44dd66da49b114473bbff784b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_MULT_MYCOMBINEDPRIVATEKEY_BY_MYNEWGENERATOR</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca4202689afd165be888abb88263e60544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_MULT_MYCOMBINEDPRIVATEKEY_BY_MYNEWGENERATOR_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333caed389803f4a774df1401972da0c78614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_VALIDATE_MYPRIVATEV</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca25d6ad61ea000a45d41b6769192fb451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_GENERATE_MYPUBLICV</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cab9ad2f7a41dd6e5095af550d8becbbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_GENERATE_MYPUBLICV_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca0576fa3855ccb4ae352f58bd4b7e2397</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_ROUND_TWO_GENERATE_RETURN</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cad3551faff3dc69482b5aa075fd471453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_MULT_THEIRPUBLICKEY2_BY_MYCOMBINEDPRIVATEKEY</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca79a888ec20545e5d66f7a78677d7262c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_MULT_THEIRPUBLICKEY2_BY_MYCOMBINEDPRIVATEKEY_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca8c5a0201b430a8d54d3ab5ca84d871df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_SUB_YCOORDINATE_FROM_PRIME</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca0dd5fe9cd624efa151e7d2c8237c12e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_SUB_YCOORDINATE_FROM_PRIME_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca6cdd184bff0699ccd39b3d97b4fb6217</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_ADD_THEIRCOMBINEDPUBLICKEY</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cac93058585c9bc67337616efea5c48d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_ADD_THEIRCOMBINEDPUBLICKEY_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca3eab53f1e818849c6098ca93a8fc3914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_MULT_BY_MYPRIVATEKEY2</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333ca6ae56bf8df73b343d695e527486909ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_MULT_BY_MYPRIVATEKEY2_RESULT</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cafd03fdaf27f1c048441f8d7824c2114e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECJPAKECC26X2_FSM_GENERATE_SHARED_SECRET_RETURN</name>
      <anchorfile>_e_c_j_p_a_k_e_c_c26_x2_8h.html</anchorfile>
      <anchor>a86672312df1570101cb3d269b924333cacf5937a6a81d5af3c6909f553baf30e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GPIO.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_g_p_i_o_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_RESERVED</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9338b76015f438019f21c32922f3308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_SUCCESS</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>acef3ff21200e0cff860ddd2b64adac07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_ERROR</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9128d9c1019c04160cfd76af9dff919a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUTPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaad0c4b9c093f1d57fd03061b7456193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac52528c42a8eb3be193f49de5ed7d820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae660060d38901c2370d8f104fbb842a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga16cfdcae58be5f77932b36f43e7c1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaf4e7be1d009ff2c25a048ab7fe401d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga2917f431dff7eb7f5559643bd8df251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_MED</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac1d2c5bf8f2359d26d28abc8aa393b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga25609d59d41f081ae9759d5862dc9dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae86eb6dc677c962a9ad94bdad6752dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad4fd3be9a7bec74d862cb1caecc5d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_INPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga874e34de3bef2d9415b4311dd6bed234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad2e8d27bfc96ef0de4dd35db10055412</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4fb7b60751481b6988049fe8fa94a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad09e6716ad1b54cb6509b8c92a6567c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_NONE</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga666c6995ed5737b43a707d1cacd9fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_FALLING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga7a69ee26049dc2f8b5059b00a24b9f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_RISING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4a9f53e525d1f1659b485274d08ff91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_BOTH_EDGES</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0829900a2dd949219edc6ddc8d928f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gab0f05c331bb66230f175e574d0d317a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga669d2e840e0f934426670a069a5efe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_ONLY</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac8df4b49e09cb612275ed7d00e8cc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_DO_NOT_CONFIG</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0974eb3af57b7bccef9ac749d4cf23a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>GPIO_PinConfig</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a7f5d979226db633309b3fdc0f4a8aef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>GPIO_CallbackFxn</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a46b0c9afbe998c88539abc92082a1173</anchor>
      <arglist>)(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_clearInt</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a870cd0b05ac6fae2a930c4ea3298b570</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_disableInt</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a33005dec4e3a9a58322dd33779990a86</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_enableInt</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a31c4e65b3855424418262e35521c7051</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_getConfig</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>adf0153b2f2ab21828521aec8eb568d39</anchor>
      <arglist>(uint_least8_t index, GPIO_PinConfig *pinConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_init</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a7aaec489dca5ac4d278d2eb3ae38a2d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint_fast8_t</type>
      <name>GPIO_read</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a39deeae6a6b28d3c56693a668601177e</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_setCallback</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a24c401f32e65f60f11a1594fdafb9d2a</anchor>
      <arglist>(uint_least8_t index, GPIO_CallbackFxn callback)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>GPIO_setConfig</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a015b75143cc3b8914cc298c5c4fc097e</anchor>
      <arglist>(uint_least8_t index, GPIO_PinConfig pinConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_toggle</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a202292e331e2eb9ccf97f4caab2e97aa</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_write</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>adf697825b43c26c0126173780e57eb58</anchor>
      <arglist>(uint_least8_t index, unsigned int value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_RESERVED</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9338b76015f438019f21c32922f3308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_SUCCESS</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>acef3ff21200e0cff860ddd2b64adac07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_ERROR</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9128d9c1019c04160cfd76af9dff919a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUTPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaad0c4b9c093f1d57fd03061b7456193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac52528c42a8eb3be193f49de5ed7d820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae660060d38901c2370d8f104fbb842a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga16cfdcae58be5f77932b36f43e7c1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaf4e7be1d009ff2c25a048ab7fe401d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga2917f431dff7eb7f5559643bd8df251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_MED</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac1d2c5bf8f2359d26d28abc8aa393b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga25609d59d41f081ae9759d5862dc9dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae86eb6dc677c962a9ad94bdad6752dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad4fd3be9a7bec74d862cb1caecc5d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_INPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga874e34de3bef2d9415b4311dd6bed234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad2e8d27bfc96ef0de4dd35db10055412</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4fb7b60751481b6988049fe8fa94a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad09e6716ad1b54cb6509b8c92a6567c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_NONE</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga666c6995ed5737b43a707d1cacd9fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_FALLING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga7a69ee26049dc2f8b5059b00a24b9f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_RISING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4a9f53e525d1f1659b485274d08ff91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_BOTH_EDGES</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0829900a2dd949219edc6ddc8d928f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gab0f05c331bb66230f175e574d0d317a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga669d2e840e0f934426670a069a5efe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_ONLY</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac8df4b49e09cb612275ed7d00e8cc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_DO_NOT_CONFIG</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0974eb3af57b7bccef9ac749d4cf23a7</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Synopsis</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Synopsis_Code</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Examples</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Example_callback</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Example_reconfigure</docanchor>
  </compound>
  <compound kind="file">
    <name>GPIOCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/gpio/</path>
    <filename>_g_p_i_o_c_c26_x_x_8h</filename>
    <includes id="_g_p_i_o_8h" name="GPIO.h" local="no" imported="no">ti/drivers/GPIO.h</includes>
    <class kind="struct">GPIOCC26XX_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_EMPTY_PIN</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gafd3a36893f287868e89f52ad3028647e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_00</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9df90ec187763683c4eaed593d358013</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_01</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1517f769b85937467831948da88a2f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_02</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8135b039ec5e330acf6e3d8537d60855</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_03</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga4aaed6f9970315406d6e336070e454b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_04</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga26c4d3e65c836464a5eb0ed82a81f20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_05</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaeabbc647f451d8e38122cf4090340d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_06</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga77f186ae066398a90eeb509b36669dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_07</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadd55f5a414e365f598b70a82f6702c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_08</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacda8042974ed48b7c2a443194fc38abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_09</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga05f52fde8069fcf0cfb2d402f66059eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_10</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga77cd660fc81974b5aca40b71cf19b701</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_11</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gae43ad67feed2594fca16f728a4370a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_12</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga06c358d2a3dd7c8e1df95debdd05abdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_13</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadbdb48ba0c4442195218a9ddd47216e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_14</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9f8e48d6505bab472f244bdd3a09d314</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_15</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga33f7040ad5310a2016da71d3f9d3a8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_16</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa0c0e910f6eb279b7ef816d80ddc57ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_17</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga16ef430a5c6fc095eae357ea0da9eae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_18</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa8debefa14c291aae6934b4a1f9d2b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_19</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga27a107bace659fb5794f3006bf3fde2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_20</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga027e920b68bd09a64a98c88c7d5110f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_21</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadd164676da3172dcd3ba7ec80398b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_22</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga2cb39452780504dff0188ef3ddd7e71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_23</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga07951649eb1fc0fef858161d04cfab9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_24</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8b0ea5a02c2021929f79019580312d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_25</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga3958f17cc269abea657eff59c25d6d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_26</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga09380ef292de0568024085542b905fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_27</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1b5462223c705b087bb6fe038e1edb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_28</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf46ec9fe29cc059be1183d7abbf3b20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_29</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacbef3dd6c35bb9be9382cd04e599840e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_30</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga157328572f63fec37c4fe75d0b934617</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_31</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaaa466824da319dfa3f84032fdba8740b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct GPIOCC26XX_Config</type>
      <name>GPIOCC26XX_Config</name>
      <anchorfile>_g_p_i_o_c_c26_x_x_8h.html</anchorfile>
      <anchor>a483053b4270a9694fc8079e77217d453</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIOCC26xx_release</name>
      <anchorfile>_g_p_i_o_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3f6016047a2b28e213692960f74fa8e9</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_EMPTY_PIN</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gafd3a36893f287868e89f52ad3028647e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_00</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9df90ec187763683c4eaed593d358013</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_01</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1517f769b85937467831948da88a2f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_02</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8135b039ec5e330acf6e3d8537d60855</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_03</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga4aaed6f9970315406d6e336070e454b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_04</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga26c4d3e65c836464a5eb0ed82a81f20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_05</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaeabbc647f451d8e38122cf4090340d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_06</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga77f186ae066398a90eeb509b36669dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_07</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadd55f5a414e365f598b70a82f6702c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_08</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacda8042974ed48b7c2a443194fc38abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_09</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga05f52fde8069fcf0cfb2d402f66059eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_10</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga77cd660fc81974b5aca40b71cf19b701</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_11</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gae43ad67feed2594fca16f728a4370a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_12</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga06c358d2a3dd7c8e1df95debdd05abdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_13</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadbdb48ba0c4442195218a9ddd47216e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_14</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9f8e48d6505bab472f244bdd3a09d314</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_15</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga33f7040ad5310a2016da71d3f9d3a8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_16</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa0c0e910f6eb279b7ef816d80ddc57ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_17</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga16ef430a5c6fc095eae357ea0da9eae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_18</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa8debefa14c291aae6934b4a1f9d2b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_19</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga27a107bace659fb5794f3006bf3fde2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_20</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga027e920b68bd09a64a98c88c7d5110f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_21</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadd164676da3172dcd3ba7ec80398b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_22</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga2cb39452780504dff0188ef3ddd7e71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_23</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga07951649eb1fc0fef858161d04cfab9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_24</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8b0ea5a02c2021929f79019580312d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_25</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga3958f17cc269abea657eff59c25d6d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_26</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga09380ef292de0568024085542b905fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_27</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1b5462223c705b087bb6fe038e1edb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_28</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf46ec9fe29cc059be1183d7abbf3b20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_29</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacbef3dd6c35bb9be9382cd04e599840e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_30</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga157328572f63fec37c4fe75d0b934617</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_31</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaaa466824da319dfa3f84032fdba8740b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GPTimerCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/timer/</path>
    <filename>_g_p_timer_c_c26_x_x_8h</filename>
    <class kind="struct">GPTimerCC26XX_HWAttrs</class>
    <class kind="struct">GPTimerCC26XX_Object</class>
    <class kind="struct">GPTimerCC26XX_Config</class>
    <class kind="struct">GPTimerCC26XX_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>GPT_MODE_ONESHOT_UP</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5d50b9348b12ac0acf558d5792dfd18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPT_MODE_PERIODIC_UP</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad45a55cbded959cf341c3384ff7e473c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPT_MODE_EDGE_COUNT_UP</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac710f5d3604bc5b87b2e57c60e36c08d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPT_MODE_EDGE_TIME_UP</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aca59474a336de2c1cc9c075ce0b96d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPT_NUM_INTS</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae8166f42d637bc48b784b2524e49d0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPT_PARTS_COUNT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae3d45cf5aeefb7cb0adef012a1554f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_Width</type>
      <name>GPTimerCC26XX_Width</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aeb2b955f6dda2b101294c7b521e715b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_Mode</type>
      <name>GPTimerCC26XX_Mode</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a13c88da09d4f9806f5555690bf2e3a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_Interrupt</type>
      <name>GPTimerCC26XX_Interrupt</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa4cc2366361f3ae2d3438d4496e6b184</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_Part</type>
      <name>GPTimerCC26XX_Part</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7067a38f9de14af167de8df90dfb18d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_PinMux</type>
      <name>GPTimerCC26XX_PinMux</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a02bcd903a770b3bc9bea666cf5b0bded</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_DebugMode</type>
      <name>GPTimerCC26XX_DebugMode</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1c5a4b610efe0481e6ebf9575820a6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_Direction</type>
      <name>GPTimerCC26XX_Direction</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9a4f7b5e5f3af06cd07d3d7c42419fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_SetMatchTiming</type>
      <name>GPTimerCC26XX_SetMatchTiming</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a80a3229a3305b590fb470b4b1ec6704c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum GPTimerCC26XX_Edge</type>
      <name>GPTimerCC26XX_Edge</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a32b251408c3c97a16d017a095555aa18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct GPTimerCC26XX_Config</type>
      <name>GPTimerCC26XX_Config</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac827d51b6288add49797cd98976e9188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GPTimerCC26XX_Config *</type>
      <name>GPTimerCC26XX_Handle</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab85403dde5940c587c57ca1a140e655a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>GPTimerCC26XX_IntMask</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac74410bfd92bf89732dd795bbe8769d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>GPTimerCC26XX_Value</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab667a2fd47273a9778f5011774fa55c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>GPTimerCC26XX_HwiFxn</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6b9b95974e20f85ccd3f8463fdda84f1</anchor>
      <arglist>)(GPTimerCC26XX_Handle handle, GPTimerCC26XX_IntMask interruptMask)</arglist>
    </member>
    <member kind="typedef">
      <type>struct GPTimerCC26XX_HWAttrs</type>
      <name>GPTimerCC26XX_HWAttrs</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a415d99f6aca4a4a8bf94a6328021c15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct GPTimerCC26XX_Object</type>
      <name>GPTimerCC26XX_Object</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a98c0a6722f2d48af3b7c032235181bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct GPTimerCC26XX_Params</type>
      <name>GPTimerCC26XX_Params</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad5264b3636e1d40a6cbd64cf150be32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_Width</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a37f7594eb4084eff43d5b80bb6418ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_CONFIG_32BIT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a37f7594eb4084eff43d5b80bb6418ec7afbeda4c45001e3d32d50f576d6259016</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_CONFIG_16BIT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a37f7594eb4084eff43d5b80bb6418ec7a2e5a3c43a8c62eeace6b38800d39392f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_Mode</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3f0539fd948c59b31df04dff5b7024c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_MODE_ONESHOT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3f0539fd948c59b31df04dff5b7024caea969d39975d0d759030b9b51423d5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_MODE_PERIODIC</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3f0539fd948c59b31df04dff5b7024cab1bc09dafb683b3d5b83d7653aa6c2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_MODE_EDGE_COUNT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3f0539fd948c59b31df04dff5b7024cad5c7266ba7dc198e1dd6e5040ce28b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_MODE_EDGE_TIME</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3f0539fd948c59b31df04dff5b7024ca7f54e9a614b16868cc15ca6f6824641f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_MODE_PWM</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3f0539fd948c59b31df04dff5b7024ca5d09320529435b9b021abd37d4dac117</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_Interrupt</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1e0397cdf2412358dfdf0eb0df40db92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_INT_TIMEOUT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1e0397cdf2412358dfdf0eb0df40db92a6c6f5236dcbe5f37289a4a513451851e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_INT_CAPTURE_MATCH</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1e0397cdf2412358dfdf0eb0df40db92a438a33e76043ddb51f1c9e93820a8040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_INT_CAPTURE</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1e0397cdf2412358dfdf0eb0df40db92ae3e86fdcf14f9ff34c92aaf953b159d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_INT_MATCH</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1e0397cdf2412358dfdf0eb0df40db92a87f843ea54618ca92890d4db7f38f242</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_Part</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aff5462fa33c306f2c8bd29284fd898b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_A</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aff5462fa33c306f2c8bd29284fd898b0a0630f8ce6004469fe81ebbc804e7ac2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_B</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aff5462fa33c306f2c8bd29284fd898b0a09aae74a0a9878654fa701a70b76387b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_PinMux</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_0A</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359a46af9b3278d2116fd4862c7fe19624b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_0B</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359a1e7ba339de898f1572f21424ce125f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_1A</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359acc7f9d714b4eb87595ebd5a8fdd6ed2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_1B</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359a69db29a9a9029d1fcfabfbf20ba26ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_2A</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359a48b2ab2ad9e83e67d94421adb06f4aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_2B</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359a3e1fd803b55127a98c4709cc9e811e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_3A</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359a4b93799cba930f4b538d0f0b3bfee4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT_PIN_3B</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4a2e82c659e0ea1fa2ae7a852298359aca82a1cd0f9e891472b4f5b09998a597</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_DebugMode</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4c80c79c9acaf8e482e8244adbae73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_DEBUG_STALL_OFF</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4c80c79c9acaf8e482e8244adbae73ea1aca5e7c45ce80046cc86c309b1500b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_DEBUG_STALL_ON</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4c80c79c9acaf8e482e8244adbae73ea78ecad7414438f969450881393850b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_Direction</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5e56cf3fdef86c705265b2a44a1b275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_DIRECTION_DOWN</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5e56cf3fdef86c705265b2a44a1b275aa59182c9e66e7c7591d9492edd1beddb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_DIRECTION_UP</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5e56cf3fdef86c705265b2a44a1b275aa1bbb01e280145c4b4e4e04e6dde2f062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_SetMatchTiming</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9667f75063ad28303d1b1420d34c1018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_SET_MATCH_NEXT_CLOCK</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9667f75063ad28303d1b1420d34c1018a5272d767dfc7efed4617614589d41ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_SET_MATCH_ON_TIMEOUT</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9667f75063ad28303d1b1420d34c1018a26ab82e7192a9662aad4f28334d9c7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GPTimerCC26XX_Edge</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac72f25419727329702ec162a2b6b9151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_POS_EDGE</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac72f25419727329702ec162a2b6b9151a0dda532d331ac235bead20fad3975f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_NEG_EDGE</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac72f25419727329702ec162a2b6b9151a2189f990a1c45892bdfcb31855d7d98f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPTimerCC26XX_BOTH_EDGES</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac72f25419727329702ec162a2b6b9151a2219c0e15065a692a80b4049036cd20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_Params_init</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a11e9f3ff24f5f075989f89d99e65e827</anchor>
      <arglist>(GPTimerCC26XX_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>GPTimerCC26XX_Handle</type>
      <name>GPTimerCC26XX_open</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a30f6c028f0abea0b35c3be3d1609ea9b</anchor>
      <arglist>(unsigned int index, const GPTimerCC26XX_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_close</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0a148f2232f5bb4c59015de965c82d43</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_start</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a869213ede8949245112fd7ca9c9ebdaa</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_stop</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aebdbd7f83c3824555e4abb7399802765</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_setLoadValue</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa365d9e1d6a1b324090510f2748db771</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_Value loadValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_setMatchValue</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3f83bdcc8482297952f6e08ccadd0e11</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_Value matchValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_setCaptureEdge</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae6a091f0962d33a7897ae61b501aedc4</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_Edge edge)</arglist>
    </member>
    <member kind="function">
      <type>GPTimerCC26XX_Value</type>
      <name>GPTimerCC26XX_getFreeRunValue</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>af4832251ebc2e81a952bbc1c39d2502e</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>GPTimerCC26XX_Value</type>
      <name>GPTimerCC26XX_getValue</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a553ef86139c25234964c81783aa2cd94</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_registerInterrupt</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4032d544f2b79ae1a999a4faa5ee0884</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_HwiFxn callback, GPTimerCC26XX_IntMask intMask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_unregisterInterrupt</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>adf0a8716a4197bba10d67322c3dfe5ac</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_enableInterrupt</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>af08557caa1e95c615a17428521d22d9d</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_IntMask interruptMask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_disableInterrupt</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8aca62c518c9ff0347ec09f464b88b26</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_IntMask interruptMask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPTimerCC26XX_configureDebugStall</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5a8bdc7643305d21dcfcd567d215b7f8</anchor>
      <arglist>(GPTimerCC26XX_Handle handle, GPTimerCC26XX_DebugMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GPTimerCC26XX_PinMux</type>
      <name>GPTimerCC26XX_getPinMux</name>
      <anchorfile>_g_p_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>acc37d2af3b532038792452eee5bffa94</anchor>
      <arglist>(GPTimerCC26XX_Handle handle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>I2C.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_i2_c_8h</filename>
    <class kind="struct">I2C_Transaction</class>
    <class kind="struct">I2C_Params</class>
    <class kind="struct">I2C_FxnTable_</class>
    <class kind="struct">I2C_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_SUCCESS</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa0bcf3acd26ac82bd8ff91daba2c78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ERROR</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7323fe57c39c46d0da9910e17f5f0b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga11c31c9869ed2441789205d9e5967d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2C_Config_ *</type>
      <name>I2C_Handle</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a1d8718f847129c7aa61dd1c264d8a13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2C_CallbackFxn</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>adaa5c99b7c23a00bac52d15a2469764e</anchor>
      <arglist>)(I2C_Handle handle, I2C_Transaction *transaction, bool transferStatus)</arglist>
    </member>
    <member kind="typedef">
      <type>struct I2C_FxnTable_</type>
      <name>I2C_FxnTable</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a58fd875c3596b3856b6f1aebbceb3085</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2C_Config_</type>
      <name>I2C_Config</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ae43e4c7b224a8cc37764acb792182453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2C_TransferMode</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a39f3b9340fc4ee241b0d2da9b2841c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_MODE_BLOCKING</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a39f3b9340fc4ee241b0d2da9b2841c26abe065350be2a0ae5c9beb24624626c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_MODE_CALLBACK</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a39f3b9340fc4ee241b0d2da9b2841c26a129731a7edeb285f43a54b2cf9f5ac72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2C_BitRate</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_100kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea966fd2df13b3a9825615c50335cf1987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_400kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea83cc3750242e6ae9194cd7ed94f764d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_1000kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea38a2e32ba65eb0f67b928d181242befa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_3330kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea37abd9be14a25ed731f14694922ee7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_3400kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea0c1376dab54ab817b76de1513b5707fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_cancel</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a8cad0c04a9eca0fffc0ffe5586a5179b</anchor>
      <arglist>(I2C_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_close</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a12c86d89a687f2ee1eb980d99c32326d</anchor>
      <arglist>(I2C_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>I2C_control</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a4c74b1b9f8e76ac22bec7608491cb223</anchor>
      <arglist>(I2C_Handle handle, uint_fast16_t cmd, void *controlArg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_init</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a9ff51ddf1d325776fef90cce0223772b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>I2C_Handle</type>
      <name>I2C_open</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a2db3461e1e956d9b86af414da2fb05f6</anchor>
      <arglist>(uint_least8_t index, I2C_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_Params_init</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ab11636302074d67180207ab81ceb323c</anchor>
      <arglist>(I2C_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>I2C_transfer</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac5d827b67fe77d7d179026941cc069d7</anchor>
      <arglist>(I2C_Handle handle, I2C_Transaction *transaction)</arglist>
    </member>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Overview</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Usage</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Synopsis</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Synopsis_Code</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Examples</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_open</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_write3bytes</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_read5bytes</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_writeread</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_callback</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>I2CCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/i2c/</path>
    <filename>_i2_c_c_c26_x_x_8h</filename>
    <includes id="_i2_c_8h" name="I2C.h" local="no" imported="no">ti/drivers/I2C.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">I2CCC26XX_I2CPinCfg</class>
    <class kind="struct">I2CCC26XX_HWAttrsV1</class>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>I2CBaseAddrType</name>
      <anchorfile>_i2_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6e087d828c4463de0061d8205b2245d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2CCC26XX_I2CPinCfg</type>
      <name>I2CCC26XX_I2CPinCfg</name>
      <anchorfile>_i2_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a92eeee6e19d215804204c4830a82d424</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2CCC26XX_HWAttrsV1</type>
      <name>I2CCC26XX_HWAttrsV1</name>
      <anchorfile>_i2_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a84b33b790b23b7b5317fca113a7fb691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const I2C_FxnTable</type>
      <name>I2CCC26XX_fxnTable</name>
      <anchorfile>_i2_c_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6fb66ad0052e9ab9d1c1b65b8276fc61</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_i2_c_c_c26_x_x_8h">I2C_USE_CASES</docanchor>
  </compound>
  <compound kind="file">
    <name>I2S.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_i2_s_8h</filename>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <class kind="struct">I2S_Transaction_</class>
    <class kind="struct">I2S_Params_</class>
    <class kind="struct">I2S_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>I2S_ALL_TRANSACTIONS_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab6513a393fed75b7c1b507d5ec9047fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TRANSACTION_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8265d03e72406770257a834e377247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TIMEOUT_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga815abf87dfe4353e42bea24940f45d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_BUS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaeff50b687883296e143e5da70102a915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_WS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab9cb86b261eb8a0abcfc19091f46385a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_READ_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga50be1b2cc5cef182aff769f626eb6e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_WRITE_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacb0dde45fe8df930d9914a100fbfcef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2S_Config_ *</type>
      <name>I2S_Handle</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ada845645663caf2bc9dc5816cb7f7c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2S_Transaction_</type>
      <name>I2S_Transaction</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a8cc4f8389984f39ac02643bd23d8c947</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2S_Callback</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a011a6a344bae2163e24b811e75c76fde</anchor>
      <arglist>)(I2S_Handle handle, int_fast16_t status, I2S_Transaction *transactionPtr)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2S_RegUpdate</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a7ce338dedc6f90e9b86705ad6a2e3eea</anchor>
      <arglist>)(uint32_t ui32Base, uint32_t ui32NextPointer)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2S_StopInterface</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a518f25dc99f76453c3ef7bfdb7fc390c</anchor>
      <arglist>)(I2S_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>enum I2S_MemoryLength_</type>
      <name>I2S_MemoryLength</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>af17772fe96b97eabab3169d1071d8522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum I2S_Role_</type>
      <name>I2S_Role</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a5c8ca73490b1543e9208bf11966810f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum I2S_SamplingEdge_</type>
      <name>I2S_SamplingEdge</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>aba10d78101dca20c71689a3bcd72a9df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum I2S_PhaseType_</type>
      <name>I2S_PhaseType</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a10c301d1d8adaa75e85bc5e19a510aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum I2S_DataInterfaceUse_</type>
      <name>I2S_DataInterfaceUse</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a683a626a98ae8a61b0c77b5ed811b0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum I2S_ChannelConfig_</type>
      <name>I2S_ChannelConfig</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9a445124b8fe8062ccf8749106dd7df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2S_Params_</type>
      <name>I2S_Params</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a7f4e84de95edef54fd2415eaa3f62022</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2S_Config_</type>
      <name>I2S_Config</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a519615f3b1ef24ac6c1f952539dbf6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_MemoryLength_</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9fac4db9f2c58421eaafb5e801cb6afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_8BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9fac4db9f2c58421eaafb5e801cb6afaa13e1dbc37a214b697892127dd14b39ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_16BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9fac4db9f2c58421eaafb5e801cb6afaaa95b67ba7278bcb1d9a64cba9a8e1bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_24BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9fac4db9f2c58421eaafb5e801cb6afaacc56087b412f11af3dc890f066fac0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_32BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9fac4db9f2c58421eaafb5e801cb6afaa926727054bff1f3cbe2540434d0fab42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_Role_</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ab255ddd1543bf85a8a55283a6e840476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SLAVE</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ab255ddd1543bf85a8a55283a6e840476a2e9b49c09201c26bec35c9b854b09e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MASTER</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ab255ddd1543bf85a8a55283a6e840476a10b52b2d09a9f58e2daeec0f5a392bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_SamplingEdge_</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a64f399624d5e416237ab019457b571cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SAMPLING_EDGE_FALLING</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a64f399624d5e416237ab019457b571cdac2b123abf8d93dc779178fd3ede764eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SAMPLING_EDGE_RISING</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a64f399624d5e416237ab019457b571cda54900e14a06cfb9a08de7b1ed2583491</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_PhaseType_</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ae7a6a5c7436367f64c54d02a4aab86f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_PHASE_TYPE_SINGLE</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ae7a6a5c7436367f64c54d02a4aab86f3abe139271fd1177a8b3e81156a966695d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_PHASE_TYPE_DUAL</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ae7a6a5c7436367f64c54d02a4aab86f3a0b3e4c2e6cca0317d05ec75b872b34de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_DataInterfaceUse_</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD0_DISABLED</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875aa745a9c11f2a2d74d1c6d001a32b355b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD0_INPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875ae0e5e7026b88277c279de0e798488e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD0_OUTPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875ab32df02fc78f8a4eabe6efa84fe3b28e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD1_DISABLED</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875aac2fb5fe175b0b96da5c7ea069ae48b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD1_INPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875abc860688d07b2022d075448f597d7811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD1_OUTPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a2bf30e9c50d66a540e97c44212562875a966016f222e7831b399aac26e4b8c7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_ChannelConfig_</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_NONE</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6af29054f891314a79ee5d2b105678fce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_MONO</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a9ae976eea3f03628bac96b3bd5b590a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_MONO_INV</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6ace24478308aa18581ea899b4749e1eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_STEREO</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6aa99f621d20e7c434dd8fc6eec81f88f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_1_CHANNEL</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6aef21e0755c603bfa84cfcfb76087a2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_2_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a70296e535a023f5e486d169c56241938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_3_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6acde532a4455d55712113984d1d9d14ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_4_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a4de908d16fbc3997ca26f9daf0a1ab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_5_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a4dbc52ac6e50657e77ab1a5663c9bebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_6_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a6393bde043d2d9a820d0eaae3723390f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_7_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a3d28c1be7347c31842f949fce1b5c245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_8_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a7f1bd716ad44f22c8b359102c206c0fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_ALL</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a869e02dcb8a44b982502ff8731e87ce6a93050a292e0f863d146fc2bb6461505b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_close</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a111a6b44f868cf90f7b25ced9f22ae1b</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_init</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a79e8fdf40ee80c49b2cac09a3e428a82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>I2S_Handle</type>
      <name>I2S_open</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a49305a04152a6fb37a7afceabca642eb</anchor>
      <arglist>(uint_least8_t index, I2S_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_Params_init</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a961c116273a6e8d4581278b2666f13b5</anchor>
      <arglist>(I2S_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_Transaction_init</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a6f45de7e62ff3b345dbd22a1e317e8b0</anchor>
      <arglist>(I2S_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_setReadQueueHead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3f18edea4f87b8c16b0fa5ed60a02082</anchor>
      <arglist>(I2S_Handle handle, I2S_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_setWriteQueueHead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a85c5b6f87590e1db5459c3be8d83993f</anchor>
      <arglist>(I2S_Handle handle, I2S_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_startClocks</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3fd30c0f3e1d047df949d8a00260b2e5</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_stopClocks</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3c929c2811ba58180ef57abbb33d3ec5</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_startRead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a4631dbd7e6b7480a95c976d03aa69e0f</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_startWrite</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a77a9ed563af3d038541d14f14901ab30</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_stopRead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ab97bed409bc639d5c7a5e847c5166ab0</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_stopWrite</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a19039189f3d38c849aa8c55008409f31</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const I2S_Params</type>
      <name>I2S_defaultParams</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3854e487af0042986ad755b9517ff24c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Overview</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Usage</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Driver_Transactions</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Driver_ProvidingData</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Driver_StartStopClocks</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Examples</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_PlayAndStop</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_PlayAndStop_Code</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_Streaming</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_Streaming_Code</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_RepeatMode</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_RepeatMode_Code</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>I2SCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/i2s/</path>
    <filename>_i2_s_c_c26_x_x_8h</filename>
    <includes id="_i2_s_8h" name="I2S.h" local="no" imported="no">ti/drivers/I2S.h</includes>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">I2SCC26XX_HWAttrs_</class>
    <member kind="typedef">
      <type>struct I2SCC26XX_HWAttrs_</type>
      <name>I2SCC26XX_HWAttrs</name>
      <anchorfile>_i2_s_c_c26_x_x_8h.html</anchorfile>
      <anchor>a35fad2d88eeb69c1ed3652283cd73c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2SCC26XX_PtrUpdate</name>
      <anchorfile>_i2_s_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa84e66420b691a92b3afe93090563a41</anchor>
      <arglist>)(I2S_Handle handle, I2SCC26XX_Interface *interface)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LCDDogm1286.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/lcd/</path>
    <filename>_l_c_d_dogm1286_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <class kind="struct">LCD_Params</class>
    <class kind="struct">LCD_Command</class>
    <class kind="struct">LCD_Buffer</class>
    <class kind="struct">LCD_Object</class>
    <class kind="struct">LCD_HWAttrs</class>
    <class kind="struct">LCD_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>LCD_PIXELS</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a928104e5f675d3440ea7d9ed58ac70e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_BYTES</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a934cfbac97ccffd2447bafc8738ee9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_COLS</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a0afb537ac0813a7acc2f797a4d3baa0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_X_MIN</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ada0fff460272d8b44f3b469d208de0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_X_MAX</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a1d9ba2d8f9cc2124ff29e24abbe2c90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_ROWS</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a9a59fc4d524d3519a6bd0cb451850a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_Y_MIN</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a57d5310c857f96d5315b04fda2f87a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_Y_MAX</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ad14583f7d91ea48ff9f3e6ec9a920a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_PAGES</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a52bb29a342e1892b197f2d2b0a705550</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_PAGE_ROWS</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a8bacac7b7c712d9dd1a3bb85bb90ae84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_CHAR_WIDTH</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a4fad5c4c39b66358c5ab60f53d26ac86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCD_FONT_WIDTH</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a311c85b23f68d1ae7b4c242c9fa14159</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_Config *</type>
      <name>LCD_Handle</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a72910a78c343543f1610fd082d17d803</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LCD_Align</type>
      <name>LCD_Align</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a37efe29deb0009a1cd4891a969cf8775</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LCD_Page</type>
      <name>LCD_Page</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a3d74c82d360d6881797c2b48fc5b4265</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LCD_X_Limit</type>
      <name>LCD_X_Limit</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a998837ae7184adee6527cb2a51ac3598</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LCD_Y_Limit</type>
      <name>LCD_Y_Limit</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a3b3b2479aa52ec0991c6712bb3ba7ed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_Params</type>
      <name>LCD_Params</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ae0bf31ded7b0402797216a9151be1ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_Command</type>
      <name>LCD_Command</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aec810392c2a7c224a91179a5f36496c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_Buffer</type>
      <name>LCD_Buffer</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a091af8426beb91861af26dd202ddc3d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_Object</type>
      <name>LCD_Object</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aad7cfd1bc0b0593efef10fb73efdf148</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_HWAttrs</type>
      <name>LCD_HWAttrs</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ac52079af6c7a6e8db90b350f5267e590</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LCD_Config</type>
      <name>LCD_Config</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a4cefc793530eae238dcce72c9335319b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LCD_Align</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>abd8709188c7b3da9995941f70249f6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_ALIGN_LEFT</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>abd8709188c7b3da9995941f70249f6d5a3d311dab5c4b18d56c5e15390e3ed694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_ALIGN_CENTER</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>abd8709188c7b3da9995941f70249f6d5aefc05bcf179874ea14871f33617f55e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_ALIGN_RIGHT</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>abd8709188c7b3da9995941f70249f6d5a51b08200ccddb00bb9157ac2031f3e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LCD_Page</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE0</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea5d088e98870705e757c0d10fd95771cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE1</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea44f463bf5e5c1fb3609c1c73c650b2f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE2</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea7fa6486b29fd4f5b5d2265cb8abacd10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE3</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea587de21d67e48c862ada8f6a2a35a753</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE4</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea0e386b6cb40d97bda67368627336b3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE5</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea0e99c30f6d4196f06b9a927d0d8d45dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE6</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023bea940495b5652f76c73d87f5380dd6e4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE7</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023beae54a3dc2f4b343a49f8ba6ea0a57480b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_PAGE_COUNT</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa44cf10c63a7f9e8d3fc52bdb03023beaef545e9e07dfe38c80b59bd18d742189</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LCD_X_Limit</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a705e435e0177093225824d75041083ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_X_FIRST</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a705e435e0177093225824d75041083cea1a9fc733f2ec111453b3435aa8d94a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_X_LAST</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a705e435e0177093225824d75041083ceacd6a56f537d8e29eea6f7a2c3bf93ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LCD_Y_Limit</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a63ea0c2951a06bf871ddfa3a0fe34200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_Y_FIRST</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a63ea0c2951a06bf871ddfa3a0fe34200ab61b667439ad4a352bc60d5b801f0e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LCD_Y_LAST</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a63ea0c2951a06bf871ddfa3a0fe34200ac8b3b0727bb45101afcc3493cebb72fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_close</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a9a6a62dcb23c554201420e7e555e6ecc</anchor>
      <arglist>(LCD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_init</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a301a0b73016a44e015dbd374c08243d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>LCD_Handle</type>
      <name>LCD_open</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a7eda62cc528319af943746da6b5d7688</anchor>
      <arglist>(LCD_Buffer *buffers, uint8_t nBuffers, LCD_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_Params_init</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a65cc6910ac18d5d823205870acaf3dc3</anchor>
      <arglist>(LCD_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_writeLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a1208372099f0929bbbd1a5ec8621afce</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, char *str, unsigned int uiValue, unsigned char ucFormat, unsigned char ucLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_update</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a6974d1de55526b98c6af02c90fd34185</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_updatePart</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>abd9b38254fab63ff90f3b4b93d4c8d8b</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, LCD_Page iPageFrom, LCD_Page iPageTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClear</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a3f274bf5496eaf924a2eda563b753d1b</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClearPage</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a0f9a680f8ddc7a8c3bee766530246fcb</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClearPart</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a13d5b0ec129280f820b07501cafd9247</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, LCD_Page iPageFrom, LCD_Page iPageTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferInvert</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>af2908b510d4b4ae4ab1fc1a1620d66b0</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucYFrom, unsigned char ucXTo, unsigned char ucYTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferInvertPage</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a513135f9dc91ff5fbd6175e0c3c392ed</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferPrintString</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a6f1ed502ab103ba04643798985dbcb11</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, const char *pcStr, unsigned char ucX, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferPrintStringAligned</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a91b19df1b66a71acbe38ec9dcd76d5c1</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, const char *pcStr, LCD_Align iAlignment, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferPrintInt</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ae67a1e76c36a173a26a1f617ed7cb86e</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, int i32Number, unsigned char ucX, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferPrintIntAligned</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ae446df10e9b11284d958350bafb01956</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, int i32Number, LCD_Align iAlignment, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferPrintFloat</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a3e57bb5655ffd5a694f251fcbeccc610</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, float fNumber, unsigned char ucDecimals, unsigned char ucX, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferPrintFloatAligned</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a5342a001698e39fe6443cbcadf61e3f7</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, float fNumber, unsigned char ucDecimals, LCD_Align iAlignment, LCD_Page iPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferSetLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ae5fcaac1c5d5ce2fafecf38c8c78bb15</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucYFrom, unsigned char ucXTo, unsigned char ucYTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClearLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a5520daaaedbda09ccb4e1f804cb6387f</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucYFrom, unsigned char ucXTo, unsigned char ucYTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferSetHLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>abac67849744509fc2ace41db2eda90e1</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, unsigned char ucY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClearHLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a33d49a7d0a49f12bf8ec12288404eb82</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, unsigned char ucY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferSetVLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a6cd9439691ab890bdc12cb61739c71c1</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucYFrom, unsigned char ucYTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClearVLine</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>af099bb3569888e86f758958d814bb58f</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucYFrom, unsigned char ucYTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferHArrow</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ad9460c9ec6519a340e36d26d365bbed5</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, unsigned char ucY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferVArrow</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a40b3e9e6a7086787047a174815dfeb70</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucYFrom, unsigned char ucYTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferSetPx</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a028108d7554d62733d00295fd150a2a6</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferClearPx</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>aa99fc0e617619d6f7b9befd56ffac26c</anchor>
      <arglist>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_bufferCopy</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>afa33971216c7767eb3f3790615fa9a31</anchor>
      <arglist>(LCD_Handle handle, unsigned int fromBufIndex, unsigned int toBufIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LCD_setContrast</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>ac159f265608d80bd4baff4c3a4d30959</anchor>
      <arglist>(LCD_Handle handle, unsigned char ucContrast)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const LCD_Command</type>
      <name>LCD_initCmd</name>
      <anchorfile>_l_c_d_dogm1286_8h.html</anchorfile>
      <anchor>a411050fdcc6700760de47f49d470ec2a</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_l_c_d_dogm1286_8h">USE_CASES_LCD</docanchor>
  </compound>
  <compound kind="file">
    <name>LCDDogm1286_util.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/lcd/</path>
    <filename>_l_c_d_dogm1286__util_8h</filename>
    <member kind="function">
      <type>unsigned char</type>
      <name>LCD_getStringLength</name>
      <anchorfile>_l_c_d_dogm1286__util_8h.html</anchorfile>
      <anchor>a068d749b3c83a97a90c5131ab3a18686</anchor>
      <arglist>(const char *pcStr)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>LCD_getIntLength</name>
      <anchorfile>_l_c_d_dogm1286__util_8h.html</anchorfile>
      <anchor>a65ba9a20c56c80fd96a8f8bbba9036fb</anchor>
      <arglist>(int i32Number, unsigned char uiRadix)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>LCD_getFloatLength</name>
      <anchorfile>_l_c_d_dogm1286__util_8h.html</anchorfile>
      <anchor>a74dc5837d075f91e682f0c609c6873ed</anchor>
      <arglist>(float fNumber, unsigned char ucDecimals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_itoa</name>
      <anchorfile>_l_c_d_dogm1286__util_8h.html</anchorfile>
      <anchor>a35284379cf6f37176f7cb1e31858b330</anchor>
      <arglist>(unsigned int uiNum, unsigned char *buf, unsigned char uiRadix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>List.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/utils/</path>
    <filename>_list_8h</filename>
    <class kind="struct">List_Elem</class>
    <class kind="struct">List_List</class>
    <member kind="typedef">
      <type>struct List_Elem</type>
      <name>List_Elem</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a952d8bdbb969ea99ef3cae1808fa851b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct List_List</type>
      <name>List_List</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a2c84bcdfd05e5108ff99148408f985ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_clearList</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a32d4e53da70142cec310cfa0006f146a</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>List_empty</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>ae60fe07328af331a850bd6bb25ecafee</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function">
      <type>List_Elem *</type>
      <name>List_get</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>ac8c9babb4481314e3f0cce444f7fbade</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_head</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a7eeb8ffe91673aa56fdd1c552c6435b6</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_insert</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a0725acc51893e377f5ee9225dd6fcd26</anchor>
      <arglist>(List_List *list, List_Elem *newElem, List_Elem *curElem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_next</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a1683e4f9d2462f12dd60d0f810075ab5</anchor>
      <arglist>(List_Elem *elem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_prev</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>af0834d0f68b1adcf8c1d4f2fb10276fc</anchor>
      <arglist>(List_Elem *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_put</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a1608b5d7dc712fcf01dc5d837e22078a</anchor>
      <arglist>(List_List *list, List_Elem *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_putHead</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a1194d8eead79730c5da10e36b60f7044</anchor>
      <arglist>(List_List *list, List_Elem *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_remove</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a480146af207e00199372c66edb4d9960</anchor>
      <arglist>(List_List *list, List_Elem *elem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_tail</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a04432014c20d52c680076e3613aa68da</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NoRTOS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/kernel/nortos/</path>
    <filename>_no_r_t_o_s_8h</filename>
    <class kind="struct">_NoRTOS_Config</class>
    <member kind="typedef">
      <type>struct _NoRTOS_Config</type>
      <name>NoRTOS_Config</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>a28dea0ee567d35cc2ee31fa62b8a2a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoRTOS_getConfig</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>a5beb1c723f408204ffa9251f778b9da6</anchor>
      <arglist>(NoRTOS_Config *cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoRTOS_setConfig</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>ada45395ac2516b5d94fe4260e79def62</anchor>
      <arglist>(NoRTOS_Config *cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoRTOS_start</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>a71a949aa77a36c1fbb73b482545d0b1b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NVS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_n_v_s_8h</filename>
    <class kind="struct">NVS_Params</class>
    <class kind="struct">NVS_Attrs</class>
    <class kind="struct">NVS_FxnTable</class>
    <class kind="struct">NVS_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>NVS_CMD_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaa9fa1c41660d17139bce63ff34cd774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gad82fd139152ca14946c80c6c91edb4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_SUCCESS</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga5f3b6583ee909863b86799762dc8b4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_ERROR</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga995c9896630b7a0cd1662e7be9c4cf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8aa59663f65af4fa564a3a83cd7d6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_TIMEOUT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga1b42309ac8efec007159e58382dd4a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_OFFSET</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga30a816faeeb9a50757055fb6f10189a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_ALIGNMENT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga07f2472d1204718531ddf7a369b86ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_SIZE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga6bdc99317ca872755243d9a76ad1db95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_WRITE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad8da7024d67625daf4347c22d50fdb4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_ERASE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>afdf449ac94235c5c4b108f5e5e925f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_PRE_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a5a4d29a7281f1ad484cc8b7ccc30b363</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_POST_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a04d152372a71d46161f28b4db3163202</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_WAIT_FOREVER</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>abaf71a566fbd69fc043956bfc8146153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_NO_WAIT</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ad078d2e244f0c623722b3b9492733e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_REGION_NOT_ADDRESSABLE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a85b2420d7270c59d423d1733ed1f708a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct NVS_Config_ *</type>
      <name>NVS_Handle</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>abdc600f33c94c8bd706ad42ccdafcf3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_CloseFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a82f2a5311bf6dc69d62046fe20c3e108</anchor>
      <arglist>)(NVS_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_ControlFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a80f150226f2b7a76dce36543d2ee635b</anchor>
      <arglist>)(NVS_Handle handle, uint_fast16_t cmd, uintptr_t arg)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_EraseFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a20498b8b2109828d0a3be43c1db27518</anchor>
      <arglist>)(NVS_Handle handle, size_t offset, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_GetAttrsFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a68a18a48c3f49ce6d2f30b7e8931859e</anchor>
      <arglist>)(NVS_Handle handle, NVS_Attrs *attrs)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_InitFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ad9de01b5a2f7cee170c2012e33a60f8a</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>NVS_Handle(*</type>
      <name>NVS_OpenFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ab40d7f4d10399ad5dfe51730d1dd0b9a</anchor>
      <arglist>)(uint_least8_t index, NVS_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_ReadFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a4846926325171c03e9b5cce5b16b6ba7</anchor>
      <arglist>)(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_WriteFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a70430e07ab4927c8943cdadcd4add4bf</anchor>
      <arglist>)(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize, uint_fast16_t flags)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_LockFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>aa726bab3d4fe81260d3fefbb92e93060</anchor>
      <arglist>)(NVS_Handle handle, uint32_t timeout)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_UnlockFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a45293f34f71f0a7e7c798917207b2874</anchor>
      <arglist>)(NVS_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct NVS_Config_</type>
      <name>NVS_Config</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a5fc4d942abf495e07fba7f3c0a7da83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_close</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a12147fcc41f532802d97c0784c3e30c3</anchor>
      <arglist>(NVS_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_control</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a79b9b07b5a9d2c35426c15932c6d7c0e</anchor>
      <arglist>(NVS_Handle handle, uint_fast16_t cmd, uintptr_t arg)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_erase</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a4f309d160ac4641c89501adc95d170b3</anchor>
      <arglist>(NVS_Handle handle, size_t offset, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_getAttrs</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ae2b667cddd9531d7a06bb0f9d8fd890f</anchor>
      <arglist>(NVS_Handle handle, NVS_Attrs *attrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_init</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a94e249f718eba502cdf34d098c83209e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_lock</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a62d1593df9acb6d3c6446f1719f3bf28</anchor>
      <arglist>(NVS_Handle handle, uint32_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>NVS_Handle</type>
      <name>NVS_open</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a15488564c98e00aa62400a54dde3d44e</anchor>
      <arglist>(uint_least8_t index, NVS_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_Params_init</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>af7562718a6eed5456d423ef7a16c8598</anchor>
      <arglist>(NVS_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_read</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a9e058f0724a9c325664f68ecfa2239cb</anchor>
      <arglist>(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_unlock</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a01fb843c26ca406c5c9463eae6b0b817</anchor>
      <arglist>(NVS_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_write</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>aae7abe0cb889a6d0cc1858bfc69ab7e0</anchor>
      <arglist>(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize, uint_fast16_t flags)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_ERASE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>afdf449ac94235c5c4b108f5e5e925f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_PRE_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a5a4d29a7281f1ad484cc8b7ccc30b363</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_POST_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a04d152372a71d46161f28b4db3163202</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_WAIT_FOREVER</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>abaf71a566fbd69fc043956bfc8146153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_NO_WAIT</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ad078d2e244f0c623722b3b9492733e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_REGION_NOT_ADDRESSABLE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a85b2420d7270c59d423d1733ed1f708a</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Overview</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Usage</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Synopsis</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Synopsis_Code</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Examples</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Examples_open</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Examples_typical</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>NVSCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/nvs/</path>
    <filename>_n_v_s_c_c26_x_x_8h</filename>
    <class kind="struct">NVSCC26XX_HWAttrs</class>
    <class kind="struct">NVSCC26XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>NVSCC26XX_STATUS_LOW_VOLTAGE</name>
      <anchorfile>_n_v_s_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa21de44fea696d5e49503a7e0d9a00b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const NVS_FxnTable</type>
      <name>NVSCC26XX_fxnTable</name>
      <anchorfile>_n_v_s_c_c26_x_x_8h.html</anchorfile>
      <anchor>ade3114c185df6a15ec62305dd5c6f6cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NVSRAM.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/nvs/</path>
    <filename>_n_v_s_r_a_m_8h</filename>
    <class kind="struct">NVSRAM_HWAttrs</class>
    <class kind="struct">NVSRAM_Object</class>
    <member kind="variable">
      <type>const NVS_FxnTable</type>
      <name>NVSRAM_fxnTable</name>
      <anchorfile>_n_v_s_r_a_m_8h.html</anchorfile>
      <anchor>a311a36a2f7b071ff09c7aed038ce5668</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NVSSPI25X.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/nvs/</path>
    <filename>_n_v_s_s_p_i25_x_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <class kind="struct">NVSSPI25X_HWAttrs</class>
    <class kind="struct">NVSSPI25X_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>NVSSPI25X_CMD_MASS_ERASE</name>
      <anchorfile>_n_v_s_s_p_i25_x_8h.html</anchorfile>
      <anchor>a89a4a07b7be073b897feebf4760f1662</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVSSPI25X_SPI_MANAGES_CS</name>
      <anchorfile>_n_v_s_s_p_i25_x_8h.html</anchorfile>
      <anchor>abf8ed123f5292601fe76a62275bb60f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const NVS_FxnTable</type>
      <name>NVSSPI25X_fxnTable</name>
      <anchorfile>_n_v_s_s_p_i25_x_8h.html</anchorfile>
      <anchor>a105e78ab0c157b8ad847af271b05b18c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_n_v_s_s_p_i25_x_8h">SPI_CS_MGMT</docanchor>
  </compound>
  <compound kind="file">
    <name>PDMCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/pdm/</path>
    <filename>_p_d_m_c_c26_x_x_8h</filename>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">PDMCC26XX_metaData</class>
    <class kind="struct">PDMCC26XX_pcmBuffer</class>
    <class kind="struct">PDMCC26XX_Config</class>
    <class kind="struct">PDMCC26XX_HWAttrs</class>
    <class kind="struct">PDMCC26XX_StreamNotification</class>
    <class kind="struct">PDMCC26XX_BufferRequest</class>
    <class kind="struct">PDMCC26XX_Params</class>
    <class kind="struct">PDMCC26XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>PDM_TASK_STACK_SIZE</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>adc205204f69ea867c95b30efe1530746</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PCM_SAMPLE_SIZE</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a77f1de681b5b50d6e6db60818b5a481d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PCM_COMPRESSION_RATE</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a98722a106401368b0df3e68c19c7edd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINIMUM_PDM_BUFFER_QUEUE_DEPTH</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>abfc314e1ae4cfbcb2e9bd114e1f1703d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PCM_METADATA_SIZE</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae553576c451c4277d4496b5fe7f26e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *(*</type>
      <name>PDMCC26XX_MallocFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>acce02978ce536ea3b98a673587a6e75c</anchor>
      <arglist>)(size_t memSize)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PDMCC26XX_FreeFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>af95e29fbea1fadfb011e4ceaa36f1ab0</anchor>
      <arglist>)(void *ptr, size_t memSize)</arglist>
    </member>
    <member kind="typedef">
      <type>bool(*</type>
      <name>PDMCC26XX_Pdm2PcmFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1af75b7f4ebc9bf2fa53b5193ac5ac18</anchor>
      <arglist>)(const void *pdmInBuffer, uint32_t *decimationState, const int32_t *biquadCoefficients, int16_t *pcmOutBuffer)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_Config</type>
      <name>PDMCC26XX_Config</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>acfb1c3839ec53d02703f67f884760119</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_HWAttrs</type>
      <name>PDMCC26XX_HWAttrs</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0188ef7df22961ba87b588d2913e793e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_Config *</type>
      <name>PDMCC26XX_Handle</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae5b9ecc0f8eb494e162b4a0a49c0636a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PDMCC26XX_Status</type>
      <name>PDMCC26XX_Status</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>affb09af7b7de674b100b1170d574f86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PDMCC26XX_PcmSampleRate</type>
      <name>PDMCC26XX_PcmSampleRate</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad41001a1c117cb2e5ef737526cc64e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PDMCC26XX_Gain</type>
      <name>PDMCC26XX_Gain</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a62dc3dc8663629a376fc5e4e546bfd05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_StreamNotification</type>
      <name>PDMCC26XX_StreamNotification</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>abebd17c183efa14ae0ebe9c229f6c577</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PDMCC26XX_CallbackFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab6fdee59a79029e938e3fbf0e446fa91</anchor>
      <arglist>)(PDMCC26XX_Handle handle, PDMCC26XX_StreamNotification *streamNotification)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_BufferRequest</type>
      <name>PDMCC26XX_BufferRequest</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae8cebf1f4b5897234e3be6744eb26997</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_Params</type>
      <name>PDMCC26XX_Params</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a31104648f1849f5eef36ef1d98465a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_Object</type>
      <name>PDMCC26XX_Object</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8faebd80770af564015834b59c2d3414</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDMCC26XX_Status</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_IDLE</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779a6541acf36472a5a4bae1e918532f5bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_BLOCK_READY</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779a7fbacf5e84041b2a8b635df5cf1789a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_BLOCK_READY_BUT_PDM_OVERFLOW</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779a3bb09525b04c787e27fa7ce2505ebcbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_ERROR</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779addbca577e199cd8cad66eb880d81896b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_STOPPING</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779a57716d15faf09d4f066fe77f473de9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_STOPPED</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779a772c35528b1c577ee8702c064c37554f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_STREAM_FAILED_TO_STOP</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afbfe993e790be75708df00186070a779addce783eed694cb817cd67ae51d036d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDMCC26XX_PcmSampleRate</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac6ec7972a50a1ed1c12039047d3b2522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_PCM_SAMPLE_RATE_16K</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac6ec7972a50a1ed1c12039047d3b2522a817f2eda95c722d7455bc796b6a2f51f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_PCM_SAMPLE_RATE_8K</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac6ec7972a50a1ed1c12039047d3b2522aba74658601fcf48e4fa9dff9bd70ce94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDMCC26XX_Gain</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_GAIN_24</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267fad32df2e2c24bdb0d67c3ec63c0c46178</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_GAIN_18</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267fa332b4d0aeb82669190f2b2bcfa9ea6c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_GAIN_12</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267fa5929463bec3b2bb2da1e240c8a3a2aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_GAIN_6</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267faa10d346442b2427f47bd7939a0f0dc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_GAIN_0</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267fa78540d7f8b49c98ee87afaaaba1f9c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_GAIN_END</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c2d67aee547a2c8228465034ae0267faa4811cff958da5ec7ee700237beacb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PDMCC26XX_init</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8347c3f56db0ad7c3f357f13be098cf2</anchor>
      <arglist>(PDMCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>PDMCC26XX_Handle</type>
      <name>PDMCC26XX_open</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a431d9b71e0d0eebd5ab85960f1c82ee0</anchor>
      <arglist>(PDMCC26XX_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PDMCC26XX_close</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>afb9597d25d6b2e02f6903bf6652d4371</anchor>
      <arglist>(PDMCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PDMCC26XX_startStream</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>af5fafd7c475117bd3ed6783273c2220d</anchor>
      <arglist>(PDMCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PDMCC26XX_stopStream</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>aebd3b158f38ba1489a56efe5b9a722d2</anchor>
      <arglist>(PDMCC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PDMCC26XX_requestBuffer</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>a15a0017513c13ca244f7e3a0f5761e8d</anchor>
      <arglist>(PDMCC26XX_Handle handle, PDMCC26XX_BufferRequest *bufferRequest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PDMCC26XX_Params_init</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>af8421d9a4381fc68e217650c426ba633</anchor>
      <arglist>(PDMCC26XX_Params *params)</arglist>
    </member>
    <member kind="variable">
      <type>const PDMCC26XX_Config</type>
      <name>PDMCC26XX_config</name>
      <anchorfile>_p_d_m_c_c26_x_x_8h.html</anchorfile>
      <anchor>affba2052183dd56aa6315608a6ec2633</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PDMCC26XX_util.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/pdm/</path>
    <filename>_p_d_m_c_c26_x_x__util_8h</filename>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">PDMCC26XX_I2S_Config</class>
    <class kind="struct">PDMCC26XX_I2S_HWAttrs</class>
    <class kind="struct">PDMCC26XX_I2S_AudioClockConfig</class>
    <class kind="union">PDMCC26XX_I2S_AudioPinConfig</class>
    <class kind="struct">PDMCC26XX_I2S_AudioFormatConfig</class>
    <class kind="struct">PDMCC26XX_I2S_StreamNotification</class>
    <class kind="struct">PDMCC26XX_I2S_BufferRequest</class>
    <class kind="struct">PDMCC26XX_I2S_BufferRelease</class>
    <class kind="struct">PDMCC26XX_I2S_Params</class>
    <class kind="struct">PDMCC26XX_I2S_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>xI2S_DEBUG</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac0a29d5ef3ba2f0be6cb4a4541b5c9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_MIN_ALLOWED_QUEUE_SIZE</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a85f935f09b6a23da28925d08fd6ed5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_BLOCK_OVERHEAD_IN_BYTES</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a8b3b29f28fba7618e60409457a14f6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CMD_SUCCESS</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a66928c9a1538dd63beb1fecb3b79817a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CMD_UNDEFINED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a36e0057e52c089224e60dd745ae8b38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CMD_NO_SUCCESS</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a841dd26303cb285b2a8fa0a12ef11410</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_GENERIC_DISABLED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>abfc231cf2cad7f16b75523024546e912</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_GENERIC_ENABLED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a7addf5824e414ed59a40c360b8497fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_DEFAULT_SAMPLE_STAMP_MOD</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a49eaea1595b37d242a7788a20396aaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordClockPhase_Single</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ad5e97275f3d868adfea67f33b08a2632</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordClockPhase_Dual</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ad37a9ce9685187bfa88526541722cdaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordClockPhase_UserDefined</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a96543fc7fe2422e8680c4aae87abdd48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_SampleEdge_Negative</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a34160fd5f1a971d556156570afc26e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_SampleEdge_Postive</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a287270844da242b7f70ae66ec92c71db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordClockSource_Ext</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a6500f8c6c4855330299d5c260f67b6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordClockSource_Int</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>acebf97118ebc531d62b9b632548f4404</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_BitClockSource_Ext</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ab679cdfce2dc3c8f8a17b69d96f5b178</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_BitClockSource_Int</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a0657ed74629a0b3d5a00e7caad959f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_ClockSource_Normal</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aa98a64d9ee07d7978624379de0b79083</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_ClockSource_Inverted</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a34a2318316066a045683f98694180d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_ADUsageDisabled</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a7a06ccb33b16d28d7d38570e90db4145</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_ADUsageInput</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>af1aad8fceab94ec0db069110420bec38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_ADUsageOutput</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ad565f18a862a2e3504acb0460735ecfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN0_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a32d06c7aef6f466e626e9756c85298f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN1_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a51db26f64a63f3907271a1225be723e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN2_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac3fbe3609b6573ba800ad0b032dfad71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN3_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac974ad9e49dd28cde900652ea15ead1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN4_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a5f6fa4892a90bf5671f11bc6a852102d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN5_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aac36e1d05aeb0511fa6477b92f92d5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN6_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a799a0e38f04c4688298abd5516b910e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN7_ACT</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ab1bc745d8d55898e5c8074f53cb5e4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_MONO_MODE</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a26ad06f03e00557ec6969cb628e308f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_STEREO_MODE</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aab44412c8919fe1577a4a0bc428aa90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_DISABLED_MODE</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a1d104f1b2b70f3a0574862e0ee8475fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_CHAN_CFG_MASK</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>afffc8012d078494895133861764690fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordLengthMin</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>af6b394e2eac2812d14d58c62b31467ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordLength16</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ab4eded8479e91228d09d210a067c752f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_WordLengthMax</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a516ce5fd2b154e2cc487ff73c03f5f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_SinglePhase</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aa3869a39dc817d8297a1fffd77568d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_DualPhase</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>acbd5c34905fd0866315e4065e934248e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_NegativeEdge</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a1ccf47516280b04346af4f57d5bc743d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_PositiveEdge</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>af5b4926b849db9bb23a24b3807a3380a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_MemLen16bit</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a636b307f107609c5ed33408388f92cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_MemLen24bit</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac3e46840c6ebbd42ce8020f30cb2245f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_FormatLJF</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a5dbd78db575466a7afd1a579b9d3bef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_FormatI2SandDSP</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ae67f83d561b7bdb5441f21c7aa1577f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_FormatRJFmin</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac5fe3ebd081f4e3bd650cf3f09a50523</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_FormatRJFmax</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>af782ae465f8903ee8349e27f27d172dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDMCC26XX_I2S_DIR_CHA_M</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a3105b54f425f7b4f8bdbef8cdab85432</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *(*</type>
      <name>PDMCC26XX_I2S_MallocFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ae0835bec1853c8f956ef5bfeaa22769b</anchor>
      <arglist>)(size_t memSize)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PDMCC26XX_I2S_FreeFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>afec03dc00074b8cc95d6268dcae8999c</anchor>
      <arglist>)(void *ptr, size_t memSize)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_Config *</type>
      <name>PDMCC26XX_I2S_Handle</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>adc3b274b4a54e54316ad385fd4290c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PDMCC26XX_I2S_Status</type>
      <name>PDMCC26XX_I2S_Status</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ad0f2102751f8a8f0bcd47dd154aa836c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PDMCC26XX_I2S_Mode</type>
      <name>PDMCC26XX_I2S_Mode</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a2f220663270b5388de54e612e5773d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>PDMCC26XX_I2S_TransferSize</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a5b4e6b7c39c913bc6ae97261a5f2a226</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_Config</type>
      <name>PDMCC26XX_I2S_Config</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac69d2ed91954cdfe4c1bd668a2dab290</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_HWAttrs</type>
      <name>PDMCC26XX_I2S_HWAttrs</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a8e141a2dcd47376258fe58167a990027</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_AudioClockConfig</type>
      <name>PDMCC26XX_I2S_AudioClockConfig</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a8def7a5770e8bb7c904727e21cdf1fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>union PDMCC26XX_I2S_AudioPinConfig</type>
      <name>PDMCC26XX_I2S_AudioPinConfig</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ae4dd5264f128d13849211fc9baf12bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_AudioFormatConfig</type>
      <name>PDMCC26XX_I2S_AudioFormatConfig</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a3ba2d6efa7148c2657a7288f8fbc675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PDMCC26XX_I2S_RequestMode</type>
      <name>PDMCC26XX_I2S_RequestMode</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a3efab417bd3d431079d133bbbe062c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_StreamNotification</type>
      <name>PDMCC26XX_I2S_StreamNotification</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac2e036836381051508576dc3bb2fe78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_BufferRequest</type>
      <name>PDMCC26XX_I2S_BufferRequest</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ad0118de2c13236f0d75f7b5279c0b72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_BufferRelease</type>
      <name>PDMCC26XX_I2S_BufferRelease</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ab2a6fc7ef5e6cf67ee2686e4d6553ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PDMCC26XX_I2S_CallbackFxn</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a82786f08d1b22895c79dcd8880fb92f3</anchor>
      <arglist>)(PDMCC26XX_I2S_Handle handle, PDMCC26XX_I2S_StreamNotification *notification)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_Params</type>
      <name>PDMCC26XX_I2S_Params</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a7d296d85afcdecb82b5572261a03d3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PDMCC26XX_I2S_Object</type>
      <name>PDMCC26XX_I2S_Object</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>add23279adb905ee56c889bc38c2fe3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDMCC26XX_I2S_Status</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_IDLE</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a16df5a8f67d12b81d307af221d46ab18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_STARTED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a4a32be3e7f98c0bacfb55142e1d4cf89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_CANCELED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a8284b284a95225ef6919d51336364ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_FAILED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a1f07b976c3da69bb99bd89be2ce4d894</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_ERROR</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a2927dbcaeefc4cd9fc49b2d51767fda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_BUFFER_READY</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a9b0c4bf2229c25d6f271bc8e5d8f6f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_BUFFER_DROPPED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1ac5b7a089507d1a77b053d4681bb081a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_STOPPING</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1aac07f8085e63f0883863ad9ec092b6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_STOPPED</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a0c245201c506bf7eacfb9f0f451e33dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_STREAM_FAILED_TO_STOP</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac1e4fbeb33409a874015d4e0609ddff1a895fc1d5ca5ab81c4c7c7223c0b8b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDMCC26XX_I2S_Mode</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a7392b654a84f42e717a4df1485058a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_PDM</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a7392b654a84f42e717a4df1485058a84a2e5f04919021778dc64b531cc9ca19dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_I2S</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a7392b654a84f42e717a4df1485058a84ae4abdf809e7f1f26a1cbdee9cdfbec2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PDMCC26XX_I2S_RequestMode</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aef896b2a7fc07d3b145f8d02eaa9e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_MODE_BLOCKING</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aef896b2a7fc07d3b145f8d02eaa9e377a8a325f16e9c7ea73e9a6571285bf4de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PDMCC26XX_I2S_CALLBACK_MODE</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>aef896b2a7fc07d3b145f8d02eaa9e377a8b043983d80de30bc3c61f1df84a2212</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PDMCC26XX_I2S_init</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>af19da786c201c7c1852177a92f851158</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>PDMCC26XX_I2S_Handle</type>
      <name>PDMCC26XX_I2S_open</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a8168bcdab9f1e46c26823555df6f797f</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle, PDMCC26XX_I2S_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PDMCC26XX_I2S_close</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a6c337d78b6c364ca580cfcb86176c35a</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PDMCC26XX_I2S_startStream</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>ac318829ebbf5e66a0ee0c23ba3b36ba4</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PDMCC26XX_I2S_stopStream</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>abe6c63029970621defb60aaa467d9b6c</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PDMCC26XX_I2S_requestBuffer</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a69561b9a6f07a82bfe3b18f3c51fcd19</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle, PDMCC26XX_I2S_BufferRequest *bufferRequest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PDMCC26XX_I2S_releaseBuffer</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a6056d2fdff1a8bf429e6486ae4ba211b</anchor>
      <arglist>(PDMCC26XX_I2S_Handle handle, PDMCC26XX_I2S_BufferRelease *bufferRelease)</arglist>
    </member>
    <member kind="variable">
      <type>const PDMCC26XX_I2S_Config</type>
      <name>PDMCC26XX_I2S_config</name>
      <anchorfile>_p_d_m_c_c26_x_x__util_8h.html</anchorfile>
      <anchor>a1a4dd4e230736baa3d1c7c62528e918c</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PIN.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_p_i_n_8h</filename>
    <class kind="struct">PIN_State_s</class>
    <member kind="define">
      <type>#define</type>
      <name>PIN_UNASSIGNED</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aba219226dfdc9ea2fb82d6a7995395bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_TERMINATE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae22ec44ad92ee130a665ca56aad38c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_ID</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>add47c82f7563d28053f76d368d344bc6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GEN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae1f7e47a17caab9697e69e5b9aff270b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_INPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3cc36a3cdad818a5261bae5a2657a437</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_INPUT_DIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a1c8c8f99cf100a5d8745d879b18bd2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_HYSTERESIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a4113807b8b5acb98a84b26cc1730ad83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_NOPULL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a08ea493b755216db27b51a0402af862e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_PULLUP</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a8dd57072ca956a8ace1ee869216dda0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_PULLDOWN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a12b3efd67d32926ca0c310f95396de43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_INPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aa0ed7bdcf3409fb2e8d2553bfa26ef35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_HYSTERESIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a90670b834483d4047070f5f310998f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_PULLING</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a4f6a52f4c21a5ae30926e4d595ee9837</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_INPUT_MODE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3fe41a9595912571c21f68fa9d9585bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_OUTPUT_DIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a8728d817e2f0f18c5fccce87e13d3c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a086fd19a419fb4b09f30ed993a3088c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_LOW</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a269b0e2fe279666149ca1c5949bb32ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_HIGH</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aee8e9896270f36a15df12fb85f2cb4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_PUSHPULL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a8b219fa4a7727c4f5a7beb5134144324</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_OPENDRAIN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a7d238d7776de5cc504dc37d62ac61295</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_OPENSOURCE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a649eb3b178440cda981471c27ff761e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_SLEWCTRL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>afb6df44a1496358f288b2e90dce81a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_DRVSTR_MIN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a2a7469e68c23d12b137362dca78a7ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_DRVSTR_MED</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aa0c4f9401637a2170b192d5c69faa33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_DRVSTR_MAX</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a218e028386e01367f6e86a2a69eb464a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a204ca90eb78a0715cca07c95d6b67e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_GPIO_OUTPUT_VAL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a40f78467926deed6685f0beb39594be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_OUTPUT_BUF</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae8cadb31765041c9025447cf9538e687</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_SLEWCTRL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ab564685f4cfb90c924db8d7993612c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_DRVSTR</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a743420ef571111b0d87f15c0aebb7834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_OUTPUT_MODE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3ae1cb8c4750a2833e3dc0072bd9de82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_INV_INOUT</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a4f9620411ef92f88c3d2d7ac6c576635</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_INV_INOUT</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a668e9dfc27d1ef17602c3cd62ea8d0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_DIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ad9b6d7921f5a8ad9591bed6c432cd6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_NEGEDGE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3ec5fa8d38321d835720fa518dcfde44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_POSEDGE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>af4d309f5fad9c05487009326888154d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_BOTHEDGES</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aba2bee3661f16506e67c7fd8289ccf8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_IRQ</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a68cbd2a310fc62c0810754d0894cfeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_ALL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a7567bcbdf26a95ea42a860aa9beb5a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>PIN_Id</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a9ae8197f460bb76ea09a84f47d09921f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>PIN_Config</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae427b7d2925f9b0f3145e455cfdb5841</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PIN_State_s</type>
      <name>PIN_State</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a36ef69d50df6baa6973482669c24a522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PIN_State *</type>
      <name>PIN_Handle</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>afb2de52b054638f63c39df1f30a0d88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PIN_IntCb</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a289cbfdcb1e23ade7c3b0f5fc3b2d695</anchor>
      <arglist>)(PIN_Handle handle, PIN_Id pinId)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PIN_Status</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>abe0ad59bbf09e51fe37195a5e70b23f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIN_SUCCESS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>abe0ad59bbf09e51fe37195a5e70b23f6a5c9610fffc152c333036f2c2c7ee54e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIN_ALREADY_ALLOCATED</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>abe0ad59bbf09e51fe37195a5e70b23f6a8280bb6c2bd8ef1fc6f9e24d3d8ed864</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIN_NO_ACCESS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>abe0ad59bbf09e51fe37195a5e70b23f6a25bb5dfe42957cfd0922fc1ece880453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIN_UNSUPPORTED</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>abe0ad59bbf09e51fe37195a5e70b23f6a7abd102afc68f4c599c11f8f9c79e7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_init</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a0de1df98a14e6e13b16db414e54472ef</anchor>
      <arglist>(const PIN_Config aPinCfg[])</arglist>
    </member>
    <member kind="function">
      <type>PIN_Handle</type>
      <name>PIN_open</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>adaf3d21a94dbb7ee74eb2057fdf26103</anchor>
      <arglist>(PIN_State *state, const PIN_Config pinList[])</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_add</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae96b7cc445336d52f8f6db762ff80156</anchor>
      <arglist>(PIN_Handle handle, PIN_Config pinCfg)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_remove</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a7edb10913792e741318ef339d5c7ef13</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PIN_close</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a877e82b9c5333a122cc408e103feba68</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PIN_setUserArg</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ad7475e9397585a0c81f4420db027a63c</anchor>
      <arglist>(PIN_Handle handle, uintptr_t arg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uintptr_t</type>
      <name>PIN_getUserArg</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a6b90dabb1bb35348050d8fce03c046d9</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getInputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a5345b3e89e7c16c350b6098d4e29969a</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setOutputEnable</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ab3c10de54bf7cc948b00f1606102b12d</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId, bool outputEnable)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a36a6b18d90019d94afe1184760c370ee</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId, uint32_t val)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a084deb9d240e7878854ead1989c7a4de</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setInterrupt</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a69e2aac02eaabf8d3c3a248a27dd7d0e</anchor>
      <arglist>(PIN_Handle handle, PIN_Config pinCfg)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_clrPendInterrupt</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a82957789e7c370b6dd4f16fa36045522</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_registerIntCb</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a6dc645c7372f7b1c13da1facc9cabff0</anchor>
      <arglist>(PIN_Handle handle, PIN_IntCb callbackFxn)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Config</type>
      <name>PIN_getConfig</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aed24cb96de8fa957e9f7c05dd239f2f9</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setConfig</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>af67a96b69bd1b7a9fdbbe62e29ed9965</anchor>
      <arglist>(PIN_Handle handle, PIN_Config updateMask, PIN_Config pinCfg)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getPortMask</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ac709a20172ab5fcc869dcfb63ceadfb4</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getPortInputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a9c75d355f0a19441cb55caea4b1961d2</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getPortOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>af41c048cdb42ceb5871207deeaeb3d07</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setPortOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ac891b6a5d2bd115b79f4121d3eb127cb</anchor>
      <arglist>(PIN_Handle handle, uint32_t outputValueMask)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setPortOutputEnable</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a2c16e2a9a0cc5c8c5df73c610feb657b</anchor>
      <arglist>(PIN_Handle handle, uint32_t outputEnableMask)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GEN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae1f7e47a17caab9697e69e5b9aff270b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_INPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3cc36a3cdad818a5261bae5a2657a437</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_INPUT_DIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a1c8c8f99cf100a5d8745d879b18bd2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_HYSTERESIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a4113807b8b5acb98a84b26cc1730ad83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_NOPULL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a08ea493b755216db27b51a0402af862e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_PULLUP</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a8dd57072ca956a8ace1ee869216dda0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_PULLDOWN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a12b3efd67d32926ca0c310f95396de43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_INPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aa0ed7bdcf3409fb2e8d2553bfa26ef35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_HYSTERESIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a90670b834483d4047070f5f310998f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_PULLING</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a4f6a52f4c21a5ae30926e4d595ee9837</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_INPUT_MODE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3fe41a9595912571c21f68fa9d9585bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_OUTPUT_DIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a8728d817e2f0f18c5fccce87e13d3c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a086fd19a419fb4b09f30ed993a3088c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_LOW</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a269b0e2fe279666149ca1c5949bb32ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_GPIO_HIGH</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aee8e9896270f36a15df12fb85f2cb4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_PUSHPULL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a8b219fa4a7727c4f5a7beb5134144324</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_OPENDRAIN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a7d238d7776de5cc504dc37d62ac61295</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_OPENSOURCE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a649eb3b178440cda981471c27ff761e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_SLEWCTRL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>afb6df44a1496358f288b2e90dce81a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_DRVSTR_MIN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a2a7469e68c23d12b137362dca78a7ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_DRVSTR_MED</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aa0c4f9401637a2170b192d5c69faa33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_DRVSTR_MAX</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a218e028386e01367f6e86a2a69eb464a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a204ca90eb78a0715cca07c95d6b67e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_GPIO_OUTPUT_VAL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a40f78467926deed6685f0beb39594be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_OUTPUT_BUF</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ae8cadb31765041c9025447cf9538e687</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_SLEWCTRL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ab564685f4cfb90c924db8d7993612c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_DRVSTR</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a743420ef571111b0d87f15c0aebb7834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_OUTPUT_MODE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3ae1cb8c4750a2833e3dc0072bd9de82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_INV_INOUT</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a4f9620411ef92f88c3d2d7ac6c576635</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_INV_INOUT</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a668e9dfc27d1ef17602c3cd62ea8d0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_DIS</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ad9b6d7921f5a8ad9591bed6c432cd6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_NEGEDGE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a3ec5fa8d38321d835720fa518dcfde44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_POSEDGE</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>af4d309f5fad9c05487009326888154d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_IRQ_BOTHEDGES</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aba2bee3661f16506e67c7fd8289ccf8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_IRQ</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a68cbd2a310fc62c0810754d0894cfeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIN_BM_ALL</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a7567bcbdf26a95ea42a860aa9beb5a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getInputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a5345b3e89e7c16c350b6098d4e29969a</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setOutputEnable</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ab3c10de54bf7cc948b00f1606102b12d</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId, bool outputEnable)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a36a6b18d90019d94afe1184760c370ee</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId, uint32_t val)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a084deb9d240e7878854ead1989c7a4de</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setInterrupt</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a69e2aac02eaabf8d3c3a248a27dd7d0e</anchor>
      <arglist>(PIN_Handle handle, PIN_Config pinCfg)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_clrPendInterrupt</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a82957789e7c370b6dd4f16fa36045522</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_registerIntCb</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a6dc645c7372f7b1c13da1facc9cabff0</anchor>
      <arglist>(PIN_Handle handle, PIN_IntCb callbackFxn)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Config</type>
      <name>PIN_getConfig</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>aed24cb96de8fa957e9f7c05dd239f2f9</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setConfig</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>af67a96b69bd1b7a9fdbbe62e29ed9965</anchor>
      <arglist>(PIN_Handle handle, PIN_Config updateMask, PIN_Config pinCfg)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getPortMask</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ac709a20172ab5fcc869dcfb63ceadfb4</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getPortInputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a9c75d355f0a19441cb55caea4b1961d2</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PIN_getPortOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>af41c048cdb42ceb5871207deeaeb3d07</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setPortOutputValue</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>ac891b6a5d2bd115b79f4121d3eb127cb</anchor>
      <arglist>(PIN_Handle handle, uint32_t outputValueMask)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PIN_setPortOutputEnable</name>
      <anchorfile>_p_i_n_8h.html</anchorfile>
      <anchor>a2c16e2a9a0cc5c8c5df73c610feb657b</anchor>
      <arglist>(PIN_Handle handle, uint32_t outputEnableMask)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PINCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/pin/</path>
    <filename>_p_i_n_c_c26_x_x_8h</filename>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <class kind="struct">PINCC26XX_HWAttrs</class>
    <member kind="define">
      <type>#define</type>
      <name>PIN_CHKEN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a62bc64a4f307af84ae177c2675de76a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_INPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>adceda75e6ee6dfdae2fd7769b809fc0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_HYSTERESIS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a63fe5dc3570f58ba8aa123db1cee6fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_NOPULL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8e3b3ef05fc9e291a6d9ad9971b8142c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_PULLUP</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a25291b96b05bfa0e4ff6365da4cbf221</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_PULLDOWN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3fac53dff43a2718044afdcdfa916d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_INPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2597baf0e1d85b01a0c953399b3ac8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_HYSTERESIS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a58d1d38ce029a08e7b7daefa5a37b36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_PULLING</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af544027abbe329d9bfab802d28db85b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_INPUT_MODE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4d6f0a3f1a8dcede9f92055d6d581d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef729e00581046126a8ddfaaffd89c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_GPIO_LOW</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c77c9ca4b7ea3c71ad06dd0a969533f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_GPIO_HIGH</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a92176ec67c16a6b11ba4a809c034656c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_PUSHPULL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a49e505c85c98df6615dcb287991d305b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_OPENDRAIN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a853703ea7b1f0e256971d0004bb9253c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_OPENSOURCE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a78cb87ea41dd5c40b02f91f118e8782a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_SLEWCTRL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab6336729706993f8423acf026dd7e9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DRVSTR_MIN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abb5efea898dfb62cd3723c9c106c7ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DRVSTR_MED</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2ea27041c2de39b7d28b4a495dd420c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DRVSTR_MAX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a541e467017624634a4549399479bac35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6563826ffb2b58202eb73a66a65300cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_GPIO_OUTPUT_VAL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf8ccbcf940ccff4ee0b256b536646ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_OUTPUT_BUF</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a15e5f5f426864eecd22dde20df02da4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_SLEWCTRL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a84ba4d3153e7ed56d8b5e13a916491dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_DRVSTR</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5454b1e509752bf1630ecb9f8e5ed6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_GPIO_OUTPUT_MODE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a66fd916ff55cf49609303cec1c82f2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_OUTPUT_MODE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2675ad051be4e0b38adf4221dccb08e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_INV_INOUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9b076380e85096d00be2c9ea5fa5bfb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_DIS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aeb198923bed467a471810e7f422abd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_NEGEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad24615804179fa7be640223f9ffaafa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_POSEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3bda1452134a8dbdd911bc447d1d460a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_BOTHEDGES</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf2fde6325d22f0fa402a268157bf6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_INV_INOUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>add9a6d78cb9a9c322eefc7edab96774a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_IRQ</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4ffb4f731c834515743811a1d101f745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_NO_WAKEUP</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a30ad99cc9f54e321433088d3fca822b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_WAKEUP_POSEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac66b4e9a1e30b3e9404d38af7f0de01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_WAKEUP_NEGEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a477f89a960b69e8f9524f79fb27d121c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_WAKEUP</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a25b0dce8372d1b9a25a8d88fb15fcc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_IOCFG</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa0f69a925a6849e92f2b52506dce84fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_ALL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad738c6c4e365f3a63d4a5620ecfa9766</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a34a392179279242211f40dc5e70a727f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c89bec12551b6168fa495a624e5e311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO2</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>adce988906439086ebb744865f66cbbde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO3</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a25a6de3a42448c978e4426d45d53ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO4</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a01b67a23d7f4b003e280d5b45dfe26e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO5</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a954b1bfc19345d5df0011ec2d8a21c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO6</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0087796716ceb72a56adef9c4c2a5481</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO7</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af646857e4e4b7bc34ccf0b6029071a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO8</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2ea0010cfa2ff03ce27ff41ba113dfe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO9</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa21c44a220737e668b5f47d53948c91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO10</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af2b5edf7bd5e09692bd588db69762718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO11</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a47dec0c44e437a1ee762a5ad65579711</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO12</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8587d8b01ff58a9e44c69f681a8a5403</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO13</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9054f3638cfc519f1120c93cebcc74af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO14</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5f954c43ab868ba10c1cb0b56b637069</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO15</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac2fa80ad26e292a57acd40aad35706cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO16</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7c33d96405c6b258fc9f64192d7d11a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO17</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8bdc44b33a921952a875b232ba90eece</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO18</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>afdc8f81dd314d58587b0b563c9bcd915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO19</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3368bb8b764b71fa0317542678645fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO20</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a375944150318e9210f12e0fe82b81948</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO21</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a93ece28a1be27fb6d8202ae4f30e2d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO22</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1d0d4bed8aa48e5b15c2408ad4099a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO23</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae0dd08058f49a45575f9886b9f38b906</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO24</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a06de9b0fd8670e462d81163baf7b2808</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO25</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab91d047da997d30fbf36c0e23dafa2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO26</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5e2ac43aec42da85be2a5e1696982c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO27</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a93cb24d016cf016c185206b8e7011e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO28</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1022f5ef1299a3d48c2816202fef95f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO29</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0aaff3357d986e4489e84a0ff3bff9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO30</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2d36db877b96c9c26026c9c1c0514af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO31</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef532163bb931a46bcbcd00fc9ca8b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_GPIO</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>afc65e6d65f939680cc596a207713b5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_AON_CLK32K</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a99871b823a34287bfc2027606551db4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_AUX_IO</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7fc71cdd74fbd97d4297ffed39302713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_RX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac72b13e3e19d75a4ce2240955786660d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_TX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a330141f9fd840aec1b7c4cabc111363a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_FSS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1ac8e06c048c6a1951e11054abcf1c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_CLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a77b7d2034982c09c8c3a75591b226e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2C_MSSDA</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa3db9a339c53a66396c6fdfde6d6062c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2C_MSSCL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa617fb5a0aeeda3e4bf7150d5e76a397</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_RX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab2932b3af0495872bf444b90cb83d2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_TX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5b92514b6f947d9d333927e7f6973677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_CTS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a522aeda2895c5cb3b0193b2ef3c2d718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_RTS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a51f1fec524b48909fcfd7f619fb0c008</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a09712aa3a7368b7c38a9bbc7c586932a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0eaba3a4172b8e3a5386f0ae915b7019</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_2</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a55943b8f44a0507753f93e5c10372446</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_3</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aaa2fe8a21207a1e8e4c15e1724d0ffd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_4</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad54431adae65b3ae0b8e7dad96f46e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_5</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac40077324ac80180a49465d1885a2fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_6</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa678108d3aa67fdd656d55778c48d732</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_7</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac786e2de45a697ba3a50fd354385b1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_SWV</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a41d5905977a5fb86dc4aa7addeaecaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_RX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3d873c9fc963e7abdd88ac92a2efb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_TX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6843ba0b056b1b2a7ee3b6471da4e6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_FSS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef46bbee91ef9b7786e7ff242ebc9383</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_CLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9625d595a8b69fa6e5405741818e1bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_AD0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4fda137377a46f157d7d1ec55339dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_AD1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3d04198ab5bfdd7a50d113833bf64bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_WCLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab79ff812095158eced35716d506be08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_BCLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1ca04c323c59730e77a057e750844564</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_MCLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae41e6f48afb4b7b06fac72ef98dd1866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_TRC</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4b9269f9eac469a814f20ac6f96196a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a89e0489423caa21a1e6339e018d925f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aab76af2130f96f3da07131cfd232ce71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO2</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a144116dadf2ba363c54c7d2507abe54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO3</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>adc5890a2a1333e956349ed23bbe49d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPI0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>acb09fb065bb0d5951baa8a6441471854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPI1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a71f92d2ec8410256434ce0968476a749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_DL_OUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad92f4bc3d98cd1363bac0beb6238c7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_DL_IN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abb958dd1da8d7fab19495a9d70cfc2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_CL_OUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a23575044cc0b9a4ce8b680339672f024</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_CL_IN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af897af5e1ed1dff451e4ae505eea3f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PINCC26XX_HWAttrs</type>
      <name>PINCC26XX_HWAttrs</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab5e14c623ee19df328043d474fa8e0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE uint32_t</type>
      <name>PIN_ctz</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a94ac62e1f4e034d392ef5827bb2ab763</anchor>
      <arglist>(uint32_t x)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE uint32_t</type>
      <name>PINCC26XX_getInputValue</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4ce86d295e0efee4a631def9cb26e7ba</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>PINCC26XX_setOutputEnable</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a833e0dd08dc27a1d6352ca16717e0ab9</anchor>
      <arglist>(PIN_Id pinId, bool outputEnable)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>PINCC26XX_setOutputValue</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aeaf9bc49924a3c2d54e2dde809fc9e37</anchor>
      <arglist>(PIN_Id pinId, uint32_t val)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE uint32_t</type>
      <name>PINCC26XX_getOutputValue</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa7fbdb67bd9a05c6ff1e452a425f3962</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>PINCC26XX_clrPendInterrupt</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9e8be001ff8ca9946dce5668685befae</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE uint32_t</type>
      <name>PINCC26XX_getPortInputValue</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3c3f6659316d282b2437b0fcc8a167c</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE uint32_t</type>
      <name>PINCC26XX_getPortOutputValue</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af27232d721ab28e8dd7a573d248c4388</anchor>
      <arglist>(PIN_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>PINCC26XX_setPortOutputValue</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1a0f5526c856dd7f25de8769ae9e4121</anchor>
      <arglist>(PIN_Handle handle, uint32_t outputValueMask)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>PINCC26XX_setPortOutputEnable</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8386a9396e0351299c63cc4a93cf6484</anchor>
      <arglist>(PIN_Handle handle, uint32_t outputEnableMask)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Config</type>
      <name>PINCC26XX_getConfig</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef985455a19581bdb47fff4314fc318b</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PINCC26XX_setWakeup</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7eea7460f3e2d4c68df55239471805aa</anchor>
      <arglist>(const PIN_Config aPinCfg[])</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>PINCC26XX_getMux</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>acbae7d243fc2d9d4de3a0e136ffa589f</anchor>
      <arglist>(PIN_Id pinId)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PINCC26XX_getPinCount</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>afc52e0c7fcaab7fba72679ddd3a69ed0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PIN_Status</type>
      <name>PINCC26XX_setMux</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac8cbb649db80dd03d8e8a487aef43294</anchor>
      <arglist>(PIN_Handle handle, PIN_Id pinId, int32_t nMux)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_INPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>adceda75e6ee6dfdae2fd7769b809fc0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_HYSTERESIS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a63fe5dc3570f58ba8aa123db1cee6fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_NOPULL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8e3b3ef05fc9e291a6d9ad9971b8142c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_PULLUP</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a25291b96b05bfa0e4ff6365da4cbf221</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_PULLDOWN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3fac53dff43a2718044afdcdfa916d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_INPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2597baf0e1d85b01a0c953399b3ac8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_HYSTERESIS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a58d1d38ce029a08e7b7daefa5a37b36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_PULLING</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af544027abbe329d9bfab802d28db85b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_INPUT_MODE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4d6f0a3f1a8dcede9f92055d6d581d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef729e00581046126a8ddfaaffd89c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_GPIO_LOW</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c77c9ca4b7ea3c71ad06dd0a969533f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_GPIO_HIGH</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a92176ec67c16a6b11ba4a809c034656c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_PUSHPULL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a49e505c85c98df6615dcb287991d305b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_OPENDRAIN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a853703ea7b1f0e256971d0004bb9253c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_OPENSOURCE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a78cb87ea41dd5c40b02f91f118e8782a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_SLEWCTRL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab6336729706993f8423acf026dd7e9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DRVSTR_MIN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abb5efea898dfb62cd3723c9c106c7ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DRVSTR_MED</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2ea27041c2de39b7d28b4a495dd420c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DRVSTR_MAX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a541e467017624634a4549399479bac35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_GPIO_OUTPUT_EN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6563826ffb2b58202eb73a66a65300cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_GPIO_OUTPUT_VAL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf8ccbcf940ccff4ee0b256b536646ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_OUTPUT_BUF</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a15e5f5f426864eecd22dde20df02da4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_SLEWCTRL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a84ba4d3153e7ed56d8b5e13a916491dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_DRVSTR</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5454b1e509752bf1630ecb9f8e5ed6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_GPIO_OUTPUT_MODE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a66fd916ff55cf49609303cec1c82f2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_OUTPUT_MODE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2675ad051be4e0b38adf4221dccb08e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_INV_INOUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9b076380e85096d00be2c9ea5fa5bfb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_DIS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aeb198923bed467a471810e7f422abd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_NEGEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad24615804179fa7be640223f9ffaafa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_POSEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3bda1452134a8dbdd911bc447d1d460a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_IRQ_BOTHEDGES</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abf2fde6325d22f0fa402a268157bf6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_INV_INOUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>add9a6d78cb9a9c322eefc7edab96774a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_IRQ</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4ffb4f731c834515743811a1d101f745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_NO_WAKEUP</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a30ad99cc9f54e321433088d3fca822b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_WAKEUP_POSEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac66b4e9a1e30b3e9404d38af7f0de01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_WAKEUP_NEGEDGE</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a477f89a960b69e8f9524f79fb27d121c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_WAKEUP</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a25b0dce8372d1b9a25a8d88fb15fcc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_IOCFG</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa0f69a925a6849e92f2b52506dce84fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_BM_ALL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad738c6c4e365f3a63d4a5620ecfa9766</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a34a392179279242211f40dc5e70a727f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8c89bec12551b6168fa495a624e5e311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO2</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>adce988906439086ebb744865f66cbbde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO3</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a25a6de3a42448c978e4426d45d53ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO4</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a01b67a23d7f4b003e280d5b45dfe26e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO5</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a954b1bfc19345d5df0011ec2d8a21c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO6</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0087796716ceb72a56adef9c4c2a5481</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO7</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af646857e4e4b7bc34ccf0b6029071a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO8</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2ea0010cfa2ff03ce27ff41ba113dfe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO9</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa21c44a220737e668b5f47d53948c91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO10</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af2b5edf7bd5e09692bd588db69762718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO11</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a47dec0c44e437a1ee762a5ad65579711</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO12</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8587d8b01ff58a9e44c69f681a8a5403</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO13</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9054f3638cfc519f1120c93cebcc74af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO14</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5f954c43ab868ba10c1cb0b56b637069</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO15</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac2fa80ad26e292a57acd40aad35706cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO16</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7c33d96405c6b258fc9f64192d7d11a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO17</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8bdc44b33a921952a875b232ba90eece</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO18</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>afdc8f81dd314d58587b0b563c9bcd915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO19</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3368bb8b764b71fa0317542678645fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO20</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a375944150318e9210f12e0fe82b81948</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO21</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a93ece28a1be27fb6d8202ae4f30e2d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO22</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1d0d4bed8aa48e5b15c2408ad4099a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO23</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae0dd08058f49a45575f9886b9f38b906</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO24</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a06de9b0fd8670e462d81163baf7b2808</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO25</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab91d047da997d30fbf36c0e23dafa2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO26</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5e2ac43aec42da85be2a5e1696982c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO27</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a93cb24d016cf016c185206b8e7011e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO28</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1022f5ef1299a3d48c2816202fef95f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO29</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0aaff3357d986e4489e84a0ff3bff9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO30</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2d36db877b96c9c26026c9c1c0514af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_DIO31</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef532163bb931a46bcbcd00fc9ca8b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_GPIO</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>afc65e6d65f939680cc596a207713b5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_AON_CLK32K</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a99871b823a34287bfc2027606551db4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_AUX_IO</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7fc71cdd74fbd97d4297ffed39302713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_RX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac72b13e3e19d75a4ce2240955786660d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_TX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a330141f9fd840aec1b7c4cabc111363a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_FSS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1ac8e06c048c6a1951e11054abcf1c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI0_CLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a77b7d2034982c09c8c3a75591b226e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2C_MSSDA</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa3db9a339c53a66396c6fdfde6d6062c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2C_MSSCL</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa617fb5a0aeeda3e4bf7150d5e76a397</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_RX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab2932b3af0495872bf444b90cb83d2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_TX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5b92514b6f947d9d333927e7f6973677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_CTS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a522aeda2895c5cb3b0193b2ef3c2d718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_UART0_RTS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a51f1fec524b48909fcfd7f619fb0c008</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a09712aa3a7368b7c38a9bbc7c586932a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0eaba3a4172b8e3a5386f0ae915b7019</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_2</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a55943b8f44a0507753f93e5c10372446</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_3</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aaa2fe8a21207a1e8e4c15e1724d0ffd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_4</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad54431adae65b3ae0b8e7dad96f46e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_5</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac40077324ac80180a49465d1885a2fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_6</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa678108d3aa67fdd656d55778c48d732</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_PORT_EV_7</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac786e2de45a697ba3a50fd354385b1bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_SWV</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a41d5905977a5fb86dc4aa7addeaecaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_RX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac3d873c9fc963e7abdd88ac92a2efb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_TX</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6843ba0b056b1b2a7ee3b6471da4e6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_FSS</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aef46bbee91ef9b7786e7ff242ebc9383</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_SSI1_CLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9625d595a8b69fa6e5405741818e1bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_AD0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab4fda137377a46f157d7d1ec55339dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_AD1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3d04198ab5bfdd7a50d113833bf64bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_WCLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab79ff812095158eced35716d506be08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_BCLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1ca04c323c59730e77a057e750844564</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_MCU_I2S_MCLK</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae41e6f48afb4b7b06fac72ef98dd1866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_TRC</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4b9269f9eac469a814f20ac6f96196a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a89e0489423caa21a1e6339e018d925f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>aab76af2130f96f3da07131cfd232ce71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO2</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a144116dadf2ba363c54c7d2507abe54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPO3</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>adc5890a2a1333e956349ed23bbe49d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPI0</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>acb09fb065bb0d5951baa8a6441471854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_GPI1</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a71f92d2ec8410256434ce0968476a749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_DL_OUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad92f4bc3d98cd1363bac0beb6238c7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_DL_IN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>abb958dd1da8d7fab19495a9d70cfc2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_CL_OUT</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>a23575044cc0b9a4ce8b680339672f024</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PINCC26XX_MUX_RFC_SMI_CL_IN</name>
      <anchorfile>_p_i_n_c_c26_x_x_8h.html</anchorfile>
      <anchor>af897af5e1ed1dff451e4ae505eea3f2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PKAResourceCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/cryptoutils/sharedresources/</path>
    <filename>_p_k_a_resource_c_c26_x_x_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>PKAResourceCC26XX_constructRTOSObjects</name>
      <anchorfile>_p_k_a_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2b232b973f1d4d310082bf83252e91a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PKAResourceCC26XX_destructRTOSObjects</name>
      <anchorfile>_p_k_a_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>acef43a53e869b229d2dc672178f8efc2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>PKAResourceCC26XX_accessSemaphore</name>
      <anchorfile>_p_k_a_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4df3a688979af590bb5eaa3849a9ddad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>PKAResourceCC26XX_operationSemaphore</name>
      <anchorfile>_p_k_a_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>aea41b719890e4389304b7e874665f572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>PKAResourceCC26XX_pollingFlag</name>
      <anchorfile>_p_k_a_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab3eeae15ba7d1e61803d9bd8cf74ebd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>PKAResourceCC26XX_hwi</name>
      <anchorfile>_p_k_a_resource_c_c26_x_x_8h.html</anchorfile>
      <anchor>a23da808694666f392fa36d3182d2b44f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Power.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_power_8h</filename>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <class kind="struct">Power_NotifyObj</class>
    <member kind="define">
      <type>#define</type>
      <name>Power_TOTAL</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>gaa5e33b10202cc5a261c1800b4ae1de3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_RESUME</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>ga7343f6504f2df361dca3760a97584371</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYDONE</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98c91c03b469de0cf4f53b89a867ee19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYERROR</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98066f45fce59fd38d8edcb6f2ac96fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_SOK</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga92eed670a5d7e3d43f612ca0da9d3fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EFAIL</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaed2f92a8c72bfa183e14d10a2e35789f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDINPUT</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga200ab87d1e0ffbc4eb3864d18646e0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDPOINTER</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga0d24bacb087e8282be2e4394503a429a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ECHANGE_NOT_ALLOWED</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaa4e7b580b1c9c026036bf53befe5723b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EBUSY</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga3132904395c5631392bd6301d9a2181e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ACTIVE</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga01074d8221d330077fbe040b9143e183</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga6038b3877b09c908834af7d46595b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EXITING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga1ea41cdfb6fb053eaed2792c4edf886d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SHUTDOWN</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>gad09d75dfaa5d799c4f044df9814db485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_CHANGING_PERF_LEVEL</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga2b7d4ba49a9418af10c84132a8cbf108</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Power_PolicyInitFxn</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a435fdeb71d13ea6be86f599c9b6a0d78</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Power_PolicyFxn</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a333038d1e9cd5f93dda7b83f8a1afa8b</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Power_NotifyFxn</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ad6c365f54d37429c5bd32181e5dbf463</anchor>
      <arglist>)(uint_fast16_t eventType, uintptr_t eventArg, uintptr_t clientArg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Power_disablePolicy</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>acf9706c39bd0fa07ec977dd643e5dd2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_enablePolicy</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ae8d6092a8fb35b6db52a69a35fcc327f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>Power_getConstraintMask</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a5a014bc499484e3340eed32b2aad9b56</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_getDependencyCount</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a3c4f3e678659b683126eef65aef4400b</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast16_t</type>
      <name>Power_getPerformanceLevel</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a33830ca68bc594b1f24c7285a62f0475</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>Power_getTransitionLatency</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a54c4704ee529e55633288b0bd49ad583</anchor>
      <arglist>(uint_fast16_t sleepState, uint_fast16_t type)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast16_t</type>
      <name>Power_getTransitionState</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a20509b474f5e68c9d36832199d167b9b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_idleFunc</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a873219012923300f3b3b958b951a4ea1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_init</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a3c4e1eab2809636848b2758fb201707c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_registerNotify</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>aa89d120c82d4f23e6d4a337720b6300e</anchor>
      <arglist>(Power_NotifyObj *pNotifyObj, uint_fast16_t eventTypes, Power_NotifyFxn notifyFxn, uintptr_t clientArg)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_releaseConstraint</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>acc3b76add2f8fadd70bb747d7dd0f8e8</anchor>
      <arglist>(uint_fast16_t constraintId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_releaseDependency</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a74f45b58c200fa042614e4a892f58a2d</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_setConstraint</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a45bde4b6fc658e81dc70701e8bdc947a</anchor>
      <arglist>(uint_fast16_t constraintId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_setDependency</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a25f2b780b7ea1ff1f515115fe1c2f519</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_setPerformanceLevel</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ae40483e9ed7c626a02399996d3a7878a</anchor>
      <arglist>(uint_fast16_t level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_setPolicy</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>aa4af0d238813058bf6146df6021df8cc</anchor>
      <arglist>(Power_PolicyFxn policy)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_shutdown</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a311d085ba6ecbeea0e279c52995892a5</anchor>
      <arglist>(uint_fast16_t shutdownState, uint_fast32_t shutdownTime)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_sleep</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a45e1e0f3168cc39a2309fce40c3e271d</anchor>
      <arglist>(uint_fast16_t sleepState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_unregisterNotify</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ac32c17ce6da099da97957f08ddb000b4</anchor>
      <arglist>(Power_NotifyObj *pNotifyObj)</arglist>
    </member>
    <docanchor file="_power_8h">ti_drivers_Power_Overview</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Usage</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Synopsis</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Synopsis_Code</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_enable</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_disable</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_constraint</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_dependency</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_notify</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_transistion</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>PowerCC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/</path>
    <filename>_power_c_c26_x2_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">PowerCC26X2_Config</class>
    <class kind="struct">PowerCC26X2_ModuleState</class>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_RESUMETIMESTANDBY</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a17f6996c0eb4321ac2cedca92f59877e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_TOTALTIMESTANDBY</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a00115727b56c044a92145891f1040bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_WAKEDELAYSTANDBY</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>aeadad55b9181ff5f99f429291111bb7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_INITIALWAITRCOSC_LF</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a0a8674f0f4b4104e02ca4bbc81bfd1d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_RETRYWAITRCOSC_LF</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a7d95c6afcb20b1671ecdbee6ce4bb7c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_INITIALWAITXOSC_HF</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>ae79a1a00c37373be7783c1eac63bb69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_RETRYWAITXOSC_HF</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a139c381675ee5426c1f89798f9b88a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_INITIALWAITXOSC_LF</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>afd3faaeda6bb4b38c9e1a5ad744cb333</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_RETRYWAITXOSC_LF</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a6ddccd5ce45a072ab12a689f3a19dbaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_PERIPH_PKA</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a36da698ceb146287782bc5b11a84f1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26X2_PERIPH_UART1</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>abbce49dad95fe90dcc517244709610ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PowerCC26X2_Config</type>
      <name>PowerCC26X2_Config</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a502657be2129ffc5ae1093316d4e1bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PowerCC26X2_ModuleState</type>
      <name>PowerCC26X2_ModuleState</name>
      <anchorfile>_power_c_c26_x2_8h.html</anchorfile>
      <anchor>a623db35f4ed3b763f43791c53e18243f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PowerCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/</path>
    <filename>_power_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">PowerCC26XX_Config</class>
    <class kind="struct">PowerCC26XX_ModuleState</class>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_RESUMETIMESTANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a27633fb4e1e9ef1d16b4c526f564cd22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_TOTALTIMESTANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7fa063e42fa24f7d5d7db2c0d420c4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_WAKEDELAYSTANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a03efface3d3941dd7b91d9653cc992b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_INITIALWAITRCOSC_LF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>af69c407f50204cbe8e3f71f78d1633bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_RETRYWAITRCOSC_LF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a6976f53c142aad31a7deb67d6a370e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_INITIALWAITXOSC_HF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae154f9cbcf8d09e8bc2cb417b1e48c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_RETRYWAITXOSC_HF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad31fbc0ab3dbd0aa6298d9f90a538534</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_INITIALWAITXOSC_LF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5b63c7d42624c45f7e99957ef9cebd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_RETRYWAITXOSC_LF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5ca11beb72ea210b1ba5c1172654993d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_GPT0</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa15ce915efc606bfc93aa1a1dba3c766</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_GPT1</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1af8297196f468c056ab88ff4b6adaf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_GPT2</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a07689c7adbc7112e4c7fedfcd6465abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_GPT3</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a554b5da09234a5a12deabe92e8c60112</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_SSI0</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0086b3809cd19916dc83fe3707ae721f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_SSI1</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>af0bae9873af0845e4a1151e4f1717113</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_UART0</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1fcd75795174d11d9bcf8fedae2e63fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_I2C0</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1637c7e9df94ea4619c8c72594071b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_TRNG</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>af7aecb869e5c26ebc49257026be7269c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_GPIO</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa1cabaa5a4591d59c71b88e94923b89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_UDMA</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a9f672f8e724079777b448f3e31a63307</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_CRYPTO</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab7e5798bed1f87a647ca6a963e0c3336</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_I2S</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>abe23c943cc254781d2193b054dbf8685</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_PERIPH_RFCORE</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a915d52fe49b00163be68301b8e3e23fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_XOSC_HF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0363d14e004e085a63c2bf312542d11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DOMAIN_PERIPH</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>aaa165396fa3e549f034262cbd7c527dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DOMAIN_SERIAL</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a80c11363509b3eb0ca1587b24439b764</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DOMAIN_RFCORE</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad86ecb1e5493071d9b856137ebfeba1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DOMAIN_SYSBUS</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2f6486327eb9ca7b1c746fa8def3546b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_STANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>acb2ec2d3aa2f104d5691710fd2ba89b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_RETAIN_VIMS_CACHE_IN_STANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3ef4f975166b6195651bc4a1295196d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DISALLOW_SHUTDOWN</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a169ec80ef6871b27768a145f477447a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DISALLOW_STANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a45e6ce6cd0332d1aee0357739aaf20b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DISALLOW_IDLE</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab80d8e6de86d3acfa903ceab156da031</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_NEED_FLASH_IN_IDLE</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1f1dee2876bca97a20c152ca9b6c2fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_SWITCH_XOSC_HF_MANUALLY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a14166f9527e26cbb95021795afc95588</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_DISALLOW_XOSC_HF_SWITCHING</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae508511dd31f28553b4dffdc00aebd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_ENTERING_STANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a88d658da388e2fc58328283b3349003e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_ENTERING_SHUTDOWN</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a09692bd5d3fb7c16fcf320b0490f29fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_AWAKE_STANDBY</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a7f9f2c7a5f0c307aeab0b9854d2384b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_AWAKE_STANDBY_LATE</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ae9a4db5e58593a5bc2f6cbba3c8ed283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_XOSC_HF_SWITCHED</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a592028a2a5ba6e323205a6400ef11b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC26XX_JTAG_PD_TURNED_ON</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>acaed4f189f650d485596cd173016ca1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_getPerformanceLevel</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a33c66d2d8a05f50274105eef817c41b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_setPerformanceLevel</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5c634ae909d29db6dd48c6bd104b62e5</anchor>
      <arglist>(level)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PowerCC26XX_Config</type>
      <name>PowerCC26XX_Config</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>adb528c35432da8c5cae957cdbf874740</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PowerCC26XX_ModuleState</type>
      <name>PowerCC26XX_ModuleState</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a2903fa8d575b7c6d33d95bd652625561</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PowerCC26XX_calibrate</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a27a4c7312d5cf59eb699ad5f87104408</anchor>
      <arglist>(unsigned int arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC26XX_doWFI</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad4ff77b3854dd494aac42e42f70bdee7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ClockP_Handle</type>
      <name>PowerCC26XX_getClockHandle</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ad90c836c979f3569fa0981154dbd245c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PowerCC26XX_getXoscStartupTime</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ace6e106b5cef8823de93a6d4b66ca964</anchor>
      <arglist>(uint32_t timeUntilWakeupInMs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PowerCC26XX_injectCalibration</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>aac76ed82c4d33897111e7e3e863e2c9c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PowerCC26XX_noCalibrate</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a39c82b7c57a1b5c013f5e285e98232e9</anchor>
      <arglist>(unsigned int arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PowerCC26XX_isStableXOSC_HF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac415ca8b39f16660c12bc636ed429b6b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC26XX_switchXOSC_HF</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a46422725a0c7c694a589472fb625f92e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC26XX_standbyPolicy</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>aea49c1a01cb045b1ce6be1ecb3587498</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC26XX_schedulerDisable</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a534e5a58297592a785933b137a8198f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC26XX_schedulerRestore</name>
      <anchorfile>_power_c_c26_x_x_8h.html</anchorfile>
      <anchor>a416f870ed88a1aeb7b771410fb2dd1f0</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PWM.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_p_w_m_8h</filename>
    <class kind="struct">PWM_Params</class>
    <class kind="struct">PWM_FxnTable_</class>
    <class kind="struct">PWM_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>PWM_DUTY_FRACTION_MAX</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a8b2763bf16c6446a35d536ea532f6a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_CMD_RESERVED</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ad731f4db58c72d280900da4be6e3434c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_RESERVED</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a88616e9288d6e3a4dbab321af26cc04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_SUCCESS</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a9b234f3cd0bdffc3da5b56a6c4db9563</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_ERROR</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a739297dfb10ab4363e7b5db30fdd1ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_UNDEFINEDCMD</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>afed58384f49ce364218eeaabb0858bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_INVALID_PERIOD</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5541b99566b02450b1d44b3bf0c344bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_INVALID_DUTY</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ac3b90551ab071520eccaabe4cabe1f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PWM_Config_ *</type>
      <name>PWM_Handle</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abd13611c9e61099dd02f1c87d9e9793d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_CloseFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a1643d365dfa900197b324ea74035d2ec</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_ControlFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a0ac1147ec944a3873ec1dad81d8c949f</anchor>
      <arglist>)(PWM_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_InitFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a38666ae4b117b81d35758258012b251a</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>PWM_Handle(*</type>
      <name>PWM_OpenFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a16b7b446398f8b90e4fa287c6e4a0981</anchor>
      <arglist>)(PWM_Handle handle, PWM_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_SetDutyFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a7e90114309f62bc7ddf878c2e1b46cd2</anchor>
      <arglist>)(PWM_Handle handle, uint32_t duty)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_SetPeriodFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a2761c0836cae3a3d56cf8e819d54a214</anchor>
      <arglist>)(PWM_Handle handle, uint32_t period)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_SetDutyAndPeriodFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a1e01d56b827255daf0b927e3d6d35ea8</anchor>
      <arglist>)(PWM_Handle handle, uint32_t duty, uint32_t period)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_StartFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>af0a392fb66c104f9d60e80e023dd3b89</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_StopFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>aff8ad682f40a810ecf03824e8e190087</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PWM_FxnTable_</type>
      <name>PWM_FxnTable</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a1c3809a9bd3c63a04edc1bafa78cc2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PWM_Config_</type>
      <name>PWM_Config</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>af4fdcd36077e2aba99d6996ae1ea64ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PWM_Period_Units</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_PERIOD_US</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63a35d73e8e481d16fd8c3880d9519894cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_PERIOD_HZ</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63a083c3462c199f39afc7a9d0541595b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_PERIOD_COUNTS</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63a52a5ee3b990d5edb816d19253bd9a571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PWM_Duty_Units</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_DUTY_US</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8eeaf93cd02d0c2744e2d6a68a8e7070b7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_DUTY_FRACTION</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8eea004d0d56bfc7f629990e7b6b55c3dd4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_DUTY_COUNTS</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8eea4a20018a9620ed669dff0893858a44b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PWM_IdleLevel</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5a40c7014745d15b0c1a604dae5593f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_IDLE_LOW</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5a40c7014745d15b0c1a604dae5593f9a698cc876a94b3e0629d65fecfec8c8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_IDLE_HIGH</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5a40c7014745d15b0c1a604dae5593f9a0b126918629a951139ef9f17d417c50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_close</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a0e0f5899b067d27653db566fb148db11</anchor>
      <arglist>(PWM_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_control</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a7f5a5dd263b9d95f4fd71fbb69455369</anchor>
      <arglist>(PWM_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_init</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>aadae3fe77e36cbf9643a22eeb99fb01e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>PWM_Handle</type>
      <name>PWM_open</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ae97f12cfc5530577069f76813504da3a</anchor>
      <arglist>(uint_least8_t index, PWM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_Params_init</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>acbdd3192f9f06bf689e4a3855926dcac</anchor>
      <arglist>(PWM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_setDuty</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>af72b43e2bcd68c0e78ae5dbe28db05c8</anchor>
      <arglist>(PWM_Handle handle, uint32_t duty)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_setPeriod</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>afc1925126582a5a0721f992b92739e06</anchor>
      <arglist>(PWM_Handle handle, uint32_t period)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_setDutyAndPeriod</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a3cc7201c72502a6d294ad1320e5a3c25</anchor>
      <arglist>(PWM_Handle handle, uint32_t duty, uint32_t period)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_start</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>aa1bd0cc3f0fa52879422fca74d254378</anchor>
      <arglist>(PWM_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_stop</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ae83a4cd327a07d6037ff1a8d72fb3ae6</anchor>
      <arglist>(PWM_Handle handle)</arglist>
    </member>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Overview</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Usage</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Synopsis</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Synopsis_Code</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples_open</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples_duty</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples_dutyperiod</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>PWMTimerCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/pwm/</path>
    <filename>_p_w_m_timer_c_c26_x_x_8h</filename>
    <includes id="_p_i_n_8h" name="PIN.h" local="no" imported="no">ti/drivers/PIN.h</includes>
    <includes id="_p_w_m_8h" name="PWM.h" local="no" imported="no">ti/drivers/PWM.h</includes>
    <includes id="_g_p_timer_c_c26_x_x_8h" name="GPTimerCC26XX.h" local="no" imported="no">ti/drivers/timer/GPTimerCC26XX.h</includes>
    <class kind="struct">PWMTimerCC26XX_HwAttrs</class>
    <class kind="struct">PWMTimerCC26XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC26XX_CMD_DEBUG_STALL</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>af011898e1f39f5c46e5bee16da53f893</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ARG_DEBUG_STALL_OFF</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a89d7c2f8674a7adb6d904b9cfb94c509</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ARG_DEBUG_STALL_ON</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a922b8318640c67c3c20a4e991e9b486d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PWMTimerCC26XX_HwAttrs</type>
      <name>PWMTimerCC26XX_HwAttrs</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5d7ba49f8ef49f03deac6494bd0fc18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PWMTimerCC26XX_Object</type>
      <name>PWMTimerCC26XX_Object</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a655ae995c6140ecdc5e97abf2f89c8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const PWM_FxnTable</type>
      <name>PWMTimerCC26XX_fxnTable</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>af4a829750f9974fb6944f7d17fc7512d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC26XX_CMD_DEBUG_STALL</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>af011898e1f39f5c46e5bee16da53f893</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ARG_DEBUG_STALL_OFF</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a89d7c2f8674a7adb6d904b9cfb94c509</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ARG_DEBUG_STALL_ON</name>
      <anchorfile>_p_w_m_timer_c_c26_x_x_8h.html</anchorfile>
      <anchor>a922b8318640c67c3c20a4e991e9b486d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Random.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/utils/</path>
    <filename>_random_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>Random_STATUS_SUCCESS</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a569eb30584df2e26b473d5507119527c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Random_STATUS_ERROR</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>ae958209336d4db0995ff4397a2280151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Random_SEED_LENGTH</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a5abc4bdb7377950c94b9a748ee73e81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Random_seedAutomatic</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a268d2849532fa3d19a21477fad2465a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Random_seedManual</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a2daafc64202e2356609c0443847b4464</anchor>
      <arglist>(uint8_t seed[(20)])</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Random_getNumber</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>ae7ec74feb59a3a7b8990aec4694941c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Random_getBytes</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a761e6552681ea33b81aab8a807b4bc2d</anchor>
      <arglist>(void *buffer, size_t bufferSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RF.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/rf/</path>
    <filename>_r_f_8h</filename>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <class kind="struct">RF_TxPowerTable_Value</class>
    <class kind="struct">RF_TxPowerTable_Entry</class>
    <class kind="struct">RF_Mode</class>
    <class kind="union">RF_RadioSetup</class>
    <class kind="union">RF_InfoVal</class>
    <class kind="struct">RF_ScheduleMapElement</class>
    <class kind="struct">RF_ScheduleMap</class>
    <class kind="struct">RF_Params</class>
    <class kind="struct">RF_Cmd_s</class>
    <class kind="struct">RFCC26XX_HWAttrsV2</class>
    <class kind="struct">RFCC26XX_SchedulerPolicy</class>
    <class kind="struct">RF_ScheduleCmdParams</class>
    <class kind="struct">RF_AccessParams</class>
    <class kind="struct">RF_RatConfigCapture</class>
    <class kind="struct">RF_RatConfigCompare</class>
    <class kind="struct">RF_RatConfigOutput</class>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa1534b443f03187f07f55b0198306a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventLastCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2d60db886271cf8e08c7b6b2f5e534f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventFGCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a735a67f18008c9748b1abc23f8d8aa31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventLastFGCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa5bab6ef487e169803c147e47211a7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4e8f8b70a9cd745561251d61940880f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTXAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab1ab01acc148654e8b3dfe42d64785b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxCtrl</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8421bd3a69743f088ac534f85b099a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxCtrlAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af15e72a260f7c2d3d659ad76cb876f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxCtrlAckAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00c6a2c502c6b73310d7168d65134728</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxRetrans</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2c71299952c2e6f95973f15cd1910012</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxEntryDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2fe4925d81a1b1cf0f081801ccdea5c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxBufferChange</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a595798fcb9995769a5887839567c8ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventPaChanged</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ade43fca5380ed8f6354464cb9495547a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxOk</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8096e854b7ba95ee45054acf8c5d36e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxNOk</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0c295aa9a2851efa0ec6309ebab52dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxIgnored</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2dbeb507eec591b320a4b06f36ce8814</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxEmpty</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4df2d5bf213600e1bce1c03a1ea950dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxCtrl</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afee6f48a825ba7e030ece03eb242e6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxCtrlAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a3c29608b6caa9e380407ee0b3df371b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxBufFull</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8ddaa54ac8e8721e7e1cee7f0c07c3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxEntryDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a7051110a4a1fdd459866195be774a2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventDataWritten</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8ac187c129b68b4311898a5464aa87e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventNDataWritten</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa9c1eb19ce791f4f9c4b917e10fbabdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxAborted</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af2db331d93e28cdafc4367497a2f6f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxCollisionDetected</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aaba4e22e27b9ac26244b02c7cfd657d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventModulesUnlocked</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae5cb277f5a7a23bf1d7e6405f3e2253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventInternalError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af872a5a1a47d7401499d7826eea8da98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventMdmSoft</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a83edee28803f1b2addc0f8458d0cc657</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdCancelled</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae6d21f9806a7482a0f324f98bb83aac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdAborted</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a95a0bf832c19fbdce2c164144ad265ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdStopped</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac68cfb0f9c26d275ad990f5da9e6b91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRatCh</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab0302093e17c587cc4bf2c928c79960e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventPowerUp</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0e6d5e7d3760a65ba37d8f26823e9a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa6b858b8b383210049fa3f17dcd95fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdPreempted</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a267ffc8a08c3ce6ffa82b704dba641be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_INACTIVITY_TIMEOUT</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a24096530a8da4bde84275bc9c76b2cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_UPDATE_SETUP_CMD</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a74d367afdca187785b17c59b31d1e89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_POWERUP_DURATION_MARGIN</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a32bd63d8617c2fde41bbc30d1e8f0db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_PHYSWITCHING_DURATION_MARGIN</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab2bfab3ebda5473baf32c6d870c33f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_RAT_RTC_ERR_TOL_VAL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>adaa68f9c55d604a2228c897fd08b075c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_POWER_MGMT</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5b7345d53c66e3168216234046359823</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_HWI_PRIORITY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a428377f902e968efba9f506376c09740</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_SWI_PRIORITY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a325d55f02f7e3acddce7e44bab71e2de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_AVAILABLE_RAT_CHANNELS_MASK</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae58d79d3513ee745bcbeffae50731107</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_MIN_DBM</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa3c3699366e0ac3271098ca9ec140002</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_MAX_DBM</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a689c0791e8141ea53d814dde2e7e0217</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_INVALID_DBM</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aeacd75e63906befa8ca215a9779da3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_INVALID_VALUE</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a6a7214e79d17615ac34efbad207ca33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_TERMINATION_ENTRY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a7c926278bbbb8d6559765dce2557489b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_DEFAULT_PA_ENTRY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a3065b167970585be2df0e92fc8a74c5d</anchor>
      <arglist>(bias, gain, boost, coefficient)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_HIGH_PA_ENTRY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a7369eba160dd93c59f8d8a287780125a</anchor>
      <arglist>(bias, ibboost, boost, coefficient, ldotrim)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_GET_RSSI_ERROR_VAL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a40e933adc8b5b1c03133451361c5505b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CMDHANDLE_FLUSH_ALL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aacfd2e3e3a2596605cc8b182df438b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ALLOC_ERROR</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ad2e517d9efabde3a1868a274ed0f683b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCHEDULE_CMD_ERROR</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a6986912a3081f0df9873a9b953e363ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ERROR_RAT_PROG</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a96593487f5b6bc397d3986a195ecd52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ERROR_INVALID_RFMODE</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a86f899115073dc30d7b528cb0e12a9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ERROR_CMDFS_SYNTH_PROG</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a40a0b1b81a2bebefb91b952d750634dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_NUM_SCHEDULE_ACCESS_ENTRIES</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a37a38c0dc13a2ce547335e861f70d051</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_NUM_SCHEDULE_COMMAND_ENTRIES</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af6c29118d59b89ae5fe77128943034ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_NUM_SCHEDULE_MAP_ENTRIES</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00c51d569ca050a4ca082b524bbfb924</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCH_MAP_CURRENT_CMD_OFFSET</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5afbf118199c4d690ca365f8f10ce303</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCH_MAP_PENDING_CMD_OFFSET</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae47095b012cc1b8135736b1df8f3bb8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ABORT_PREEMPTION</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4585d547dce0622e2407fea2d2a4bb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ABORT_GRACEFULLY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8357151872adc734a1e9ef74999b8710</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCH_CMD_EXECUTION_TIME_UNKNOWN</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0bc9d4802427e91001d40cec7e20164f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_RAT_ANY_CHANNEL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a59a68b973702e21f5a0f30f357f1e247</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_RAT_TICKS_PER_US</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a3cf51703068e6f00d46f78ef14a6b7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_LODIVIDER_MASK</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0f972d9375859893722d23514c399fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertUsToRatTicks</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af0fbfd98528830da6556b8a8c6d60bd8</anchor>
      <arglist>(microseconds)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertMsToRatTicks</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aabead042beafa5e5347f1e7b003202f2</anchor>
      <arglist>(milliseconds)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertRatTicksToUs</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af3e94acb7fe950698e19e5c07775cee0</anchor>
      <arglist>(ticks)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertRatTicksToMs</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8c812053bf4dfc87370d92157ea3878d</anchor>
      <arglist>(ticks)</arglist>
    </member>
    <member kind="typedef">
      <type>rfc_radioOp_t</type>
      <name>RF_Op</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a47ea3dea78019340e8f8ceb854de5f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>RF_EventMask</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a128c46e18dbbaa781abb7abafc35233a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>RF_ClientEventMask</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a25948ff7cdce9e54404c1301e82a3568</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>RF_GlobalEventMask</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4894c55ea8160f852fc224f9073cf38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>RF_CmdHandle</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>acab1f56c62a9fd1ad0a91a46b6da23f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RF_Object *</type>
      <name>RF_Handle</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5e8ab7fc87fb818f435d9b6226ee573f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>RF_RatHandle</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a58de86ad0b6cfcb04548a776976c0a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>RF_Callback</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4d2ce6dc70b0f329dc5e249ec10c574a</anchor>
      <arglist>)(RF_Handle h, RF_CmdHandle ch, RF_EventMask e)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>RF_RatCallback</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afbf75555f36dd8e45a3a932de62b2c68</anchor>
      <arglist>)(RF_Handle h, RF_RatHandle rh, RF_EventMask e, uint32_t compareCaptureTime)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>RF_ClientCallback</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab6bf8da299cd0c975c61fe2e450c0734</anchor>
      <arglist>)(RF_Handle h, RF_ClientEvent event, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>RF_GlobalCallback</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a72192434157b0de3de648456bc221f07</anchor>
      <arglist>)(RF_Handle h, RF_GlobalEvent event, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>struct RF_Cmd_s</type>
      <name>RF_Cmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2dd38e247b33e21ae1729c7ae47a49cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RF_ScheduleStatus(*</type>
      <name>RF_SubmitHook</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac7f9fbee2317f8a4c55209d9926d36de</anchor>
      <arglist>)(RF_Cmd *pCmdNew, RF_Cmd *pCmdBg, RF_Cmd *pCmdFg, List_List *pPendQueue, List_List *pDoneQueue)</arglist>
    </member>
    <member kind="typedef">
      <type>RF_Conflict(*</type>
      <name>RF_ConflictHook</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>addf1e3492cfd5cbc9ad3a2d9b47f33e2</anchor>
      <arglist>)(RF_Cmd *pCmdBg, RF_Cmd *pCmdFg, List_List *pPendQueue, List_List *pDoneQueue)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_TxPowerTable_PAType</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac51c0cef00a3f230e4e73ccd00a503b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_TxPowerTable_DefaultPA</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac51c0cef00a3f230e4e73ccd00a503b8aecb8f811a5580e7156d0059686e0ea7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_TxPowerTable_HighPA</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac51c0cef00a3f230e4e73ccd00a503b8af828b6a1f4d544e598912b10f8ce9954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_Priority</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae5f9a893d178e64e6d0a7a783ea06e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_PriorityHighest</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae5f9a893d178e64e6d0a7a783ea06e32a5d716915abbe5a6fad3469c339f4db15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_PriorityHigh</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae5f9a893d178e64e6d0a7a783ea06e32a8d14673dbb643f2e9571fb5e34aad23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_PriorityNormal</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae5f9a893d178e64e6d0a7a783ea06e32a301d2e5af295d52039b52709952a1c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_Stat</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatBusyError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988faa79a13241903199d3bc25c8f06407de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatRadioInactiveError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988fa80848b887667038bbfa4a2d14e83b193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatCmdDoneError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988fa612e247f325ff085321b8e243f6b1d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatInvalidParamsError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988face124dc75bad005452467d6f29351301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatCmdEnded</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988fadaf0ab5384fae480d81dcd10a13ef1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988fac071b8de44aabb8e2354432ce1146b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatCmdDoneSuccess</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988faa110d04edae5a85a12906d729f97de87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatCmdSch</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988fabf33d4930fd89cd5ca80220da258d31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_StatSuccess</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afdc219ddabc8427ecd552a6c78d9988faa98bd78e437864464cdb2aca1d3e024d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_ClientEvent</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>acfa72a48f45abb7ea8e1595ce6606b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ClientEventPowerUpFinished</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>acfa72a48f45abb7ea8e1595ce6606b7aa931a28d9524188efd2f45aa1e09dca0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ClientEventRadioFree</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>acfa72a48f45abb7ea8e1595ce6606b7aa5c502a8582be79f38917d0d464da2e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ClientEventSwitchClientEntered</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>acfa72a48f45abb7ea8e1595ce6606b7aabb9b5b80366b32eb566b45b1526d7c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_GlobalEvent</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ad40e352daa020429c2aa1cd49283c5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GlobalEventRadioSetup</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ad40e352daa020429c2aa1cd49283c5e8a389b9776e29c420ef575c1b06eea7e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GlobalEventRadioPowerDown</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ad40e352daa020429c2aa1cd49283c5e8a54ffbc9af1f9b3be0ca2cb9062090a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_InfoType</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GET_CURR_CMD</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8faa4a4b88384acfaa135421ad57557140e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GET_AVAIL_RAT_CH</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8faa19ebdcf12bef1328ce40fec49c0f6864</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GET_RADIO_STATE</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8faa51ac83691ed47bb591818e2e34e49d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GET_SCHEDULE_MAP</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8faac08f2876adac275a8cf5f36cb47e3b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GET_CLIENT_LIST</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8faa9c8ebff9d2070ac7b6cd6c6f498c65a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_GET_CLIENT_SWITCHING_TIME</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22596109459422a7a4d4f386dffbb8faa0394a33587673701b205811e2a0790e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_Conflict</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22185fb192afb855315deb14a9345f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ConflictNone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22185fb192afb855315deb14a9345f0bae28fdbc493847998cabadd2ef2499a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ConflictReject</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22185fb192afb855315deb14a9345f0baf0ad5b1c457449954570e1d2bdc001bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ConflictAbort</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a22185fb192afb855315deb14a9345f0baed03c32aa959578ba8115699f9d94ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_ScheduleStatus</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ScheduleStatusError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819ab563cc1e324837c49539d679d986b450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ScheduleStatusNone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819ab300074af34019b491e9482773de26dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ScheduleStatusTop</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819a082438df0e7b3129684df7f1f0bb32b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ScheduleStatusMiddle</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819a042bca2af65579281592bb35e06f2cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ScheduleStatusTail</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819acaaec3c2e10d0252974b971b4d202102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_ScheduleStatusPreempt</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a21cb4a2f5e92843022ea31a8399a4819a4a0285c9968d55d3973c845cf0512f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_AllowDelay</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00f0a82597a56910cacf3f943b4a91a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_AllowDelayNone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00f0a82597a56910cacf3f943b4a91a4a88ec56d363dd432a0854935aea89e58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_AllowDelayAny</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00f0a82597a56910cacf3f943b4a91a4ab260570ce0ae8fc9152d012162d9258e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_RatSelectChannel</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a90ce11f016f50739ded9a5afd417d404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatChannelAny</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a90ce11f016f50739ded9a5afd417d404aa6be170e55da07a1960996aa99d47f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatChannel0</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a90ce11f016f50739ded9a5afd417d404ae7b02ff7b22f3651c3860af31fcda357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatChannel1</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a90ce11f016f50739ded9a5afd417d404a17f39920b827e139c9f457bc3a90f285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatChannel2</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a90ce11f016f50739ded9a5afd417d404aa1675308a8fe8c68223a4b458c3521f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_RatCaptureSource</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2df66c68b4216d2835915c9a240152b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureSourceRtcUpdate</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2df66c68b4216d2835915c9a240152b9aaf3502be2ed158963579a088e9839a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureSourceEventGeneric</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2df66c68b4216d2835915c9a240152b9a5048e0046b442ada45022171d6a4c2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureSourceRfcGpi0</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2df66c68b4216d2835915c9a240152b9a8d257508fc1a912b9eac8ed8f296fb2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureSourceRfcGpi1</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2df66c68b4216d2835915c9a240152b9a273b1645a7e7e9e6534c8edccde986d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_RatCaptureMode</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a696a994a1c4cc105cdf7d775b5b8f49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureModeRising</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a696a994a1c4cc105cdf7d775b5b8f49ea418153f81b4fd93cc70c3838c3633e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureModeFalling</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a696a994a1c4cc105cdf7d775b5b8f49ea045f8eaea856976ad615b6dee90f7eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureModeBoth</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a696a994a1c4cc105cdf7d775b5b8f49eae9e5af867013f557ba3b0765afb3e1fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_RatCaptureRepetition</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab26f46757c3fe1533a0ad1e299a6972d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureSingle</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab26f46757c3fe1533a0ad1e299a6972da9085567badb3963d673716578d584f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatCaptureRepeat</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab26f46757c3fe1533a0ad1e299a6972da872d8bb2a69982689b67ca30c85bfd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_RatOutputMode</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputModePulse</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9aebd67f05684e2832b745b099e7c88486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputModeSet</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9afac232ab3d38f7087b877777c86b1262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputModeClear</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9a764e233e4caacfb4eed3f5b8e6777f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputModeToggle</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9aceed850a718e8b4a89f0ced3495143b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputModeAlwaysZero</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9afe9d62943ead37d9f42aa8b9ba8ce272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputModeAlwaysOne</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9e9327d42a6943ea9324a1c8b547b5d9a359e117a34de1f2d5e18020a51953d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RF_RatOutputSelect</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo1</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998a7db4a52061e981c8d2cb16c191929980</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo2</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998ab7e16a49d10636da78c0f7caf2e9f3cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo3</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998a4c9e7b401e0de9bb9097c6d8e6e308f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo4</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998aaaa1f147cf872631855f7c9de0adfbdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo5</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998aab31fed8d5373d5be3b38b00b7e228bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo6</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998a17d6ba08cefb8d01b3591ab88027dea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RF_RatOutputSelectRatGpo7</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aae197f40cee9a7f1582c7562e0288998a44e78ff0b3bb6353e46d27869db75ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RF_Handle</type>
      <name>RF_open</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a1175bb5ce9b32dfc102482e8cfbb2f5b</anchor>
      <arglist>(RF_Object *pObj, RF_Mode *pRfMode, RF_RadioSetup *pRadioSetup, RF_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_close</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9ff7e64561f7aa5526837521bceb5f88</anchor>
      <arglist>(RF_Handle h)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>RF_getCurrentTime</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aedfdf0bdf0f64a071d50a6d78446fef4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>RF_CmdHandle</type>
      <name>RF_postCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2b0ee444fcb74917df94eefea804ecbb</anchor>
      <arglist>(RF_Handle h, RF_Op *pOp, RF_Priority ePri, RF_Callback pCb, RF_EventMask bmEvent)</arglist>
    </member>
    <member kind="function">
      <type>RF_ScheduleStatus</type>
      <name>RF_defaultSubmitPolicy</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a71062aa5d5d04eeb18b40e848ba5b42d</anchor>
      <arglist>(RF_Cmd *pCmdNew, RF_Cmd *pCmdBg, RF_Cmd *pCmdFg, List_List *pPendQueue, List_List *pDoneQueue)</arglist>
    </member>
    <member kind="function">
      <type>RF_Conflict</type>
      <name>RF_defaultConflictPolicy</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a351bba67d7fdb27f6e04bd28f71d9535</anchor>
      <arglist>(RF_Cmd *pCmdBg, RF_Cmd *pCmdFg, List_List *pPendQueue, List_List *pDoneQueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_ScheduleCmdParams_init</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9ffe098f1c3a174e225ac88f6e1574ed</anchor>
      <arglist>(RF_ScheduleCmdParams *pSchParams)</arglist>
    </member>
    <member kind="function">
      <type>RF_CmdHandle</type>
      <name>RF_scheduleCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5e7f25943b5f3942bf4c09cb87f9aa76</anchor>
      <arglist>(RF_Handle h, RF_Op *pOp, RF_ScheduleCmdParams *pSchParams, RF_Callback pCb, RF_EventMask bmEvent)</arglist>
    </member>
    <member kind="function">
      <type>RF_EventMask</type>
      <name>RF_pendCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a91c1cb2508311f822acbc08ace568a83</anchor>
      <arglist>(RF_Handle h, RF_CmdHandle ch, RF_EventMask bmEvent)</arglist>
    </member>
    <member kind="function">
      <type>RF_EventMask</type>
      <name>RF_runCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a248bebdd1d0bd6e0812cf18116987e54</anchor>
      <arglist>(RF_Handle h, RF_Op *pOp, RF_Priority ePri, RF_Callback pCb, RF_EventMask bmEvent)</arglist>
    </member>
    <member kind="function">
      <type>RF_EventMask</type>
      <name>RF_runScheduleCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5042591ca75f04c60fa0f7e7a9e1aac8</anchor>
      <arglist>(RF_Handle h, RF_Op *pOp, RF_ScheduleCmdParams *pSchParams, RF_Callback pCb, RF_EventMask bmEvent)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_cancelCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aabe22ceae13a372be4ba135318aa849a</anchor>
      <arglist>(RF_Handle h, RF_CmdHandle ch, uint8_t mode)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_flushCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae3ff5c614f4a63cb4e79c90f9229149a</anchor>
      <arglist>(RF_Handle h, RF_CmdHandle ch, uint8_t mode)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_runImmediateCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a6159b409f8d99954529a8ebf6f98cd85</anchor>
      <arglist>(RF_Handle h, uint32_t *pCmdStruct)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_runDirectCmd</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aafce617271300f2bee1a52ebda6d654e</anchor>
      <arglist>(RF_Handle h, uint32_t cmd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_yield</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a299ada7963c727a40466d7d1bb7296a3</anchor>
      <arglist>(RF_Handle h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_Params_init</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab956de3745437cb7a69c4edfb006434e</anchor>
      <arglist>(RF_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_getInfo</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4bd7985a3e0c5ad2b9f5e94aa945db63</anchor>
      <arglist>(RF_Handle h, RF_InfoType type, RF_InfoVal *pValue)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>RF_getRssi</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac3fe0d39243fb6bbefe0216d958a6779</anchor>
      <arglist>(RF_Handle h)</arglist>
    </member>
    <member kind="function">
      <type>RF_Op *</type>
      <name>RF_getCmdOp</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>abdde833057385980d0ae1b2c844b97b7</anchor>
      <arglist>(RF_Handle h, RF_CmdHandle cmdHnd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_RatConfigCompare_init</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a33af74f29f9d987cd64871ccd041d8a7</anchor>
      <arglist>(RF_RatConfigCompare *channelConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_RatConfigCapture_init</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a9770b153e83093f834988b9da6b49aa1</anchor>
      <arglist>(RF_RatConfigCapture *channelConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RF_RatConfigOutput_init</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>adc076482a56613d62f1ec2a18b137b12</anchor>
      <arglist>(RF_RatConfigOutput *ioConfig)</arglist>
    </member>
    <member kind="function">
      <type>RF_RatHandle</type>
      <name>RF_ratCompare</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af26945dca21f0742e7e978af6e176fea</anchor>
      <arglist>(RF_Handle rfHandle, RF_RatConfigCompare *channelConfig, RF_RatConfigOutput *ioConfig)</arglist>
    </member>
    <member kind="function">
      <type>RF_RatHandle</type>
      <name>RF_ratCapture</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a513fd2cb2616e901d9f7a638ae9b7772</anchor>
      <arglist>(RF_Handle rfHandle, RF_RatConfigCapture *channelConfig, RF_RatConfigOutput *ioConfig)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_ratDisableChannel</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8376a652a71c112b1028a1f02860ad60</anchor>
      <arglist>(RF_Handle rfHandle, RF_RatHandle ratHandle)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_control</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa31772d56afb197fd812d24aa6f07f1b</anchor>
      <arglist>(RF_Handle h, int8_t ctrl, void *args)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_requestAccess</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a40a5506c05a11a3cd9d379cedad5b5d0</anchor>
      <arglist>(RF_Handle h, RF_AccessParams *pParams)</arglist>
    </member>
    <member kind="function">
      <type>RF_TxPowerTable_Value</type>
      <name>RF_getTxPower</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aed02cc74cc7da5d2be9c0fb68ab5efc3</anchor>
      <arglist>(RF_Handle h)</arglist>
    </member>
    <member kind="function">
      <type>RF_Stat</type>
      <name>RF_setTxPower</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a45ae701a298b6f4cddbc845333e61ad5</anchor>
      <arglist>(RF_Handle h, RF_TxPowerTable_Value value)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>RF_TxPowerTable_findPowerLevel</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a93d89aa05a52d9427b5dd2a84cc2d3a3</anchor>
      <arglist>(RF_TxPowerTable_Entry table[], RF_TxPowerTable_Value value)</arglist>
    </member>
    <member kind="function">
      <type>RF_TxPowerTable_Value</type>
      <name>RF_TxPowerTable_findValue</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8b8022d01ade500a5cd6bd46b9bc8d26</anchor>
      <arglist>(RF_TxPowerTable_Entry table[], int8_t powerLevel)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa1534b443f03187f07f55b0198306a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventLastCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2d60db886271cf8e08c7b6b2f5e534f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventFGCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a735a67f18008c9748b1abc23f8d8aa31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventLastFGCmdDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa5bab6ef487e169803c147e47211a7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4e8f8b70a9cd745561251d61940880f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTXAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab1ab01acc148654e8b3dfe42d64785b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxCtrl</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8421bd3a69743f088ac534f85b099a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxCtrlAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af15e72a260f7c2d3d659ad76cb876f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxCtrlAckAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00c6a2c502c6b73310d7168d65134728</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxRetrans</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2c71299952c2e6f95973f15cd1910012</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxEntryDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2fe4925d81a1b1cf0f081801ccdea5c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventTxBufferChange</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a595798fcb9995769a5887839567c8ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventPaChanged</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ade43fca5380ed8f6354464cb9495547a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxOk</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8096e854b7ba95ee45054acf8c5d36e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxNOk</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0c295aa9a2851efa0ec6309ebab52dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxIgnored</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a2dbeb507eec591b320a4b06f36ce8814</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxEmpty</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4df2d5bf213600e1bce1c03a1ea950dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxCtrl</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>afee6f48a825ba7e030ece03eb242e6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxCtrlAck</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a3c29608b6caa9e380407ee0b3df371b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxBufFull</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8ddaa54ac8e8721e7e1cee7f0c07c3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxEntryDone</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a7051110a4a1fdd459866195be774a2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventDataWritten</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8ac187c129b68b4311898a5464aa87e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventNDataWritten</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa9c1eb19ce791f4f9c4b917e10fbabdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxAborted</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af2db331d93e28cdafc4367497a2f6f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRxCollisionDetected</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aaba4e22e27b9ac26244b02c7cfd657d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventModulesUnlocked</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae5cb277f5a7a23bf1d7e6405f3e2253e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventInternalError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af872a5a1a47d7401499d7826eea8da98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventMdmSoft</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a83edee28803f1b2addc0f8458d0cc657</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdCancelled</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae6d21f9806a7482a0f324f98bb83aac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdAborted</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a95a0bf832c19fbdce2c164144ad265ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdStopped</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ac68cfb0f9c26d275ad990f5da9e6b91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventRatCh</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab0302093e17c587cc4bf2c928c79960e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventPowerUp</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0e6d5e7d3760a65ba37d8f26823e9a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventError</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa6b858b8b383210049fa3f17dcd95fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_EventCmdPreempted</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a267ffc8a08c3ce6ffa82b704dba641be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_INACTIVITY_TIMEOUT</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a24096530a8da4bde84275bc9c76b2cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_UPDATE_SETUP_CMD</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a74d367afdca187785b17c59b31d1e89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_POWERUP_DURATION_MARGIN</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a32bd63d8617c2fde41bbc30d1e8f0db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_PHYSWITCHING_DURATION_MARGIN</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ab2bfab3ebda5473baf32c6d870c33f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_RAT_RTC_ERR_TOL_VAL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>adaa68f9c55d604a2228c897fd08b075c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_POWER_MGMT</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5b7345d53c66e3168216234046359823</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_HWI_PRIORITY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a428377f902e968efba9f506376c09740</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_SWI_PRIORITY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a325d55f02f7e3acddce7e44bab71e2de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CTRL_SET_AVAILABLE_RAT_CHANNELS_MASK</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae58d79d3513ee745bcbeffae50731107</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_MIN_DBM</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aa3c3699366e0ac3271098ca9ec140002</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_MAX_DBM</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a689c0791e8141ea53d814dde2e7e0217</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_INVALID_DBM</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aeacd75e63906befa8ca215a9779da3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_INVALID_VALUE</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a6a7214e79d17615ac34efbad207ca33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_TERMINATION_ENTRY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a7c926278bbbb8d6559765dce2557489b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_DEFAULT_PA_ENTRY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a3065b167970585be2df0e92fc8a74c5d</anchor>
      <arglist>(bias, gain, boost, coefficient)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_TxPowerTable_HIGH_PA_ENTRY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a7369eba160dd93c59f8d8a287780125a</anchor>
      <arglist>(bias, ibboost, boost, coefficient, ldotrim)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_GET_RSSI_ERROR_VAL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a40e933adc8b5b1c03133451361c5505b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_CMDHANDLE_FLUSH_ALL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aacfd2e3e3a2596605cc8b182df438b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ALLOC_ERROR</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ad2e517d9efabde3a1868a274ed0f683b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCHEDULE_CMD_ERROR</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a6986912a3081f0df9873a9b953e363ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ERROR_RAT_PROG</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a96593487f5b6bc397d3986a195ecd52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ERROR_INVALID_RFMODE</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a86f899115073dc30d7b528cb0e12a9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ERROR_CMDFS_SYNTH_PROG</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a40a0b1b81a2bebefb91b952d750634dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_NUM_SCHEDULE_ACCESS_ENTRIES</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a37a38c0dc13a2ce547335e861f70d051</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_NUM_SCHEDULE_COMMAND_ENTRIES</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af6c29118d59b89ae5fe77128943034ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_NUM_SCHEDULE_MAP_ENTRIES</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a00c51d569ca050a4ca082b524bbfb924</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCH_MAP_CURRENT_CMD_OFFSET</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a5afbf118199c4d690ca365f8f10ce303</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCH_MAP_PENDING_CMD_OFFSET</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>ae47095b012cc1b8135736b1df8f3bb8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ABORT_PREEMPTION</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a4585d547dce0622e2407fea2d2a4bb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_ABORT_GRACEFULLY</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8357151872adc734a1e9ef74999b8710</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_SCH_CMD_EXECUTION_TIME_UNKNOWN</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0bc9d4802427e91001d40cec7e20164f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_RAT_ANY_CHANNEL</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a59a68b973702e21f5a0f30f357f1e247</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_RAT_TICKS_PER_US</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a3cf51703068e6f00d46f78ef14a6b7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_LODIVIDER_MASK</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a0f972d9375859893722d23514c399fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertUsToRatTicks</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af0fbfd98528830da6556b8a8c6d60bd8</anchor>
      <arglist>(microseconds)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertMsToRatTicks</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>aabead042beafa5e5347f1e7b003202f2</anchor>
      <arglist>(milliseconds)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertRatTicksToUs</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>af3e94acb7fe950698e19e5c07775cee0</anchor>
      <arglist>(ticks)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RF_convertRatTicksToMs</name>
      <anchorfile>_r_f_8h.html</anchorfile>
      <anchor>a8c812053bf4dfc87370d92157ea3878d</anchor>
      <arglist>(ticks)</arglist>
    </member>
    <docanchor file="_r_f_8h">rf_overview</docanchor>
    <docanchor file="_r_f_8h">rf_setup_and_configuration</docanchor>
    <docanchor file="_r_f_8h">rf_command_execution</docanchor>
    <docanchor file="_r_f_8h">rf_event_callbacks</docanchor>
    <docanchor file="_r_f_8h">rf_power_management</docanchor>
    <docanchor file="_r_f_8h">rf_scheduling</docanchor>
    <docanchor file="_r_f_8h">rf_rat</docanchor>
    <docanchor file="_r_f_8h">rf_tx_power</docanchor>
    <docanchor file="_r_f_8h">rf_convenience_features</docanchor>
  </compound>
  <compound kind="file">
    <name>RingBuf.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/utils/</path>
    <filename>_ring_buf_8h</filename>
    <class kind="struct">RingBuf_Object</class>
    <member kind="typedef">
      <type>struct RingBuf_Object</type>
      <name>RingBuf_Object</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>af6920ef38868fbc57971fdbbab477d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct RingBuf_Object *</type>
      <name>RingBuf_Handle</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>ade97ef8496bcec2a38a8695128458883</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RingBuf_construct</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>abadef81450098bc113f104e9adec83b1</anchor>
      <arglist>(RingBuf_Handle object, unsigned char *bufPtr, size_t bufSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_get</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>abb0526bc9c7e9a496e7a9fafc34e753e</anchor>
      <arglist>(RingBuf_Handle object, unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_getCount</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>ac06c00bf7da6408bf2f17802e16c32a2</anchor>
      <arglist>(RingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RingBuf_isFull</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>adfa531b7441b7fcb65b72adef7e830b9</anchor>
      <arglist>(RingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_getMaxCount</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>a0e764325ed5803e2dfa555b3e0a77e39</anchor>
      <arglist>(RingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_peek</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>ac71f61b4218cdf81fc8ff30b8e9f1bce</anchor>
      <arglist>(RingBuf_Handle object, unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_put</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>a7f2d2d83515194f08fcc7901481b5c62</anchor>
      <arglist>(RingBuf_Handle object, unsigned char data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SD.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_s_d_8h</filename>
    <class kind="struct">SD_Params_</class>
    <class kind="struct">SD_FxnTable_</class>
    <class kind="struct">SD_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>SD_CMD_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaeae6617d0410c8dfd0df727b44d9fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gabca601c1ba0b541c82e3065b5f115ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_SUCCESS</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga691cc2fe1fe0fa94560519b53f18c647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_ERROR</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ed21a29e85502f5a205d5273df01713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga072054678e68aafcd16a7bf45892d8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SD_CardType_</type>
      <name>SD_CardType</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a8c1e950f850d3b40ed19b7a9898fe7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SD_Config_ *</type>
      <name>SD_Handle</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ac00382e8276a2b571ef3bc511455812d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SD_Params_</type>
      <name>SD_Params</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a4a629e7dbc0b31ff155b5db46330adec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SD_CloseFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a1b83788bc426bb2b7c1eb7ed92958b4d</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_ControlFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ae2308be8eec454cf4d95c8d6fc78c526</anchor>
      <arglist>)(SD_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>uint_fast32_t(*</type>
      <name>SD_getNumSectorsFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a2bf3ce8664f81012e946ed39028be875</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>uint_fast32_t(*</type>
      <name>SD_getSectorSizeFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ac3130521800102206c45ab597ce4f453</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SD_InitFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a49c5d5c34eaed7e73a2e3dd6ff38959a</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_InitializeFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a10d9d8767b6521bdb55f08d504131999</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>SD_Handle(*</type>
      <name>SD_OpenFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ab4bcae6f0885b93f6d5c3da91040638f</anchor>
      <arglist>)(SD_Handle handle, SD_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_ReadFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ab4201c8b89040c3f1829c2a154057b07</anchor>
      <arglist>)(SD_Handle handle, void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_WriteFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a67504aaf6db25bed624e5bbcf3043ecd</anchor>
      <arglist>)(SD_Handle handle, const void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SD_FxnTable_</type>
      <name>SD_FxnTable</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a0b2af1f4f88d5b6619cc659c01c99c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SD_Config_</type>
      <name>SD_Config</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ae0de5710be04fcc793b2d8946d151b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SD_CardType_</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>af64a1f7ea3923718c4741360d0393eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_NOCARD</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>af64a1f7ea3923718c4741360d0393eb9a1c121b7f5d4826090374c3c34b748d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_MMC</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>af64a1f7ea3923718c4741360d0393eb9a2d3cce4eff19e313516ca5b215f721be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_SDSC</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>af64a1f7ea3923718c4741360d0393eb9ae884372680134cfc338a4bc9f339bc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_SDHC</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>af64a1f7ea3923718c4741360d0393eb9a328ee7940776cc398388d56e4eba5175</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SD_close</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ae7f98db7753385361e0f7927b1771c41</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_control</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>adeeaa4d71a639131abb9377322b3b226</anchor>
      <arglist>(SD_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>SD_getNumSectors</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>aecff5a5f73ac1cfbe27c2a0593dd7558</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>SD_getSectorSize</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>aa88b4d26d76ad3cdfcf652c0284e8f3d</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SD_init</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a0cfa8bf08501f1c19d2357856d4236ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SD_Params_init</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>afd09eeb2f5a0dc0a05a238a1e455e260</anchor>
      <arglist>(SD_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_initialize</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a6532267348f0afa007adec0e3ff2c3e0</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>SD_Handle</type>
      <name>SD_open</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a0c897f68603b2f1341be1378ec976a2d</anchor>
      <arglist>(uint_least8_t index, SD_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_read</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ad28e80ec85e28612af735a6a20d831c0</anchor>
      <arglist>(SD_Handle handle, void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_write</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>afb413a941fd83b75abdbb3dead5401d8</anchor>
      <arglist>(SD_Handle handle, const void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <docanchor file="_s_d_8h">ti_drivers_SD_Overview</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Usage</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Synopsis</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Synopsis_Code</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Examples</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Example_getCardSpace</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>SDFatFS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_s_d_fat_f_s_8h</filename>
    <includes id="_s_d_8h" name="SD.h" local="no" imported="no">ti/drivers/SD.h</includes>
    <class kind="struct">SDFatFS_Object_</class>
    <class kind="struct">SDFatFS_Config_</class>
    <member kind="typedef">
      <type>struct SDFatFS_Object_</type>
      <name>SDFatFS_Object</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>ac76c27c3a2005819ce8e7bd2357e3215</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SDFatFS_Config_ *</type>
      <name>SDFatFS_Handle</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>a068ec63155c86d7c156af6f440628d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SDFatFS_Config_</type>
      <name>SDFatFS_Config</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>ae8733fb11f1ab3333232e95d6cc29d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SDFatFS_Handle</type>
      <name>SDFatFS_open</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>af4f49c19ea2e426dc7fd4b0c534b9db8</anchor>
      <arglist>(uint_least8_t idx, uint_least8_t drive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SDFatFS_close</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>abe6d8057c1529b6e09489b1653ef48eb</anchor>
      <arglist>(SDFatFS_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SDFatFS_init</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>ae3e438eb1f25f9b9f08d557bd480532c</anchor>
      <arglist>(void)</arglist>
    </member>
    <docanchor file="_s_d_fat_f_s_8h">ti_drivers_SDFatFS_Overview</docanchor>
  </compound>
  <compound kind="file">
    <name>SDSPI.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/sd/</path>
    <filename>_s_d_s_p_i_8h</filename>
    <includes id="_s_d_8h" name="SD.h" local="no" imported="no">ti/drivers/SD.h</includes>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <class kind="struct">SDSPI_HWAttrs_</class>
    <class kind="struct">SDSPI_Object_</class>
    <member kind="typedef">
      <type>struct SDSPI_HWAttrs_</type>
      <name>SDSPI_HWAttrs</name>
      <anchorfile>_s_d_s_p_i_8h.html</anchorfile>
      <anchor>a4c974e4ff1c404de8836643fb7414314</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SDSPI_Object_</type>
      <name>SDSPI_Object</name>
      <anchorfile>_s_d_s_p_i_8h.html</anchorfile>
      <anchor>a25a19d336f0b08ebddeb7dd246b6e1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SD_FxnTable</type>
      <name>SDSPI_fxnTable</name>
      <anchorfile>_s_d_s_p_i_8h.html</anchorfile>
      <anchor>a7535c02140f9b8b9762e67f46f5387ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SHA2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_s_h_a2_8h</filename>
    <class kind="struct">SHA2_Config</class>
    <class kind="struct">SHA2_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>SHA2_STATUS_RESERVED</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>af86590d86ab05868e5d9768a53864c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA2_STATUS_SUCCESS</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>af830601fb3cebbf96c405ca6f1cbbc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA2_STATUS_ERROR</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>af9c9e8e3c5044c83eefdaef9063860a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA2_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a79f870938f2275ff40d9a923839baba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA2_STATUS_CANCELED</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a233fd6c6912964d0a4918075081c08c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SHA2_Config</type>
      <name>SHA2_Config</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a2765b4640a751d3e085c790d980fcdfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SHA2_Config *</type>
      <name>SHA2_Handle</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a0a6ddcbf393ff5f2677ebe47e1f3d798</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SHA2_CallbackFxn</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a4a605367d5d35ab77de06dcb9f54c921</anchor>
      <arglist>)(SHA2_Handle handle, int_fast16_t returnStatus)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SHA2_ReturnBehavior</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a224eb3d293bb76a360d13f3fb6cdcd58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a224eb3d293bb76a360d13f3fb6cdcd58a24089a94926440a2b1ef80f2f12a6eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a224eb3d293bb76a360d13f3fb6cdcd58a1886f2611fbf1ec1c64b32b3308ca6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a224eb3d293bb76a360d13f3fb6cdcd58acb21dfa07af8bd9ea8b69e3821f14bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SHA2_HashType</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ac736b297766eec40ca782cbc559d1f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_HASH_TYPE_224</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ac736b297766eec40ca782cbc559d1f29ac04c761878b57de09ecd0a15f18216c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_HASH_TYPE_256</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ac736b297766eec40ca782cbc559d1f29afb54f73866a407de412f1612deba102e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_HASH_TYPE_384</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ac736b297766eec40ca782cbc559d1f29aa2a402addbc8c70d1cf8eda44e5ea0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_HASH_TYPE_512</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ac736b297766eec40ca782cbc559d1f29a95382db804c412fd6ad3d86aaf743f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SHA2_DigestLengthBytes</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a80743185c031d98f1ed370161c1f253d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_DIGEST_LENGTH_BYTES_224</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a80743185c031d98f1ed370161c1f253daa5d0d0cca946f78996634d3e0cd1e1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_DIGEST_LENGTH_BYTES_256</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a80743185c031d98f1ed370161c1f253da485865fb1d5fd1dd0d79ac98c2d6eedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_DIGEST_LENGTH_BYTES_384</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a80743185c031d98f1ed370161c1f253da8d406e8f97117db168ec92ff25be9a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_DIGEST_LENGTH_BYTES_512</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a80743185c031d98f1ed370161c1f253dac9cfb34c079c68dc42e945d15183ab8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SHA2_BlockSizeBytes</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a068b58fab712a0c1ad7091803314c5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_BLOCK_SIZE_BYTES_224</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a068b58fab712a0c1ad7091803314c5d0a02b165a6d502cb6bfc35a4718a52f25a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_BLOCK_SIZE_BYTES_256</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a068b58fab712a0c1ad7091803314c5d0a37bd6cb465e5a0c77c15933525f25103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_BLOCK_SIZE_BYTES_384</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a068b58fab712a0c1ad7091803314c5d0ac41032a24580877dd5c1be886d75a897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHA2_BLOCK_SIZE_BYTES_512</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a068b58fab712a0c1ad7091803314c5d0a8ba20289cd607ae3b078487c5111833a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SHA2_init</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a52bac540341a588612f9e375cc504439</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SHA2_Params_init</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a35012f3a93e7a6f7252c53ae31d28aed</anchor>
      <arglist>(SHA2_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>SHA2_Handle</type>
      <name>SHA2_open</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>abd8e7d5cf0cad89a9a218d5ce6d41e13</anchor>
      <arglist>(uint_least8_t index, const SHA2_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SHA2_close</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a57cfbb0eecdf3449cbfa4e2dcb471dd4</anchor>
      <arglist>(SHA2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SHA2_addData</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ac5155c684c254a894ea06f4cd5290990</anchor>
      <arglist>(SHA2_Handle handle, const void *data, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SHA2_hashData</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a600ae605f0fe066173c8dc2f536d5b8f</anchor>
      <arglist>(SHA2_Handle handle, const void *data, size_t size, void *digest)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SHA2_finalize</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ae8e6a9aa91a05977f2db52ba67ee80da</anchor>
      <arglist>(SHA2_Handle handle, void *digest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SHA2_reset</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>ab56e3f36e56ffb06c2c8aaa7528ac321</anchor>
      <arglist>(SHA2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SHA2_cancelOperation</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a8274ea547e11bfe8e9d406f646ad0432</anchor>
      <arglist>(SHA2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SHA2_setHashType</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a46075b17a244bac1b9123559da37f6f5</anchor>
      <arglist>(SHA2_Handle handle, SHA2_HashType type)</arglist>
    </member>
    <member kind="function">
      <type>SHA2_Handle</type>
      <name>SHA2_construct</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a954040f0843fafbee57fa7589207ef00</anchor>
      <arglist>(SHA2_Config *config, const SHA2_Params *params)</arglist>
    </member>
    <member kind="variable">
      <type>const SHA2_Config</type>
      <name>SHA2_config</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>aa8005577cc49a5805d5e123395b74185</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const uint_least8_t</type>
      <name>SHA2_count</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a0bbbbf10608e8b702cd04166617903b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SHA2_Params</type>
      <name>SHA2_defaultParams</name>
      <anchorfile>_s_h_a2_8h.html</anchorfile>
      <anchor>a2bc55a3d74a3fecd6f00d498bce96f26</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_s_h_a2_8h">ti_drivers_SHA2_Overview</docanchor>
    <docanchor file="_s_h_a2_8h">ti_drivers_SHA2_Usage</docanchor>
    <docanchor file="_s_h_a2_8h">ti_drivers_SHA2_Synopsis</docanchor>
    <docanchor file="_s_h_a2_8h">ti_drivers_SHA2_Synopsis_Code</docanchor>
    <docanchor file="_s_h_a2_8h">ti_drivers_SHA2_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>SHA2CC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/sha2/</path>
    <filename>_s_h_a2_c_c26_x2_8h</filename>
    <includes id="_s_h_a2_8h" name="SHA2.h" local="no" imported="no">ti/drivers/SHA2.h</includes>
    <class kind="struct">SHA2CC26X2_HWAttrs</class>
  </compound>
  <compound kind="file">
    <name>SharpGrLib.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/display/lcd/</path>
    <filename>_sharp_gr_lib_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>LANDSCAPE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a211dd160685be8a5a4f43be3fc3195a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PALETTE_COLORS</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>adffaead97b78252cbb751cb2dd65b3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_BLACK</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a700708a7b3391e6ff293b1bc98a71502</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_WHITE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a7d13b434a6baf89ac9ac8b34ca7068b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_SEND_TOGGLE_VCOM_COMMAND</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>ae2cbee418c123953f828e87e7d635c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_SKIP_TOGGLE_VCOM_COMMAND</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a3047b67f085d1760edf2d6b402ad209a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_TRAILER_BYTE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a1a7f483ad96879e337efe4dad8e1f454</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_VCOM_TOGGLE_BIT</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a30554bd10ddbe85543b0ebb58e4106f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_CMD_CHANGE_VCOM</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a954836b459a3be2f0c39bc0b862fcb25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_CMD_CLEAR_SCREEN</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a9e93d5f230739149043a5415ecbea423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_CMD_WRITE_LINE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a641d27c4086d7240c03b3d05ee1d45a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPYCOLORTRANSLATE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a3b4f68242350706cc6e891fecc3399a9</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SharpGrLib_sendToggleVCOMCommand</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a8d00c53411ec9635841332391647216b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SharpGrLib_init</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>ac8a5473a3e97810ed14c47e58ee43335</anchor>
      <arglist>(SPI_Handle hSpi, uint32_t csPin)</arglist>
    </member>
    <member kind="variable">
      <type>const Graphics_Display_Functions</type>
      <name>g_sharpFxns</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a6dae23f5c5fc2e9874d5e044c5727e72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SPI.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_s_p_i_8h</filename>
    <class kind="struct">SPI_Transaction</class>
    <class kind="struct">SPI_Params</class>
    <class kind="struct">SPI_FxnTable</class>
    <class kind="struct">SPI_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>SPI_CMD_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga3d23d16525ee76f77276472d8dea80b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gae1af8c6ebf5e8fe481649f65e37b1b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab38fa90ff62128dbc98b2ecd84ca106f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_ERROR</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2d0020dd673cc28a9e1c20b0ff101073</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacfcd15e1eecdb99b4867adc7592a8d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_WAIT_FOREVER</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a7cab73b936e6e08392882196df41277e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPI_Config_ *</type>
      <name>SPI_Handle</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a93072bc33543d36c9603198df25ee388</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_CallbackFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a207e2d5a7e7ea5606b6995b6485ca015</anchor>
      <arglist>)(SPI_Handle handle, SPI_Transaction *transaction)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_CloseFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>aa361d580eb0a5a052d0a1403e0aa5746</anchor>
      <arglist>)(SPI_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SPI_ControlFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a0505b9eca5030ca4fc27959e2b5134ca</anchor>
      <arglist>)(SPI_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_InitFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>aa3b32db8f017fd0ce92bf46a089659e6</anchor>
      <arglist>)(SPI_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>SPI_Handle(*</type>
      <name>SPI_OpenFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a7e0786f4c1487f9daec49adbc3ac1cf5</anchor>
      <arglist>)(SPI_Handle handle, SPI_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>bool(*</type>
      <name>SPI_TransferFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a470d264d053b30edb0aaafcafd335c26</anchor>
      <arglist>)(SPI_Handle handle, SPI_Transaction *transaction)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_TransferCancelFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a33f5b214451ac89ea462083eeba0bf8c</anchor>
      <arglist>)(SPI_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SPI_Config_</type>
      <name>SPI_Config</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a9ce9680cc88c403db466864c02ee4733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_Status</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_COMPLETED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbabb35466595b950df7e3e3d880336502b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_STARTED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbad5266453aecb2fdedc0c23cd90921627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_CANCELED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fba78957da92681e8400d84d9d3ede55836</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_FAILED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbac01b83da31c34da13025a5b987ef013f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_CSN_DEASSERT</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbaa363cddc53c1f44ca73aa661e6535816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_PEND_CSN_ASSERT</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbad9c52e5a8cefc5b6926e19a8dd62125b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_QUEUED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fba296a4fda0015070e612ab8e1ee5bc287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_Mode</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a60a7e3d74577b38aa79ea6983362f942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MASTER</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a60a7e3d74577b38aa79ea6983362f942a84379dc90398ca075038c8d5ee465f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_SLAVE</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a60a7e3d74577b38aa79ea6983362f942abc98c1546fe12d3fceb1f86cf670faa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_FrameFormat</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL0_PHA0</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a0396d8c01166ff94e94e0c200261eba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL0_PHA1</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a340efc6d0f6f3b5be1151444c15faabf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL1_PHA0</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489ace88daceb628498715aeda698541c95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL1_PHA1</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a4441729b292511628cb1e9f102da9166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TI</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489ac3cb11b3a833e28368e267161551eb1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MW</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a34dc698e46fc5c1b2b1f0de19a44fdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_TransferMode</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>ab9ea76c6529d6076eee5e1c4a5a92c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MODE_BLOCKING</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>ab9ea76c6529d6076eee5e1c4a5a92c6fa0dfb2358e008316426895e7237c398e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MODE_CALLBACK</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>ab9ea76c6529d6076eee5e1c4a5a92c6fa5631e69925c47a62a261c78ebbda39fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_close</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a0e3448b30b88609fa120915e49560601</anchor>
      <arglist>(SPI_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SPI_control</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a1b3fafc9892141b7bab1bc9c19ede9ef</anchor>
      <arglist>(SPI_Handle handle, uint_fast16_t cmd, void *controlArg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_init</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>afd9b09f58917f0e2d14c61b956eba214</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SPI_Handle</type>
      <name>SPI_open</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a9c9022decfb136991d6b53f7dd2ae2fc</anchor>
      <arglist>(uint_least8_t index, SPI_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_Params_init</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a9c3dd1748332fd6e31c79a6538a71642</anchor>
      <arglist>(SPI_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SPI_transfer</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a989e17f96b54fcc3dc2cac5f8ac6bdb2</anchor>
      <arglist>(SPI_Handle handle, SPI_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_transferCancel</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a6819f7761fc3505c4f885653ff8121f0</anchor>
      <arglist>(SPI_Handle handle)</arglist>
    </member>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Overview</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Usage</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Synopsis</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Examples</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_openblocking</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_opencallback</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_6bitframes</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_12bitframes</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_callbackarg</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_MasterSlaveModes</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>SPICC26X2DMA.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/spi/</path>
    <filename>_s_p_i_c_c26_x2_d_m_a_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_u_d_m_a_c_c26_x_x_8h" name="UDMACC26XX.h" local="no" imported="no">ti/drivers/dma/UDMACC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">SPICC26X2DMA_HWAttrs</class>
    <class kind="struct">SPICC26X2DMA_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga34c49fde4df8fd436cf431b8c69e64d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga0e1ad744e41c95b652bc5c04f492d609</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_SET_CSN_PIN</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga572d479a9a8504cf5c096d16465f8e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_SET_MANUAL</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga2e83f10ecd69aa4b117acb2e64565f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_CLR_MANUAL</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga687eef73eab3644a3000ab89b2a83cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_MANUAL_START</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga3b4361e2cabb4ae7fedda98551aee5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>aaa634f36e737f032a3965aaf1ee68861</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>ab3d2701c77c927ce2623c6370bbc8b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_SET_CSN_PIN</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a4e5ef588123b8c7db018f26606fb662c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SPICC26X2DMA_FrameSize</type>
      <name>SPICC26X2DMA_FrameSize</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a85011533021df7e39f6900224474eaf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SPICC26X2DMA_ReturnPartial</type>
      <name>SPICC26X2DMA_ReturnPartial</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a1bc5303e7928daf810979da79c3da2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPICC26X2DMA_HWAttrs</type>
      <name>SPICC26X2DMA_HWAttrs</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>aae63e0c638d661b7ca366c4cf4848b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPICC26X2DMA_Object</type>
      <name>SPICC26X2DMA_Object</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a7e257e9e770a2d7a389c6d671cb957bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPICC26X2DMA_FrameSize</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>af00bbb5d6f695caee4c24f57ac7236d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26X2DMA_8bit</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>af00bbb5d6f695caee4c24f57ac7236d3a07a215eef0e18eb548bec7031a4a6e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26X2DMA_16bit</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>af00bbb5d6f695caee4c24f57ac7236d3ac3bfdd18fe2cf4674a56554737b57ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPICC26X2DMA_ReturnPartial</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a15ad0a779d60692ec97e106cd602cd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26X2DMA_retPartDisabled</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a15ad0a779d60692ec97e106cd602cd4da110eab6b38d8da801d21e3556ea1fb55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26X2DMA_retPartEnabledIntNotSet</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a15ad0a779d60692ec97e106cd602cd4dad1a937fa73857130a5cd52db13fc951d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26X2DMA_retPartEnabledIntSet</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a15ad0a779d60692ec97e106cd602cd4dae635a93b40c8dd2d5ad9a58cf3f0b2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SPI_FxnTable</type>
      <name>SPICC26X2DMA_fxnTable</name>
      <anchorfile>_s_p_i_c_c26_x2_d_m_a_8h.html</anchorfile>
      <anchor>a91e8de1ee3380354aba7d286fc59c593</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASES_SPI_X2</docanchor>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASE_RP_X2</docanchor>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASE_CST_X2</docanchor>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASE_MMMS_X2</docanchor>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASE_QUEUE</docanchor>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASE_MANUAL_START</docanchor>
    <docanchor file="_s_p_i_c_c26_x2_d_m_a_8h">USE_CASE_LPWR_X2</docanchor>
  </compound>
  <compound kind="file">
    <name>SPICC26XXDMA.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/spi/</path>
    <filename>_s_p_i_c_c26_x_x_d_m_a_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_u_d_m_a_c_c26_x_x_8h" name="UDMACC26XX.h" local="no" imported="no">ti/drivers/dma/UDMACC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">SPICC26XXDMA_HWAttrsV1</class>
    <class kind="struct">SPICC26XXDMA_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga348d271d5ad295c5e049e78d745c57e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>gaff8de4036abcdb2903cb5280120c30b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_CMD_SET_CSN_PIN</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>gab3ab03abd9ca073344acdcc6b442f9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a5d2c909f70c7093227d1b288354cef27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a6454ac0d2222d98114cf15a4a60367ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_SET_CSN_PIN</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a447172f0061a6de65a8f0d221a23f93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SPICC26XXDMA_FrameSize</type>
      <name>SPICC26XXDMA_FrameSize</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>aa9aa99fc2a0c94cd7aa263ba08eafb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPICC26XXDMA_HWAttrsV1</type>
      <name>SPICC26XXDMA_HWAttrsV1</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a17117d67b0bd141d91110f2c5bfaa9cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPICC26XXDMA_Object</type>
      <name>SPICC26XXDMA_Object</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a17ff5bb4e58bb3bf27c26a711489f5e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPICC26XXDMA_Object *</type>
      <name>SPICC26XXDMA_Handle</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a23f13f9c52a6ced04e082c64bebf128f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPICC26XXDMA_FrameSize</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a1c5afb8465d3e8689a82088ad25fc81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26XXDMA_8bit</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a1c5afb8465d3e8689a82088ad25fc81aae775eeccbba1a059e3cf6ada00472a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPICC26XXDMA_16bit</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a1c5afb8465d3e8689a82088ad25fc81aab7e0c593e19cb06ea65ad293f6fd0971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SPI_FxnTable</type>
      <name>SPICC26XXDMA_fxnTable</name>
      <anchorfile>_s_p_i_c_c26_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a7a96d71ae8382c6fa489107d34d6c9b3</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_s_p_i_c_c26_x_x_d_m_a_8h">USE_CASES_SPI</docanchor>
    <docanchor file="_s_p_i_c_c26_x_x_d_m_a_8h">USE_CASE_RP</docanchor>
    <docanchor file="_s_p_i_c_c26_x_x_d_m_a_8h">USE_CASE_CST</docanchor>
    <docanchor file="_s_p_i_c_c26_x_x_d_m_a_8h">USE_CASE_MMMS</docanchor>
    <docanchor file="_s_p_i_c_c26_x_x_d_m_a_8h">USE_CASE_LPWR</docanchor>
  </compound>
  <compound kind="file">
    <name>spiffs.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/third_party/spiffs/</path>
    <filename>spiffs_8h</filename>
    <class kind="struct">spiffs_config</class>
    <class kind="struct">spiffs_t</class>
    <class kind="struct">spiffs_stat</class>
    <class kind="struct">spiffs_dirent</class>
    <class kind="struct">spiffs_DIR</class>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_OK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aaf46e44b46e27f0104c79041b35fcd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_MOUNTED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a95b07cd903621bd10ef7bd4cd82b03e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FULL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a60195f45cfc3e85e4c45984967916d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_FOUND</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acbe4629e401ab11153050b14abb4c0d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_END_OF_OBJECT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8e3ff2f9c010bdbac672ce08c4c2fc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_DELETED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8a7ec7d700a8037223d710d017d0c3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_FINALIZED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ac8694b846a4ea1818f0859978879e8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5f213eb33bba3a160a51727dea8feb96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_OUT_OF_FILE_DESCS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aebe2663803256d1983a8c1e64f6cd8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FILE_CLOSED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a4117c02be38676c3307468c0e37f6e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FILE_DELETED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9ad93f5b148381c38d035c7e2392c332</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_BAD_DESCRIPTOR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad217e50d0b8f1dbb38fc6dae257c9601</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IS_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a91dca975b2da14dd0283fddd8abbbaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IS_FREE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a75ebdffd7e64edfbedfb69b7e560020a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_SPAN_MISMATCH</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a51bbb3df20b44217eca88c0b626648b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_DATA_SPAN_MISMATCH</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9d699bd7663614dc7018cccfdd07d11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_REF_FREE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af1959dc09a5f3b86a7078e290f95cf1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_REF_LU</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1bdb498b308885d3e6fa7d5c816e5bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_REF_INVALID</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a4f9cdd15910c779ead0af40c6af8462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_FREE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a2a95dd91935e3ac3395675b33d1948f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_LU</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a6042eeaa6871c8c10effbd7a1660852b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_INVALID</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1f28edbf79a1df2b37ef9895cc08bbf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_WRITABLE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9702280484c31920f8f9e05601b42f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_READABLE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a40afd7f07a93606167411b1c1c596462</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_CONFLICTING_NAME</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a51fc1846473ea5c4110dab3ab7aedc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_CONFIGURED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad7710ce1db415f47eaff65faa164e1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_A_FS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a2c81a67c16112930ac3c08a4ca1cdf36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_MOUNTED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af3d313cdaed74625203afeee0f83fb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_ERASE_FAIL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a679a2e0cf96ecf797dc0e4cc2bfd8ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_MAGIC_NOT_POSSIBLE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a813d1248ba8b81bd889bfb6b3efde912</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NO_DELETED_BLOCKS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a2542f17c1fb9dd08cbf2f68b786b2a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FILE_EXISTS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0c27e45c85d584c641ea67cac3cb729a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_A_FILE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5d33fd2311517b3bb39a612021265e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_RO_NOT_IMPL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9d66dd941e345bb29809ab7ce4bcf397</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_RO_ABORTED_OPERATION</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8ef0cea17133a91eb23e95a1cedc4dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_PROBE_TOO_FEW_BLOCKS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1b1e4016fc803283471e84dd2f298b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_PROBE_NOT_A_FS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a7cb17d31aaad66b3542b781fc2aaf8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NAME_TOO_LONG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3d69df2d6b16ec7b56139cfee87bd00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IX_MAP_UNMAPPED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a416727f6cfa5caa44cd0acd358621518</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IX_MAP_MAPPED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a461af11cadc8809b5a7ef6d259b810e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IX_MAP_BAD_RANGE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1dc6302927b3d8597395013309aa0818</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_SEEK_BOUNDS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acc41886b91465d4ed7bc23bf2981be02</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INTERNAL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab37e791bd90ab58be013d6654f7b273d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_TEST</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a96dcc8718b8d3ba369c8d4a7e7115add</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a219c4e2521b910408d4b13f9f6335fa9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_GC_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a19bb9066adb9e72686564b30f5163db4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_CACHE_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3be5a4ddb405c912c0f98c4ad5afa953</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_CHECK_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adde3421152bb16ebdc80074b04cc87e4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_APPEND</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8cc70d514d1a9f0d7c56adebb739a350</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_APPEND</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>abf2eb79c7e00f4bce92799f3bbe91bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TRUNC</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a32ce65d3a095a63730bf4628aa702549</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_TRUNC</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aaca1d8666d8b9d14c43fc6be0a7ef2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_CREAT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a862f18dd74ef4734b2a599c3d90f44f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_CREAT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3b150deb093f0bd78aaeb77ab25dccce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_RDONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a99b307af3f50d5bb705014b4da7d4fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_RDONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ac5a7ae6872f9861130b99d5c3251cff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_WRONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acce3bbcf70c00099eec1cba7bbd7613f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_WRONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af564b4e805764972072bf191d93d25bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_RDWR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>afd17ea90145b927e9b48e3377bc32658</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_RDWR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aca28c6e538725ba8430ed74dcf3818ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_DIRECT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae418936eb506aad21e28137ece75ec7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_DIRECT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a71cdc0ddc8522057f0f7b93f272e33ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_EXCL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adf2830f94d06a88f6c636b31d7092325</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_EXCL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a58b14c2213b7d9516b32df81be42eee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_SEEK_SET</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae321bd3f65212d82d8000e6f5b4e7bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_SEEK_CUR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>afca3dc9ec2bd85a74c5cf5723fb84911</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_SEEK_END</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad3552eeb066a84e97d3edb0b6570ce84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_FILE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aefcad3586e1b275fe1198aa2a5f0901b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_DIR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a6315d54ace53506240e737e5375a1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_HARD_LINK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae154415a4359a734c79512cf1c2edf27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_SOFT_LINK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a57147097b0ddc63bc504d25442450a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_LOCK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab96302d0630788c4b1b78c520943d286</anchor>
      <arglist>(fs)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_UNLOCK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a46695e2a185280afbd9723da9cc6d9a4</anchor>
      <arglist>(fs)</arglist>
    </member>
    <member kind="typedef">
      <type>s16_t</type>
      <name>spiffs_file</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adedd285e078b4def41b8569797699346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u16_t</type>
      <name>spiffs_flags</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a80a41355b551d9df0afa002b3bec5180</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u16_t</type>
      <name>spiffs_mode</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aaab6ad7b72ee956bf99f208c894c99e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u8_t</type>
      <name>spiffs_obj_type</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a27e06ffa80e88de370c28c07654fe26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>s32_t(*</type>
      <name>spiffs_read</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3861dee7404337e10303e4b60053a9e8</anchor>
      <arglist>)(u32_t addr, u32_t size, u8_t *dst)</arglist>
    </member>
    <member kind="typedef">
      <type>s32_t(*</type>
      <name>spiffs_write</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a83a624c7f2fa5c652dcfffb8465e41ff</anchor>
      <arglist>)(u32_t addr, u32_t size, u8_t *src)</arglist>
    </member>
    <member kind="typedef">
      <type>s32_t(*</type>
      <name>spiffs_erase</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3b0c340a6f72ada33af802238a3a013c</anchor>
      <arglist>)(u32_t addr, u32_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>spiffs_check_callback</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a71711b340d43dc350f5142ed8e86e91c</anchor>
      <arglist>)(spiffs_check_type type, spiffs_check_report report, u32_t arg1, u32_t arg2)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>spiffs_file_callback</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a752009b605995fbff7bea2d84763e660</anchor>
      <arglist>)(struct spiffs_t *fs, spiffs_fileop_type op, spiffs_obj_id obj_id, spiffs_page_ix pix)</arglist>
    </member>
    <member kind="typedef">
      <type>struct spiffs_t</type>
      <name>spiffs</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad770b2e1589c193b8e39b6335e48e32e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>spiffs_check_type</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_LOOKUP</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1a8852b4978b03314e48e02ab129e87b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1a36234203b1969cbfbdde4a32100d39d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_PAGE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1a870a8091717ec7d3500a0823d14344f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>spiffs_check_report</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_PROGRESS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea09458be9a09b788f17e873e586cc0d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_ERROR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea2f790a0a5b2e2ece1862965f9ade3d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_FIX_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264eaafad10b1f2b2eded33c061ed087eb52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_FIX_LOOKUP</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea5202022eab6ff9b6c200bfeda8c156c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_DELETE_ORPHANED_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea97b9d2c9d85505ba9cccd2eb159e73f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_DELETE_PAGE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea2c0cc4d90c44ce277512b07ae8a38d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_DELETE_BAD_FILE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea431e9e76813a5d6a1c3096b41f627d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>spiffs_fileop_type</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CB_CREATED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150eda6a101e5aefac29ac831386e6636350f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CB_UPDATED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150eda235d3dfa839481e4d01cdfe4d25c5570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CB_DELETED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150edae9aea2479ae618ae2ef050fc81d65a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_mount</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a16d6f29a836803993d12b0f51e81a1e0</anchor>
      <arglist>(spiffs *fs, spiffs_config *config, u8_t *work, u8_t *fd_space, u32_t fd_space_size, void *cache, u32_t cache_size, spiffs_check_callback check_cb_f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPIFFS_unmount</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a98b86b521e4e51790dac322618558441</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_creat</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad653345a098d4933f63a95a1a64cb5fe</anchor>
      <arglist>(spiffs *fs, const char *path, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_file</type>
      <name>SPIFFS_open</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad6449ab3ad1c07b9a8ca743af4b836fa</anchor>
      <arglist>(spiffs *fs, const char *path, spiffs_flags flags, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_file</type>
      <name>SPIFFS_open_by_dirent</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5442ec7cf9973ef1bae26753f8715b8d</anchor>
      <arglist>(spiffs *fs, struct spiffs_dirent *e, spiffs_flags flags, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_file</type>
      <name>SPIFFS_open_by_page</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adc5848eb9323ebfbad6f1a94f34154f4</anchor>
      <arglist>(spiffs *fs, spiffs_page_ix page_ix, spiffs_flags flags, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_read</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>abe8899197a8c5032f7dd85f3a9f9eec6</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, void *buf, s32_t len)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_write</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af34f802723bd3a2e033b44c644483d39</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, void *buf, s32_t len)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_lseek</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae396bc62e88e9846d371f16859b93e54</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, s32_t offs, int whence)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_remove</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a962677491700668b80117a9e0f728b51</anchor>
      <arglist>(spiffs *fs, const char *path)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_fremove</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1e75f5d57aeb09fa936a1fa3d6ceb2d5</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_stat</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3ac72ca8843be826ef5a77b1663ee4ac</anchor>
      <arglist>(spiffs *fs, const char *path, spiffs_stat *s)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_fstat</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0bfb43557c275cf88eae52dcd7b53524</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, spiffs_stat *s)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_fflush</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ac335bf8ade9f4f8ac44123a6a608d78a</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_close</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9a9babd221dab492856c5da4fa74bf88</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_rename</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a20b3521d3794d9150f4116372ff7c4e9</anchor>
      <arglist>(spiffs *fs, const char *old, const char *newPath)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_errno</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a7c7c930dcabe1403be5bf5ecd57986ec</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPIFFS_clearerr</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5b45ea9230e7d9a73bc63f871b33b709</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_DIR *</type>
      <name>SPIFFS_opendir</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a116271bb88503c16c860b805368c88be</anchor>
      <arglist>(spiffs *fs, const char *name, spiffs_DIR *d)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_closedir</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a88a4782ebf1c1d37c5c2352a7700a4cf</anchor>
      <arglist>(spiffs_DIR *d)</arglist>
    </member>
    <member kind="function">
      <type>struct spiffs_dirent *</type>
      <name>SPIFFS_readdir</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adb15aebc5a6add477b2f6dbf81756763</anchor>
      <arglist>(spiffs_DIR *d, struct spiffs_dirent *e)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_check</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab2a6e1f0464c8fa41535b43d597cdd26</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_info</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acfda216b52879b2e8b637258f319269a</anchor>
      <arglist>(spiffs *fs, u32_t *total, u32_t *used)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_format</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a85de96c305e5b362975ef8dceebfd9e4</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>u8_t</type>
      <name>SPIFFS_mounted</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a6796d3c00ddb94ec1e2fe2fde2bb292a</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_gc_quick</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aea9c999e519fc5ad90c1580d9835ac9f</anchor>
      <arglist>(spiffs *fs, u16_t max_free_pages)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_gc</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a996713c9c86267523b1fcf14e1f59ba1</anchor>
      <arglist>(spiffs *fs, u32_t size)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_eof</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aa964e15f59ddd9053b78933d661282e8</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_tell</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aae0d52538b75019bb6f745de8d143765</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_set_file_callback_func</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a10506068cc612f18ca683cdd1ea1e4fd</anchor>
      <arglist>(spiffs *fs, spiffs_file_callback cb_func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SPIFFSNVS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/third_party/spiffs/</path>
    <filename>_s_p_i_f_f_s_n_v_s_8h</filename>
    <includes id="spiffs_8h" name="spiffs.h" local="yes" imported="no">spiffs.h</includes>
    <includes id="_n_v_s_8h" name="NVS.h" local="no" imported="no">ti/drivers/NVS.h</includes>
    <class kind="struct">SPIFFSNVS_Lock_</class>
    <class kind="struct">SPIFFSNVS_Data_</class>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga44e1652f2eb8528bf93adc77e3e013d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_ERROR</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga24d6594e8daac912958ef381ffd60763</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_NVS_IDX</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaaed3fec880853b3df3ddc6f2bd171f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_BLOCK_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7961506209d7c5a1dc791159d6c52a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_PAGE_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga21872212b529e6a1157b6f3f4e579dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPIFFSNVS_Lock_</type>
      <name>SPIFFSNVS_Lock</name>
      <anchorfile>_s_p_i_f_f_s_n_v_s_8h.html</anchorfile>
      <anchor>a7cf3f1a05b93a1ab7433d42bb2bafc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPIFFSNVS_Data_</type>
      <name>SPIFFSNVS_Data</name>
      <anchorfile>_s_p_i_f_f_s_n_v_s_8h.html</anchorfile>
      <anchor>a4c955949f2948a593abf50454c1dada9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFSNVS_config</name>
      <anchorfile>_s_p_i_f_f_s_n_v_s_8h.html</anchorfile>
      <anchor>ad200c9f25659779041c17893b0155a48</anchor>
      <arglist>(SPIFFSNVS_Data *spiffsnvsData, u32_t nvsIndex, spiffs *fs, spiffs_config *fsConfig, u32_t logicalBlockSize, u32_t logicalPageSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TRNG.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_t_r_n_g_8h</filename>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">TRNG_Config</class>
    <class kind="struct">TRNG_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>TRNG_STATUS_RESERVED</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>ab873e919841a0770ee602b8b9a3cd9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRNG_STATUS_SUCCESS</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>ada01c2ca6b7043d067d07410e7c0d8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRNG_STATUS_ERROR</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a80cc550c12f937e36cf602accc843766</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRNG_STATUS_RESOURCE_UNAVAILABLE</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a9df04d8cca579f5607e90928c045bf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct TRNG_Config *</type>
      <name>TRNG_Handle</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a0e028e068e7c1a4e8948d6971c1d198a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct TRNG_Config</type>
      <name>TRNG_Config</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a3ab926ef7bb0bc30a4de88636ac1b15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>TRNG_CallbackFxn</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>aa8a1cce751bd3736d54a843fb48d2413</anchor>
      <arglist>)(TRNG_Handle handle, int_fast16_t returnValue, CryptoKey *entropy)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TRNG_ReturnBehavior</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a43aba3552e575a554fa531509c27e944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRNG_RETURN_BEHAVIOR_CALLBACK</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a43aba3552e575a554fa531509c27e944ae008580d6d7344764d9bfca00008a3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRNG_RETURN_BEHAVIOR_BLOCKING</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a43aba3552e575a554fa531509c27e944ad188b4caad4b0c035728edfdb1e8e622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRNG_RETURN_BEHAVIOR_POLLING</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a43aba3552e575a554fa531509c27e944a45fe5c71066635f6f2bde444fe2bbc5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRNG_init</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a0f5e55c289bb677e686c687fc92de9a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRNG_Params_init</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a53b7f36d914ed9bcc1b11f58633c06da</anchor>
      <arglist>(TRNG_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>TRNG_Handle</type>
      <name>TRNG_open</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a77b3120825e3d0514fc213ff626be0ed</anchor>
      <arglist>(uint_least8_t index, TRNG_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRNG_close</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a13b2fd9b511f35defafc5e316beacc2e</anchor>
      <arglist>(TRNG_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>TRNG_generateEntropy</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a3afd5042c7bb40f654e546ed5cc70246</anchor>
      <arglist>(TRNG_Handle handle, CryptoKey *entropy)</arglist>
    </member>
    <member kind="variable">
      <type>const TRNG_Params</type>
      <name>TRNG_defaultParams</name>
      <anchorfile>_t_r_n_g_8h.html</anchorfile>
      <anchor>a145efe92a31bca6c39f57619faf895d2</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_t_r_n_g_8h">ti_drivers_TRNG_Overview</docanchor>
    <docanchor file="_t_r_n_g_8h">ti_drivers_TRNG_Usage</docanchor>
    <docanchor file="_t_r_n_g_8h">ti_drivers_TRNG_Synopsis</docanchor>
    <docanchor file="_t_r_n_g_8h">ti_drivers_TRNG_Synopsis_Code</docanchor>
    <docanchor file="_t_r_n_g_8h">ti_drivers_TRNG_Examples</docanchor>
  </compound>
  <compound kind="file">
    <name>TRNGCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/trng/</path>
    <filename>_t_r_n_g_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_t_r_n_g_8h" name="TRNG.h" local="no" imported="no">ti/drivers/TRNG.h</includes>
    <includes id="_crypto_key_8h" name="CryptoKey.h" local="no" imported="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <class kind="struct">TRNGCC26XX_HWAttrs</class>
    <class kind="struct">TRNGCC26XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>TRNGCC26XX_SAMPLES_PER_CYCLE_MIN</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a87d56eccbfb7c1c49a47030dec766164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRNGCC26XX_SAMPLES_PER_CYCLE_DEFAULT</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5bc6bf67d2a3df12949dfdf94ebac3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRNGCC26XX_SAMPLES_PER_CYCLE_MAX</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4b3e322edac954acb97d1ed7bb8449f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRNGCC26XX_MIN_BYTES_PER_ITERATION</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5b1661634b07febb09d165c53b93bc02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct TRNGCC26XX_HWAttrs</type>
      <name>TRNGCC26XX_HWAttrs</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0a8ff2575a4998bca33dddad8e0eecdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct TRNGCC26XX_Object</type>
      <name>TRNGCC26XX_Object</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a850fd612db1939cdb849bd444e2acf0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>TRNGCC26XX_setSamplesPerCycle</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a18699f957e3c06f2a16b23ae9ca9c8f3</anchor>
      <arglist>(TRNG_Handle handle, uint32_t samplesPerCycle)</arglist>
    </member>
    <member kind="function">
      <type>TRNG_Handle</type>
      <name>TRNGCC26XX_construct</name>
      <anchorfile>_t_r_n_g_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5a8a3a9cf62cd669df08f9e27214ce24</anchor>
      <arglist>(TRNG_Config *config, const TRNG_Params *params)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>types.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/kernel/nortos/posix/sys/</path>
    <filename>types_8h</filename>
    <member kind="typedef">
      <type>long int</type>
      <name>ssize_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>a725ad8f32fd52878db75ae0efa60c3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>clockid_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>aac50bafb9f9a838df14fab213146caea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>useconds_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>a1cf3c794977f92f3ccf2e041a68f3342</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>timer_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>aa37fa84abebf94371f0c8426c2fc614d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UART.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_u_a_r_t_8h</filename>
    <class kind="struct">UART_Params_</class>
    <class kind="struct">UART_FxnTable_</class>
    <class kind="struct">UART_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga0f5a809e0884da33fef102236eb51644</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga8f35027907fbab6a9ee302d2ee52a879</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_SUCCESS</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga101b7761f89b3ec49f0c6726669acfed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_ERROR</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ae076f4aae13ca8e2aea674207df0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga61125a2eb8059fd8b96ad95edc68ac2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_PEEK</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga942596a37cb2109ae021f88f3d907bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_ISAVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaf5be6db621c5b048637dc93b26797693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_GETRXCOUNT</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga470321cbd9eccf137ffbe6553ae7f35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gad67d01fa376f25bb28141d819647e8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXDISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gac0b19ce2fa9f43d3fe255bcdbd3cda7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_ERROR</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a7e3562e7931cf51b41a32d8109072251</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_WAIT_FOREVER</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ada620b673241eb6335a71e75da291716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UART_Config_ *</type>
      <name>UART_Handle</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ab69886c7119a5054a972d8c735f15928</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_Callback</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5d43bd8997e9153ce790bc81467ec935</anchor>
      <arglist>)(UART_Handle handle, void *buf, size_t count)</arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_Mode_</type>
      <name>UART_Mode</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ae41b00c68f1c34e4e0efc704d912e979</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_ReturnMode_</type>
      <name>UART_ReturnMode</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad7e89f8faac3d6d04a1de1328c77d360</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_DataMode_</type>
      <name>UART_DataMode</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a408e7775f62e5ef3af6be261e54cfe6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_Echo_</type>
      <name>UART_Echo</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a6ad9119f540c4b08fafdec744910944c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_LEN_</type>
      <name>UART_LEN</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1ce6782f5b01eba1a9743624a5679676</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_STOP_</type>
      <name>UART_STOP</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aa703b480e2570985c9b017d55318a744</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_PAR_</type>
      <name>UART_PAR</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a9319492fe8fd31a7ed85e22f3564cbf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UART_Params_</type>
      <name>UART_Params</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aa2500401cd05c08f9a392a921ff9c366</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_CloseFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ae08ff15291bd6b21cb4e2eb1fce164a6</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>UART_ControlFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a583c5e0b34e5806ec225f61d0daed0d6</anchor>
      <arglist>)(UART_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_InitFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a2b3e89df3065fffb47e7354067c14d1b</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>UART_Handle(*</type>
      <name>UART_OpenFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a39e21ac60f24eb9ce32286e21de713d1</anchor>
      <arglist>)(UART_Handle handle, UART_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_ReadFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad1d454c210267a4d04ecce802947633c</anchor>
      <arglist>)(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_ReadPollingFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a96c6ef4189723f6ac960a82e6a232b35</anchor>
      <arglist>)(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_ReadCancelFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aa46296acc2c197a775d44458e1eca197</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_WriteFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aad6b880dc397d9454038b383d6b821c8</anchor>
      <arglist>)(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_WritePollingFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aa6f14597bf561bf987ce6a48dac08076</anchor>
      <arglist>)(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_WriteCancelFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac5a3d974279a2d161746dfbc8ca91774</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UART_FxnTable_</type>
      <name>UART_FxnTable</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad50e0d914874c8fcbc16b451984a8f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UART_Config_</type>
      <name>UART_Config</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a68be81b9ce429a5e5c3ac02d285dbd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_Mode_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5b0b54681a2ee6ed54e5b24f49324173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_MODE_BLOCKING</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5b0b54681a2ee6ed54e5b24f49324173ae6b6bd5d2d5df859ad6724e89e605ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_MODE_CALLBACK</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5b0b54681a2ee6ed54e5b24f49324173ae0dbd9b5195e56c3c2aed10163523754</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_ReturnMode_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>acfee5fbe64f750b1b42701831310c25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_RETURN_FULL</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>acfee5fbe64f750b1b42701831310c25fa50c07cbaf7518a0acd14137e801687e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_RETURN_NEWLINE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>acfee5fbe64f750b1b42701831310c25fa3b8e419e0e12abf80b25f72d17745f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_DataMode_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1dc5f5e884c16722be3b218456f32df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_DATA_BINARY</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1dc5f5e884c16722be3b218456f32df9aaa8edcbf6c236b0d86491ea1e7c9e4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_DATA_TEXT</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1dc5f5e884c16722be3b218456f32df9a87fdfb7ca981eab7f56c51380fd7094e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_Echo_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1f00ece3128a6978d1f4346568d7b83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_ECHO_OFF</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1f00ece3128a6978d1f4346568d7b83ca2b286f182793d4a71bdf99409b9600dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_ECHO_ON</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1f00ece3128a6978d1f4346568d7b83ca6c4d8a2d4e30c22cf9fa45cd1bf79306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_LEN_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a8d08ef9450dc27498f9bd15dad3e7062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_5</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a8d08ef9450dc27498f9bd15dad3e7062a27d04dd1fa818f764eb9b8e849feb7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_6</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a8d08ef9450dc27498f9bd15dad3e7062a5bfd5507335d394d826e560930ce2a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_7</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a8d08ef9450dc27498f9bd15dad3e7062a2ac8467047f55cc1954388bf94c72e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_8</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a8d08ef9450dc27498f9bd15dad3e7062a31abbaaeaa38a5c66fbe13bfc8ece221</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_STOP_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad5747b19c0ead5512c84224a89a26b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_STOP_ONE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad5747b19c0ead5512c84224a89a26b34a9bfa599e95c5da9cfe5f964dab8a9c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_STOP_TWO</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad5747b19c0ead5512c84224a89a26b34a3f41137f3775e7d33fdb250471c0248e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_PAR_</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac9d05230e0702ab72ff2d5b0cb67cfda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_NONE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac9d05230e0702ab72ff2d5b0cb67cfdaa469955a283c95f261990ad07043d5d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_EVEN</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac9d05230e0702ab72ff2d5b0cb67cfdaa5405c8d842bffa2f76999eef9cee32c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_ODD</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac9d05230e0702ab72ff2d5b0cb67cfdaa498f72ae68542763da3072d3e3af6603</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_ZERO</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac9d05230e0702ab72ff2d5b0cb67cfdaadfb9d17fa33753ea5550e757b323bd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_ONE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac9d05230e0702ab72ff2d5b0cb67cfdaa7ab50a9a14f4c614e875fbab74911afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_close</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a6b49b65f3db709c408dc4db23a68895d</anchor>
      <arglist>(UART_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART_control</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5ce79dc51ddc3ef73e8f08983bfee2c7</anchor>
      <arglist>(UART_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_init</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ab60a36f7295d704926120d22f806dcd1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>UART_Handle</type>
      <name>UART_open</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ab6d1d6b7b1f9922484f9b8a0f78ed030</anchor>
      <arglist>(uint_least8_t index, UART_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_Params_init</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a40e5c0823bb7ffd2e8fbf19f9f20b399</anchor>
      <arglist>(UART_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_write</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1036c2d5258ff70e9afe6cbfc326544f</anchor>
      <arglist>(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_writePolling</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad8cda326eb3c05ee05950680bee42e5a</anchor>
      <arglist>(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_writeCancel</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a0482cd0ab9ee7e802c8e785a5754d16d</anchor>
      <arglist>(UART_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_read</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a15d77f489566ff9f7c9c28d25e9a0135</anchor>
      <arglist>(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_readPolling</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a3ac6ed8cfd03b84198ba6adcd8c248e6</anchor>
      <arglist>(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_readCancel</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a51ed7e94d5b409ca1fcb2d65c5a25c3c</anchor>
      <arglist>(UART_Handle handle)</arglist>
    </member>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Overview</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Usage</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Synopsis</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Synopsis_Code</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Examples</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>UARTCC26X0.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/uart/</path>
    <filename>_u_a_r_t_c_c26_x0_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_ring_buf_8h" name="RingBuf.h" local="no" imported="no">ti/drivers/utils/RingBuf.h</includes>
    <class kind="struct">UARTCC26X0_HWAttrs</class>
    <class kind="struct">UARTCC26X0_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_FLOWCTRL_NONE</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a6442124a2f5df8377b16af803bf3e9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_FLOWCTRL_HARDWARE</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a22b02ca55c6ea34fb392e9d3431cff1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga8f1ba957064e0d6bef2033ad5ba8038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga5d75c2021478fc0e7b5d1365d15dc693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_CMD_RX_FIFO_FLUSH</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga053edc1a548000a9bac472d8d25193c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_FIFO_SIZE</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>adad88d5d2f600ac7e789e87071b76d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UARTCC26X0_FifoThreshold</type>
      <name>UARTCC26X0_FifoThreshold</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>aacb2612b6bccacec0db016196b7a59d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UARTCC26X0_ErrorCallback</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a48fe123eff31c217ca350aae01435432</anchor>
      <arglist>)(UART_Handle handle, uint32_t error)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26X0_HWAttrs</type>
      <name>UARTCC26X0_HWAttrs</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a2e9823408d3c08dd9ffd984addde3912</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26X0_Object</type>
      <name>UARTCC26X0_Object</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a6cd23d91138120b956295790f05250ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26X0_Object *</type>
      <name>UARTCC26X0_Handle</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a51119fdf7e0a18956e0837493ddf2e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UARTCC26X0_FifoThreshold</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X0_FIFO_THRESHOLD_DEFAULT</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffeabb87e5422e20b7054f50f42a64db31b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X0_FIFO_THRESHOLD_1_8</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffea3ee034573340fd3de4b076388f7c3c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X0_FIFO_THRESHOLD_2_8</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffeab75de237b3a8b43696fa9b756e7917d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X0_FIFO_THRESHOLD_4_8</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffeac1199aee8b72e68a63a64575b28566af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X0_FIFO_THRESHOLD_6_8</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffea3c4fd4ee9d5243e2e389257a833efde1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X0_FIFO_THRESHOLD_7_8</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a69a39a52094608adf3fe0f589d9c4ffea95053a4e656a1c2f798b8d5fb273e177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UART_FxnTable</type>
      <name>UARTCC26X0_fxnTable</name>
      <anchorfile>_u_a_r_t_c_c26_x0_8h.html</anchorfile>
      <anchor>a531dc08b5cb4064b0ac4ae8969c8e650</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_u_a_r_t_c_c26_x0_8h">UARTCC26X0_POWER_MANAGEMENT</docanchor>
    <docanchor file="_u_a_r_t_c_c26_x0_8h">UARTCC26X0_USE_CASES</docanchor>
    <docanchor file="_u_a_r_t_c_c26_x0_8h">UARTCC26X0_USE_CASE_CB</docanchor>
  </compound>
  <compound kind="file">
    <name>UARTCC26X2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/uart/</path>
    <filename>_u_a_r_t_c_c26_x2_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_ring_buf_8h" name="RingBuf.h" local="no" imported="no">ti/drivers/utils/RingBuf.h</includes>
    <class kind="struct">UARTCC26X2_HWAttrs</class>
    <class kind="struct">UARTCC26X2_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_FLOWCTRL_NONE</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>aa44868ef5d29eb67e1b148cb5c01e53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_FLOWCTRL_HARDWARE</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a309f737b08cfa20f0e31db765920ce9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga9a21e7999f55e4efb146f202337c9381</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaa14c4e92cd925d03a5308ef2885a6fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_CMD_RX_FIFO_FLUSH</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaa8657ba4d475506b57be9c27720d82e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_FIFO_SIZE</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>aeeb9353dfebb693e3bcd1d33153f2826</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UARTCC26X2_FifoThreshold</type>
      <name>UARTCC26X2_FifoThreshold</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a14763435cb0213af4137647770491188</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UARTCC26X2_ErrorCallback</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a2115103e1d5f42427f7e7064bc33bb47</anchor>
      <arglist>)(UART_Handle handle, uint32_t error)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26X2_HWAttrs</type>
      <name>UARTCC26X2_HWAttrs</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a9eb886d5e661b394fae31eef73718f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26X2_Object</type>
      <name>UARTCC26X2_Object</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>af97966e8407c7a450cd719f6bc1f85f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26X2_Object *</type>
      <name>UARTCC26X2_Handle</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a87a9fb70d27e055e05104154aa005ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UARTCC26X2_FifoThreshold</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X2_FIFO_THRESHOLD_DEFAULT</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2aa15d5c2974812d642f8075cd969aebc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X2_FIFO_THRESHOLD_1_8</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2aabf454142de036a9b84a8aa4b34806a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X2_FIFO_THRESHOLD_2_8</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2aaf1da512c742f02d5d3068b0b030939f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X2_FIFO_THRESHOLD_4_8</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2aac458f7c6fa133f9124f56db778b2adc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X2_FIFO_THRESHOLD_6_8</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2aad2f7a83fe94872a2d403f10f7dc580a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26X2_FIFO_THRESHOLD_7_8</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>a324b806f51c06b9e50d2acfdd21c5d2aa758f49ceb6c6175678a2c2b8bd7f9a43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UART_FxnTable</type>
      <name>UARTCC26X2_fxnTable</name>
      <anchorfile>_u_a_r_t_c_c26_x2_8h.html</anchorfile>
      <anchor>ac5ed668954e94caaea6e20fe0cd03caa</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_u_a_r_t_c_c26_x2_8h">UARTCC26X2_POWER_MANAGEMENT</docanchor>
    <docanchor file="_u_a_r_t_c_c26_x2_8h">UARTCC26X2_USE_CASES</docanchor>
    <docanchor file="_u_a_r_t_c_c26_x2_8h">UARTCC26X2_USE_CASE_CB</docanchor>
  </compound>
  <compound kind="file">
    <name>UARTCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/uart/</path>
    <filename>_u_a_r_t_c_c26_x_x_8h</filename>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_p_i_n_c_c26_x_x_8h" name="PINCC26XX.h" local="no" imported="no">ti/drivers/pin/PINCC26XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_ring_buf_8h" name="RingBuf.h" local="no" imported="no">ti/drivers/utils/RingBuf.h</includes>
    <class kind="struct">UARTCC26XX_HWAttrsV2</class>
    <class kind="struct">UARTCC26XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga90f59d674fd3b290c3dd711128413014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga7cc7c1551022a60bd310c79acb6b26b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_CMD_RX_FIFO_FLUSH</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga56280a288223c44c73a5169e957dc078</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_FIFO_SIZE</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa3cbdad922e595319c76870add0d41e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a681da30c89054d687603b864792894f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a973b0815d1f88dc3f3e7191625783b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UARTCC26XX_FifoThreshold</type>
      <name>UARTCC26XX_FifoThreshold</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a4f6508002156ddd5275e97f72be4bb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UARTCC26XX_ErrorCallback</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a56b0e4d1a471775f0565a113d3044e5a</anchor>
      <arglist>)(UART_Handle handle, uint32_t error)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26XX_HWAttrsV2</type>
      <name>UARTCC26XX_HWAttrsV2</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8fdb76e26490beca00f33d3f918ce0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum UART_Status</type>
      <name>UART_Status</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a27818b82da9cf35d1f0f228b1f69b036</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26XX_Object</type>
      <name>UARTCC26XX_Object</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a41437180bc6a286da889dc2aae1c001c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC26XX_Object *</type>
      <name>UARTCC26XX_Handle</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a276d493f1689ad8c16b5cfb4dada194a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UARTCC26XX_FifoThreshold</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26XX_FIFO_THRESHOLD_DEFAULT</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359eca5cdae97dca07ae5549836f8e8aca5f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26XX_FIFO_THRESHOLD_1_8</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359eca56687b40727454fa95ad5cc84cdb7923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26XX_FIFO_THRESHOLD_2_8</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359eca3e7f7ea3a5b698a3638e10a72cacd925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26XX_FIFO_THRESHOLD_4_8</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359eca898b1ad2ec39f31907100f42f5493237</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26XX_FIFO_THRESHOLD_6_8</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359eca68943d4052eefff5fb0cc5a06c7896fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UARTCC26XX_FIFO_THRESHOLD_7_8</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab75ef0309e02ca400617791c3ca359eca51b26faa8beadb87f6fcca1d7ed73a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_Status</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_TIMED_OUT</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4aa965b1df388dcc5c87f1bb51120877c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PARITY_ERROR</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4a505840052f6bf71374b427575c23e929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_BRAKE_ERROR</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4aeadc3b97f933501a079b1f300a92a01a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_OVERRUN_ERROR</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4a261d411fd495e2312aad0c43a01fc050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_FRAMING_ERROR</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4a2e97f20086d32b1d2c9f276351bcc100</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_OK</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>a778bbef5f4b52a5651552136715f53c4a525187963c0aaa465f2a35b30b894d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UART_FxnTable</type>
      <name>UARTCC26XX_fxnTable</name>
      <anchorfile>_u_a_r_t_c_c26_x_x_8h.html</anchorfile>
      <anchor>abd5f1691efe38764c7ef10750e407e5e</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_u_a_r_t_c_c26_x_x_8h">POWER_MANAGEMENT</docanchor>
    <docanchor file="_u_a_r_t_c_c26_x_x_8h">USE_CASES</docanchor>
    <docanchor file="_u_a_r_t_c_c26_x_x_8h">USE_CASE_CB</docanchor>
  </compound>
  <compound kind="file">
    <name>UDMACC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/</path>
    <filename>_u_d_m_a_c_c26_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c26_x_x_8h" name="PowerCC26XX.h" local="no" imported="no">ti/drivers/power/PowerCC26XX.h</includes>
    <class kind="struct">UDMACC26XX_Object</class>
    <class kind="struct">UDMACC26XX_HWAttrs</class>
    <class kind="struct">UDMACC26XX_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>UDMACC26XX_CONFIG_BASE</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>ab956c64f89045e5c6546115ec6062a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UDMACC26XX_SET_TRANSFER_SIZE</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5c7843573980a2380bd0adf65f58a433</anchor>
      <arglist>(SIZE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UDMACC26XX_GET_TRANSFER_SIZE</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>af51cbac1b7f6cc86b9ea0db72426dade</anchor>
      <arglist>(CONTROL)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UDMACC26XX_Object</type>
      <name>UDMACC26XX_Object</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3645577cacce45f1ad3b4879e3ef5afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UDMACC26XX_HWAttrs</type>
      <name>UDMACC26XX_HWAttrs</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>ac9e26a57f30a829b5b2e3174e1df812f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UDMACC26XX_Config</type>
      <name>UDMACC26XX_Config</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a59acc64eb8db50a7a37b44fb4fa5fad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UDMACC26XX_Config *</type>
      <name>UDMACC26XX_Handle</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a969a9feb0f822c4764ef1da2ff5066cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDMACC26XX_hwiIntFxn</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a380c8790a135edeacf0345e59c6cbc29</anchor>
      <arglist>(uintptr_t callbacks)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>UDMACC26XX_init</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a8bb3d9eff25abd3378f9cbc3189440bf</anchor>
      <arglist>(UDMACC26XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>UDMACC26XX_Handle</type>
      <name>UDMACC26XX_open</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>aa7a244c7cfec8551f11ad5d4b5afa0ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>UDMACC26XX_channelEnable</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1eec9bde0731a07b492a9f483b0c554b</anchor>
      <arglist>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE bool</type>
      <name>UDMACC26XX_channelDone</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5725e1db13295ef9096723f2b7c6364c</anchor>
      <arglist>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>UDMACC26XX_clearInterrupt</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1571fcbf7f44fca000fef38d8955eae6</anchor>
      <arglist>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>UDMACC26XX_channelDisable</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a0cd214fa0e13f1ddb1a519a30acfe30c</anchor>
      <arglist>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</arglist>
    </member>
    <member kind="function">
      <type>__STATIC_INLINE void</type>
      <name>UDMACC26XX_disableAttribute</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3118471d8450fd14aaf03f3e1b087a17</anchor>
      <arglist>(UDMACC26XX_Handle handle, uint32_t channelNum, uint32_t attr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDMACC26XX_close</name>
      <anchorfile>_u_d_m_a_c_c26_x_x_8h.html</anchorfile>
      <anchor>a5529a47329f27d70c490c5ed1c1b19f0</anchor>
      <arglist>(UDMACC26XX_Handle handle)</arglist>
    </member>
    <docanchor file="_u_d_m_a_c_c26_x_x_8h">USE_CASE</docanchor>
  </compound>
  <compound kind="file">
    <name>unistd.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/kernel/nortos/posix/</path>
    <filename>unistd_8h</filename>
    <includes id="types_8h" name="types.h" local="yes" imported="no">sys/types.h</includes>
    <member kind="function">
      <type>unsigned</type>
      <name>sleep</name>
      <anchorfile>unistd_8h.html</anchorfile>
      <anchor>ad4669b3813c3b4a616a738317fdc974f</anchor>
      <arglist>(unsigned seconds)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>usleep</name>
      <anchorfile>unistd_8h.html</anchorfile>
      <anchor>a59715f1a0a2ee4dc75e8343aca15c1dd</anchor>
      <arglist>(useconds_t useconds)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Watchdog.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/</path>
    <filename>_watchdog_8h</filename>
    <class kind="struct">Watchdog_Params_</class>
    <class kind="struct">Watchdog_FxnTable_</class>
    <class kind="struct">Watchdog_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_CMD_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga4d1b16e67bf555b8fe49182eb8a28b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaf7d1273929fd4d1f630c31b90def9684</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_SUCCESS</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa8dd490de97398b1da33798d8e54b53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_ERROR</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7cc28c1119ebecae88a5ae0735228489</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga589be79a7f8ce642863f231e1dae7577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNSUPPORTED</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f4ea82c3209f4acc21607ee0e9e053c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Watchdog_Config_ *</type>
      <name>Watchdog_Handle</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab9ae92ba1721e383cedcff2eea73d9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Watchdog_DebugMode_</type>
      <name>Watchdog_DebugMode</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a9e44509e7d94eac768c6f33e6c85e038</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Watchdog_ResetMode_</type>
      <name>Watchdog_ResetMode</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>afb96d6e8d483083ce85f89d67341d866</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_Callback</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a2d201451a10bb67efc3e222ac7f099c1</anchor>
      <arglist>)(uintptr_t handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Watchdog_Params_</type>
      <name>Watchdog_Params</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a24c29fb9023f176ac6b7810ab149e67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_ClearFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a0315c4931ba68423472f47c23c86f296</anchor>
      <arglist>)(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_CloseFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a2d13686bc3dd7fdb05ec97d63be489ee</anchor>
      <arglist>)(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Watchdog_ControlFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>aefe9152c3cd5afd45d7ef61d398169a1</anchor>
      <arglist>)(Watchdog_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_InitFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a6401b1a23d9048efb4ed69a074ea60f9</anchor>
      <arglist>)(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>Watchdog_Handle(*</type>
      <name>Watchdog_OpenFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a05ae778da809a34e4d84c95d35ba5f58</anchor>
      <arglist>)(Watchdog_Handle handle, Watchdog_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Watchdog_SetReloadFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>afced0e92286fe54ad1fe51c496da7a0c</anchor>
      <arglist>)(Watchdog_Handle handle, uint32_t ticks)</arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t(*</type>
      <name>Watchdog_ConvertMsToTicksFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a18910effbe7c123ab85385e9b34ac54f</anchor>
      <arglist>)(Watchdog_Handle handle, uint32_t milliseconds)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Watchdog_FxnTable_</type>
      <name>Watchdog_FxnTable</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>aa8370f2ff642b6a253e37c0b7b44fbed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Watchdog_Config_</type>
      <name>Watchdog_Config</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a7e9f9a94559ff298a7a288a0618bbcf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Watchdog_DebugMode_</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab7cc980c0ab934800cf77f768c2ac5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_DEBUG_STALL_ON</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab7cc980c0ab934800cf77f768c2ac5d6a787c87976091a6f294070dadd1747ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_DEBUG_STALL_OFF</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab7cc980c0ab934800cf77f768c2ac5d6a745be9d89bc0c15eda5c4082020f8bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Watchdog_ResetMode_</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a14a5aaacb2ab91f555ec55e349d9546f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_RESET_OFF</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a14a5aaacb2ab91f555ec55e349d9546fa78ba6b49345f0116143f4d4e7a9ec488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_RESET_ON</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a14a5aaacb2ab91f555ec55e349d9546faafccd6330c396d9ffc2786524625bf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_clear</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a396decd6b1807db10c636f9987c3be4c</anchor>
      <arglist>(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_close</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a1c0dfea7011b06f303d01afb631ffbdd</anchor>
      <arglist>(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Watchdog_control</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a513c121c62f277318a7c35b0b2bdc869</anchor>
      <arglist>(Watchdog_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_init</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>afaadfb59be17661ae95562f2081355e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Watchdog_Handle</type>
      <name>Watchdog_open</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a26795f67f599b74de830ca7bf36bdced</anchor>
      <arglist>(uint_least8_t index, Watchdog_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_Params_init</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a6a6f54cfdac33d3bf33464a212262afc</anchor>
      <arglist>(Watchdog_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Watchdog_setReload</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a63ea82dda83e42e236578b9810e56880</anchor>
      <arglist>(Watchdog_Handle handle, uint32_t ticks)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Watchdog_convertMsToTicks</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a7b93cd0bd3a6f11aa28b0c7219755979</anchor>
      <arglist>(Watchdog_Handle handle, uint32_t milliseconds)</arglist>
    </member>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Overview</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Usage</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Synopsis</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_example_callback</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Examples</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>WatchdogCC26XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-4.20.02.01/exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/watchdog/</path>
    <filename>_watchdog_c_c26_x_x_8h</filename>
    <includes id="_watchdog_8h" name="Watchdog.h" local="no" imported="no">ti/drivers/Watchdog.h</includes>
    <class kind="struct">WatchdogCC26XX_HWAttrs</class>
    <class kind="struct">WatchdogCC26XX_Object</class>
    <member kind="typedef">
      <type>struct WatchdogCC26XX_HWAttrs</type>
      <name>WatchdogCC26XX_HWAttrs</name>
      <anchorfile>_watchdog_c_c26_x_x_8h.html</anchorfile>
      <anchor>a3c5c1fb8e79e0ffbefbc0c6077490157</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct WatchdogCC26XX_Object</type>
      <name>WatchdogCC26XX_Object</name>
      <anchorfile>_watchdog_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1974637ff573d5fb1e141f263ac5361f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Watchdog_FxnTable</type>
      <name>WatchdogCC26XX_fxnTable</name>
      <anchorfile>_watchdog_c_c26_x_x_8h.html</anchorfile>
      <anchor>a1f60b940055d37c5bf8545499e948ca3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_NoRTOS_Config</name>
    <filename>struct___no_r_t_o_s___config.html</filename>
    <member kind="variable">
      <type>void(*</type>
      <name>idleCallback</name>
      <anchorfile>struct___no_r_t_o_s___config.html</anchorfile>
      <anchor>a74d5d90dda12ce20bf02b161d3b034a0</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>clockTickPeriod</name>
      <anchorfile>struct___no_r_t_o_s___config.html</anchorfile>
      <anchor>ab40aceb951cb2960ff7287a4c16f4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>swiIntNum</name>
      <anchorfile>struct___no_r_t_o_s___config.html</anchorfile>
      <anchor>a84176428197106e7fb51c3bf010b6b83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADC_Config</name>
    <filename>struct_a_d_c___config.html</filename>
    <member kind="variable">
      <type>ADC_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_a_d_c___config.html</anchorfile>
      <anchor>a3ca1098e17a4748a0f6dc64382cea00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_d_c___config.html</anchorfile>
      <anchor>acf3784052a071ffab8a3f1dd9b334c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_d_c___config.html</anchorfile>
      <anchor>a485e9d57b2d43a4b7dde68972f88dd2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADC_FxnTable</name>
    <filename>struct_a_d_c___fxn_table.html</filename>
    <member kind="variable">
      <type>ADC_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>ae7aebe8cc8f3493502e3dceecb688c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>af92f7867301c8edd125436ca66e16877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_ConvertFxn</type>
      <name>convertFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>ac7255105d1eca815a45714ff0d2186cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_ConvertToMicroVoltsFxn</type>
      <name>convertToMicroVolts</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>a35a09bfb36dd7b17a419a34ed0ac76ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>a5b2882d28b0e4a8c8d7bb2ed741380e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>aa74579528b7be192281bf5c23e6dcf03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADC_Params</name>
    <filename>struct_a_d_c___params.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_d_c___params.html</anchorfile>
      <anchor>a62c67d0ad10066d4e30e67d648937a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isProtected</name>
      <anchorfile>struct_a_d_c___params.html</anchorfile>
      <anchor>afcfab4dda63383c2dcf0bb21fe519c53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBuf_Config</name>
    <filename>struct_a_d_c_buf___config.html</filename>
    <member kind="variable">
      <type>const ADCBuf_FxnTable *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_a_d_c_buf___config.html</anchorfile>
      <anchor>a473ad7e4d4c1d2ad9c4e96768447f6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_d_c_buf___config.html</anchorfile>
      <anchor>a07b5e2c4dd87d3356c825f51aacb496a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_d_c_buf___config.html</anchorfile>
      <anchor>addb6e02b3b790b7123af2d7b7d1a1cf1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBuf_Conversion</name>
    <filename>struct_a_d_c_buf___conversion.html</filename>
    <member kind="variable">
      <type>uint16_t</type>
      <name>samplesRequestedCount</name>
      <anchorfile>struct_a_d_c_buf___conversion.html</anchorfile>
      <anchor>afd95c203d1e7dd347102eef22dc9cc93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>sampleBuffer</name>
      <anchorfile>struct_a_d_c_buf___conversion.html</anchorfile>
      <anchor>a5415e58a69e40124f66cdcc52a097c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>sampleBufferTwo</name>
      <anchorfile>struct_a_d_c_buf___conversion.html</anchorfile>
      <anchor>a6953e200ba2e5a85b9197bdaeb101a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_a_d_c_buf___conversion.html</anchorfile>
      <anchor>a47080bd2e4d552858be60f6e25be58dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>adcChannel</name>
      <anchorfile>struct_a_d_c_buf___conversion.html</anchorfile>
      <anchor>a379de126469bdd35de64c36498fafb51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBuf_FxnTable</name>
    <filename>struct_a_d_c_buf___fxn_table.html</filename>
    <member kind="variable">
      <type>ADCBuf_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>a443b411e8c7e9873f34c2f827a07fc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>a89ea3261a27de9bfa94ba4299d0f6082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>aa7616fc3e78d72a3836b08f11632ac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>adc31e28a3c2270c8159c5fb88ce14167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_ConvertFxn</type>
      <name>convertFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>af242d84a8ec0284b071b7ec14f77f54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_ConvertCancelFxn</type>
      <name>convertCancelFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>a2803deeb90c108c539a340d711c51351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_GetResolutionFxn</type>
      <name>getResolutionFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>ac351196231c2ee97db44d1fa6410f3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_adjustRawValuesFxn</type>
      <name>adjustRawValuesFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>a0b80725420ba691dc6a20505fcdf5522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_convertAdjustedToMicroVoltsFxn</type>
      <name>convertAdjustedToMicroVoltsFxn</name>
      <anchorfile>struct_a_d_c_buf___fxn_table.html</anchorfile>
      <anchor>a01e865f5a1ce7cbd748f05b16b87a39d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBuf_Params</name>
    <filename>struct_a_d_c_buf___params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>blockingTimeout</name>
      <anchorfile>struct_a_d_c_buf___params.html</anchorfile>
      <anchor>a3c3b5dab517e5d6bdc6dd68bda1e88d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplingFrequency</name>
      <anchorfile>struct_a_d_c_buf___params.html</anchorfile>
      <anchor>ad2ca9d85a9379652a86ea9235e4bec82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Return_Mode</type>
      <name>returnMode</name>
      <anchorfile>struct_a_d_c_buf___params.html</anchorfile>
      <anchor>a17b3cdab5de5cfb81854b86f0cfc0ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Callback</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_d_c_buf___params.html</anchorfile>
      <anchor>a29f674ee9b6739607119d6b50f244e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Recurrence_Mode</type>
      <name>recurrenceMode</name>
      <anchorfile>struct_a_d_c_buf___params.html</anchorfile>
      <anchor>a559d4f3324bdbee8f6b6140a6d7264fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_d_c_buf___params.html</anchorfile>
      <anchor>a72c7ec51318ec2f8fcf5d2ff37de33e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26X2_AdcChannelLutEntry</name>
    <filename>struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>dio</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry.html</anchorfile>
      <anchor>ac4b8005dfe55c712a92b7bfd1370b675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>compBInput</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___adc_channel_lut_entry.html</anchorfile>
      <anchor>a9c364643ec0f2d785b9214cb5d6c4909</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26X2_HWAttrs</name>
    <filename>struct_a_d_c_buf_c_c26_x2___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a84d68446ab54c3da17a7e16fbfd2c5be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a71c82bba7c50caf1c5fea571ab8ab384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26X2_AdcChannelLutEntry const  *</type>
      <name>adcChannelLut</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a4b24548fe90f51468e4ac21e2bbb7739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>gpTimerUnit</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>afc92a2facf144438fc988185c0f3ea46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26X2_Object</name>
    <filename>struct_a_d_c_buf_c_c26_x2___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>ab0025fa5de0affaf88be29bafc47969c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>conversionInProgress</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a577757b64402aaefb355f862b82ec45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inputScalingEnabled</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a6054814a2a3e3d874980a499b4ce6fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>keepADCSemaphore</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a46471d17570d38a574d487d5d2cdbef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>adcSemaphoreInPossession</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a6dcc0aa67ced4f38e74b08f572a179b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>currentChannel</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a1eab22e7b037c1747451ab2f781eee12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26X2_Reference_Source</type>
      <name>refSource</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>ab25ac9dcb5df71a7d3aed2e1c7ddba3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26X2_Sampling_Mode</type>
      <name>samplingMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>ab3e94ff710ae121d8232b148207ba5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26X2_Sampling_Duration</type>
      <name>samplingDuration</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>aefd799b29bcced4bd28834460147e778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Callback</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a76a2cf12d79f1c002fe3ec80df43ba4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Recurrence_Mode</type>
      <name>recurrenceMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>afd7bbb3490032e43b75eb9a1c265619b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Return_Mode</type>
      <name>returnMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>ad3f6938b01e8dae714fd8f31ce451df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t *</type>
      <name>activeSampleBuffer</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>acc76d50ef598bd2cd2bdc35f9d6bfb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a8a29fed154f97f2bfde082d1c1b55c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>swi</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a73efaf103a59e0eb0517685f448bf97b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>conversionComplete</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a6fa666bd1534470f740d72efe9b83851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Conversion *</type>
      <name>currentConversion</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a53d35750ae50fc4419d70c95c1ea485e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>ac1aeccdf919be469a3cf1669462589eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a2257db99dafa51a69f66fe02a2c9728e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC26XX_Handle</type>
      <name>udmaHandle</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a7658b10626a720cdf9aeaeab23c869e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Handle</type>
      <name>timerHandle</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a1031e2cc45af30d1db1ab07438f5a72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>adde8557507aee84d313d4d2d7e51a495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplingFrequency</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___object.html</anchorfile>
      <anchor>a4ae6cde0eda8b9cdd777f3454fe3516a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26X2_ParamsExtension</name>
    <filename>struct_a_d_c_buf_c_c26_x2___params_extension.html</filename>
    <member kind="variable">
      <type>ADCBufCC26X2_Sampling_Duration</type>
      <name>samplingDuration</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___params_extension.html</anchorfile>
      <anchor>a99dff88970f0f740f3a8e3954b5ec9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26X2_Sampling_Mode</type>
      <name>samplingMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___params_extension.html</anchorfile>
      <anchor>a89e72a1be7acd6e49d15cc1bdfa9118c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26X2_Reference_Source</type>
      <name>refSource</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___params_extension.html</anchorfile>
      <anchor>a2cb19f2b44f9ec65ea0f9bdb4696a962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inputScalingEnabled</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x2___params_extension.html</anchorfile>
      <anchor>a3328f3f34f211c5a2bdc81048ac602e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26XX_AdcChannelLutEntry</name>
    <filename>struct_a_d_c_buf_c_c26_x_x___adc_channel_lut_entry.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>dio</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___adc_channel_lut_entry.html</anchorfile>
      <anchor>a3b714f5a5ebc9e74dbab4157fbba1224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>compBInput</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___adc_channel_lut_entry.html</anchorfile>
      <anchor>a19d95582232ec92376195e302f7263b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26XX_HWAttrs</name>
    <filename>struct_a_d_c_buf_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a28c09f6a57b37133bd331c59f0b7e9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a8f26b88e0b885debb7659c20f719dce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26XX_AdcChannelLutEntry const  *</type>
      <name>adcChannelLut</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>ad157d7e25bef35c76f3ae92bd912b109</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26XX_Object</name>
    <filename>struct_a_d_c_buf_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a1bf829277faa9736e5be4f0d87f0bcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>conversionInProgress</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a5f8b6f2676024eedcc7e9a8179088c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inputScalingEnabled</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>aba2a0b51386853802f9d9bf9edb07c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>keepADCSemaphore</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a69752da5d0adc5ee7fd021b1eea0c707</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>adcSemaphoreInPossession</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>aab19a1003d92358ddbf444bbc9c3e36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>currentChannel</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>ad1e14f148db3baabbac7644e77e00ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26XX_Reference_Source</type>
      <name>refSource</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a29b696a02137128f84aac8a3fa60fb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26XX_Sampling_Mode</type>
      <name>samplingMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>af70f09e989b6c8df42119ac36ad41b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26XX_Sampling_Duration</type>
      <name>samplingDuration</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>af37e3b1c0eeb86c35997a244baf0cf2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Callback</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>af0c5372ecade25efaff87f09c1088f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Recurrence_Mode</type>
      <name>recurrenceMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>acdb55bda8b02fca3fa51f7ebfae6c42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Return_Mode</type>
      <name>returnMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>afce391d0185d4c1cf19c912d966b2aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t *</type>
      <name>activeSampleBuffer</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>af1e600b309d1236090a985478b762f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a9a8add1c5a9198a211f04915bd50d31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>swi</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a60ac28b0936e3e2a0cede1caff429aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>conversionComplete</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a523650e7a812428044e77641edeed9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBuf_Conversion *</type>
      <name>currentConversion</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>ad7c49d6cc5ccdc3ac08f69c5468d016e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>ac383c8ebc0de85d10e61125268f71ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a8c097d6aef35ff404e9db5914dd775cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC26XX_Handle</type>
      <name>udmaHandle</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>aa443c3cbecab5f1d0787baa0edb0c77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Handle</type>
      <name>timerHandle</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a90a6c596f446cb114269aceaab4c5a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>a54deeefa0f97ca725d4234b7d8923721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplingFrequency</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___object.html</anchorfile>
      <anchor>aa48daa7926823e87e732ea2bc4e70911</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCBufCC26XX_ParamsExtension</name>
    <filename>struct_a_d_c_buf_c_c26_x_x___params_extension.html</filename>
    <member kind="variable">
      <type>ADCBufCC26XX_Sampling_Duration</type>
      <name>samplingDuration</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___params_extension.html</anchorfile>
      <anchor>a13ae8ecf30cf89b0961f1c0dae0f8fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26XX_Sampling_Mode</type>
      <name>samplingMode</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___params_extension.html</anchorfile>
      <anchor>af857a78cd52526e581e82d154793a221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCBufCC26XX_Reference_Source</type>
      <name>refSource</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___params_extension.html</anchorfile>
      <anchor>ac969cbedfed803be061feb5c82d58c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inputScalingEnabled</name>
      <anchorfile>struct_a_d_c_buf_c_c26_x_x___params_extension.html</anchorfile>
      <anchor>a2fc973ed16c05717691222fe517691a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCCC26XX_HWAttrs</name>
    <filename>struct_a_d_c_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>adcDIO</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>abaf21f30d8f493f6a8ae728c56f9f500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>adcCompBInput</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a71b2b8a0d611140021e0c4eff2135598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>returnAdjustedVal</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>ac48647bbcf0573200c1909ff68257e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inputScalingEnabled</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a9f4b33496c6c0879809fccfc4914e95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCCC26XX_Reference_Source</type>
      <name>refSource</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a49aac5c605e70776345e489a270dc45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCCC26XX_Sampling_Duration</type>
      <name>samplingDuration</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a3a2bdb16efd6a7b9cd8bc32bea0cf3f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADCCC26XX_Trigger_Source</type>
      <name>triggerSource</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a0951f527dea50a156570e1a3055db84c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCCC26XX_Object</name>
    <filename>struct_a_d_c_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a1cdfdc98a89833d7b4631aecadb755d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___object.html</anchorfile>
      <anchor>ae95f4f01036f8a612134521372c767c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a6783122cf267cb0353e6ca9f519cdbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isProtected</name>
      <anchorfile>struct_a_d_c_c_c26_x_x___object.html</anchorfile>
      <anchor>ad4ba613e4bb4c308046385069649380a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCBC_Config</name>
    <filename>struct_a_e_s_c_b_c___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_e_s_c_b_c___config.html</anchorfile>
      <anchor>a80a3cdb03eb1bbd04273abefaffe0c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_e_s_c_b_c___config.html</anchorfile>
      <anchor>ae079f2fc355bbca7dc2cf6c47f66cd3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCBC_Operation</name>
    <filename>struct_a_e_s_c_b_c___operation.html</filename>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>key</name>
      <anchorfile>struct_a_e_s_c_b_c___operation.html</anchorfile>
      <anchor>a0d0a4299e1bff86bd70bb4d50b691a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>input</name>
      <anchorfile>struct_a_e_s_c_b_c___operation.html</anchorfile>
      <anchor>adb06acd6f9abfc0f8e5890feb3b26bf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>output</name>
      <anchorfile>struct_a_e_s_c_b_c___operation.html</anchorfile>
      <anchor>afb4b5174ff462e15e5e8be5d672edb4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>iv</name>
      <anchorfile>struct_a_e_s_c_b_c___operation.html</anchorfile>
      <anchor>a651c29ac1166f551962cd94d182c9989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>inputLength</name>
      <anchorfile>struct_a_e_s_c_b_c___operation.html</anchorfile>
      <anchor>a66a33691b3c55b3f295bb34509ee4231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ivInternallyGenerated</name>
      <anchorfile>struct_a_e_s_c_b_c___operation.html</anchorfile>
      <anchor>abe47ece92cf0e6f726226063d842168a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCBC_Params</name>
    <filename>struct_a_e_s_c_b_c___params.html</filename>
    <member kind="variable">
      <type>AESCBC_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_b_c___params.html</anchorfile>
      <anchor>aaf9f67c02267e03a5ffbc5ccb4e7580a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCBC_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_c_b_c___params.html</anchorfile>
      <anchor>a57b3ac8537584ca0bc3ed743792df321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_a_e_s_c_b_c___params.html</anchorfile>
      <anchor>a9d78b09aba375e0e6a3416c4166374e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_e_s_c_b_c___params.html</anchorfile>
      <anchor>a9a933064fd7fd7484d922654bf79278f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCBCCC26XX_HWAttrs</name>
    <filename>struct_a_e_s_c_b_c_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>aec507c223ba0a64b5895021f7f6fc150</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCBCCC26XX_Object</name>
    <filename>struct_a_e_s_c_b_c_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a76509ccab8df40cb3392437082e08e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a691fa05fe81dfcfab3c2555dab66d319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a55e89f5ba780d6519e88a7d05a97eade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>threadSafe</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>ab0894dcbdf6a1aaca2256a895dffda5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a8607879848fda86547631f8c2a7d3667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCBC_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a79531777ee9f3383514d3e3f28e59f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCBC_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>ab1bd32aa52c623b48b6b7252877b2e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a0b5513552a5615692f2d51d549e9d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCBC_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a0770bfe77b2926bfd3fb6787e10fb263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCBC_Operation *</type>
      <name>operation</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>a3350ba12b0e9969307419899b2773e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>iv</name>
      <anchorfile>struct_a_e_s_c_b_c_c_c26_x_x___object.html</anchorfile>
      <anchor>ad334fcc3c8b49162a399d1625f93de8f</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCCM_Config</name>
    <filename>struct_a_e_s_c_c_m___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_e_s_c_c_m___config.html</anchorfile>
      <anchor>a46baedd48855bc3d5c41a8cc83aad637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_e_s_c_c_m___config.html</anchorfile>
      <anchor>aa1931f1628df33b82defd89d3d965c2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCCM_Operation</name>
    <filename>struct_a_e_s_c_c_m___operation.html</filename>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>key</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a768ccaa0a53a60627ee966ef7297b5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>aad</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a5b683823675f809f71a3a5825728c3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>input</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a126f02bba56a1e52bd2a8c841fde563a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>output</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>ad22219890803f5c7e1a6af7d5441b576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>nonce</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>ab5cf586481ad982ceef93664d8c64bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>mac</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a02d4b4cb6a7e629843358cd26db6941c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>aadLength</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a64efe5d1b75e54adae4244b93c41243a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>inputLength</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a15ccf91b8877d67b6257c71549f18aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>nonceLength</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>adc9fd0dd9eda9d68125a8f7b45474bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>macLength</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>affc3aad4fad59f0407172af550a00d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>nonceInternallyGenerated</name>
      <anchorfile>struct_a_e_s_c_c_m___operation.html</anchorfile>
      <anchor>a73ebf8c25ae4b1c6f4d543b569801f23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCCM_Params</name>
    <filename>struct_a_e_s_c_c_m___params.html</filename>
    <member kind="variable">
      <type>AESCCM_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_c_m___params.html</anchorfile>
      <anchor>af69e42bceb41b56c193e380fb9c0372e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCCM_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_c_c_m___params.html</anchorfile>
      <anchor>a91e1da388f2a419951fa6007a1466a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_a_e_s_c_c_m___params.html</anchorfile>
      <anchor>ac133664c1c80a69d856e7b13682fe698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_e_s_c_c_m___params.html</anchorfile>
      <anchor>a7b3f3acc4aafd5f7fada1bd18a25f968</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCCMCC26XX_HWAttrs</name>
    <filename>struct_a_e_s_c_c_m_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a11d7a7eefe052fa2d1dc980a9083dd01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCCMCC26XX_Object</name>
    <filename>struct_a_e_s_c_c_m_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a0babd57e4df1bdcf8bf238895677b25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a0ef84196bc2954626151ca079074c124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a7bb9f85c50ed8873c86c42db6e1bc5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a515a48db4ee4e667f2dec8ad01146029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCCM_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>aa314f2384963fb722b49b104efe54c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCCM_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a60f6f20f51437635969a62ceab56d2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>af4052146f47324e6b6121febbe146c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCCM_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a8c819ccf3de9f8722b39cd8b51fdfccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCCM_Operation *</type>
      <name>operation</name>
      <anchorfile>struct_a_e_s_c_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>aa1cc12ccc3d97dd592f5ad1011cd92c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTR_Config</name>
    <filename>struct_a_e_s_c_t_r___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_e_s_c_t_r___config.html</anchorfile>
      <anchor>afd30a06febf654d00cc09f999c22b1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_e_s_c_t_r___config.html</anchorfile>
      <anchor>a6fc820d3eaca136895cbe489aa04133f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTR_Operation</name>
    <filename>struct_a_e_s_c_t_r___operation.html</filename>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>key</name>
      <anchorfile>struct_a_e_s_c_t_r___operation.html</anchorfile>
      <anchor>a5c492c25815d6adbcba8669ce42add11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>input</name>
      <anchorfile>struct_a_e_s_c_t_r___operation.html</anchorfile>
      <anchor>a2314b6f85f4fcfa7f8e30b8dfa946dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>output</name>
      <anchorfile>struct_a_e_s_c_t_r___operation.html</anchorfile>
      <anchor>a0e44b6efb02aa1b0d3e9d1277f04732a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>initialCounter</name>
      <anchorfile>struct_a_e_s_c_t_r___operation.html</anchorfile>
      <anchor>a6873831e48820c92a6e0369e069f8dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>inputLength</name>
      <anchorfile>struct_a_e_s_c_t_r___operation.html</anchorfile>
      <anchor>afa87f113876a0a90cf2645d3a3048157</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTR_Params</name>
    <filename>struct_a_e_s_c_t_r___params.html</filename>
    <member kind="variable">
      <type>AESCTR_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_t_r___params.html</anchorfile>
      <anchor>ac930590eb152c4f26d680430ed1d6011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTR_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_c_t_r___params.html</anchorfile>
      <anchor>a76253d2ea50257d85f829222dc4aaaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_a_e_s_c_t_r___params.html</anchorfile>
      <anchor>afb9a73ad258ff2043be344c05cacb16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_e_s_c_t_r___params.html</anchorfile>
      <anchor>a04431100c1fdbe0da28240c403b0f00b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTRCC26XX_HWAttrs</name>
    <filename>struct_a_e_s_c_t_r_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>afa933c2dedc35c3a254351c11aa39cd3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTRCC26XX_Object</name>
    <filename>struct_a_e_s_c_t_r_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a14802a0f7015460f3db5b3cdb571db18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a711a86eeeb2ea1eb8963583e71c104e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a9d2b27a36babd3f55f4b149839f49113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>threadSafe</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a4844408302b2b3cf5c014f58ae517d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a3fc3d1a24692f00e87a19621a67c323e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTR_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>af85690faa0ed9d6976b353eb3ba457fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTR_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>af3ce0454dedf598be5efe3c2db7b843d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a8ad010e6ec68601fd3f31472f42c3bd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTR_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a7238ce376b169d5096e40195235c9262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTR_Operation *</type>
      <name>operation</name>
      <anchorfile>struct_a_e_s_c_t_r_c_c26_x_x___object.html</anchorfile>
      <anchor>a8d44a3a27c1ae2b096ffb1c89c580309</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTRDRBG_Config</name>
    <filename>struct_a_e_s_c_t_r_d_r_b_g___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___config.html</anchorfile>
      <anchor>a9c71a63de1321ea9718192ffb49a0824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___config.html</anchorfile>
      <anchor>a1e67079ee1eeb600d7667338edbf6c02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTRDRBG_Params</name>
    <filename>struct_a_e_s_c_t_r_d_r_b_g___params.html</filename>
    <member kind="variable">
      <type>AESCTRDRBG_AES_KEY_LENGTH</type>
      <name>keyLength</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>a933574dd0662ea1078017337d5f98e8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>reseedInterval</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>abea8271dcbb8e8c984535b55ae637625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const void *</type>
      <name>seed</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>ae81a68d26b43be6beb02292bd2a46268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const void *</type>
      <name>personalizationData</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>adf042602669b2b22e52ceee6e3fa3f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>personalizationDataLength</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>a18912b6d086a150ecc1f50b8ec1f1002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTRDRBG_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>a83764504660fc4050f0ed375a52a6468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g___params.html</anchorfile>
      <anchor>a9aac3d0b9729da065a5bd9d4421c1f9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTRDRBGXX_HWAttrs</name>
    <filename>struct_a_e_s_c_t_r_d_r_b_g_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>aesctrIndex</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___h_w_attrs.html</anchorfile>
      <anchor>a32eebfb8405bc967be9daae46af1fdf8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESCTRDRBGXX_Object</name>
    <filename>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>keyingMaterial</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a3d5e139c75aa7afb24bec4c77e8db299</anchor>
      <arglist>[AESCTRDRBG_AES_KEY_LENGTH_256]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>counter</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a15ae93c83f64d7328dc3eba547461d06</anchor>
      <arglist>[AESCTRDRBG_AES_BLOCK_SIZE_BYTES]</arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey</type>
      <name>key</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a35cdc9eecd6556a9ee914525b224187f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESCTR_Handle</type>
      <name>ctrHandle</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a586508ea4e7e45babb3a920ef296532d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>seedLength</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a73c2de7abcde310ef1ec150bcb0dc795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>reseedCounter</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>ade780815883ec6f03a7af0a12841ffef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>reseedInterval</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a03bd79e63eb929caee767c42908c0f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a839e8a775e9949c12fc01e95078fc12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_e_s_c_t_r_d_r_b_g_x_x___object.html</anchorfile>
      <anchor>a3ca16fe855e2b710954ef044b1ed4008</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESECB_Config</name>
    <filename>struct_a_e_s_e_c_b___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_e_s_e_c_b___config.html</anchorfile>
      <anchor>aa78326b0c81ee153c28fbb2e0373f7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_e_s_e_c_b___config.html</anchorfile>
      <anchor>a861e05daf7efe0f93ba7487087f5cf23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESECB_Operation</name>
    <filename>struct_a_e_s_e_c_b___operation.html</filename>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>key</name>
      <anchorfile>struct_a_e_s_e_c_b___operation.html</anchorfile>
      <anchor>a258415f93c83d15a98a5ec5c3feae99a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>input</name>
      <anchorfile>struct_a_e_s_e_c_b___operation.html</anchorfile>
      <anchor>a9fb8baa5286ec0170a59f3bed4711d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>output</name>
      <anchorfile>struct_a_e_s_e_c_b___operation.html</anchorfile>
      <anchor>a595df29ab261c730d9b754d6094d2cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>inputLength</name>
      <anchorfile>struct_a_e_s_e_c_b___operation.html</anchorfile>
      <anchor>a0e9b331f9e5717b30d7f1c1ab5f6e5eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESECB_Params</name>
    <filename>struct_a_e_s_e_c_b___params.html</filename>
    <member kind="variable">
      <type>AESECB_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_e_c_b___params.html</anchorfile>
      <anchor>ad6c435bf9cf2abb95843e6f9ea5cc2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESECB_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_e_c_b___params.html</anchorfile>
      <anchor>accb51f8c4fe514c37e5b52e2479419b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_a_e_s_e_c_b___params.html</anchorfile>
      <anchor>a19e205228e80eb89aa08dbb19a2644cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_e_s_e_c_b___params.html</anchorfile>
      <anchor>aecdbb22a75145d86508eb3550c021ffb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESECBCC26XX_HWAttrs</name>
    <filename>struct_a_e_s_e_c_b_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>aa9a826e645554a48c1e35b478a052ef0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESECBCC26XX_Object</name>
    <filename>struct_a_e_s_e_c_b_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a44bdf56b7a908b34aa278820681876a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>abc00f309e29f7c710938fad867d77e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a661326fcab6c684554978a428990a184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>threadSafe</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a0deddd68b800e44d9331f6d9452d80a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a17d1402fbf68a695521aee005b62b6d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESECB_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a9fa0254803e632eae0ba4606ae871c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESECB_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a19a9ff49ff78fb0b516e620c6809265f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a8240228ab40e6e5e5ab978fc38581609</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESECB_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>a9718a062c24c8729fd96c49d0c6c1673</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESECB_Operation *</type>
      <name>operation</name>
      <anchorfile>struct_a_e_s_e_c_b_c_c26_x_x___object.html</anchorfile>
      <anchor>abe45ec9a295626810c949681d539b802</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESGCM_Config</name>
    <filename>struct_a_e_s_g_c_m___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_e_s_g_c_m___config.html</anchorfile>
      <anchor>af301ca85c927167aea8158974376ecdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_e_s_g_c_m___config.html</anchorfile>
      <anchor>af583f97a085187e114d852f40d50fbda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESGCM_Operation</name>
    <filename>struct_a_e_s_g_c_m___operation.html</filename>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>key</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>a4ecc3af41ed6eac831fc2f7a4090cd72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>aad</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>ad471ab2346e95155f4beafe196c43116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>input</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>acd270903c1f5d2cfffb2ae2d116b3baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>output</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>aaeded7526527c1d5ea01df253d399690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>iv</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>a3f053b2ba61da4a797c9c0ec2753afac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>mac</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>a3c6347ede5b695cce9000e76df339cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>aadLength</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>a5ea51bffd512fce037617946dd45474d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>inputLength</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>abd63a7b0e99724ce1a1ff018ce588efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ivLength</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>af469718e7141bfac1b83858a57b4d254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>macLength</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>a81296a660e12220729f7367a4c732271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ivInternallyGenerated</name>
      <anchorfile>struct_a_e_s_g_c_m___operation.html</anchorfile>
      <anchor>aa719d1e49c2eb974aa14b7cda6367c43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESGCM_Params</name>
    <filename>struct_a_e_s_g_c_m___params.html</filename>
    <member kind="variable">
      <type>AESGCM_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_g_c_m___params.html</anchorfile>
      <anchor>ae12dbb42e2935088aae1d3e270221a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESGCM_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_g_c_m___params.html</anchorfile>
      <anchor>af71c89b1c7a6c4778792a74eef52d246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_a_e_s_g_c_m___params.html</anchorfile>
      <anchor>ad01a2385e44acbdb7b91ec5546921232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_e_s_g_c_m___params.html</anchorfile>
      <anchor>ac3aee9a5869a33e8c31ed6fd1495e6e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESGCMCC26XX_HWAttrs</name>
    <filename>struct_a_e_s_g_c_m_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a6cbff6af0cca5348b0aae29385a774f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AESGCMCC26XX_Object</name>
    <filename>struct_a_e_s_g_c_m_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a820a70394ef69a254ab1a8e72108e77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>af9cfcc14bc483e1c0f37692244bc2a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>af4137ba8f12d552f452ca72be03fb298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a0eb24810946355951b2758c5af5b5ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESGCM_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a4c198a0494706a6701a92917af81f098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESGCM_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>af00a8025b178719d000697e1b229e7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a567acebce12a8f713a252ae7946d918d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESGCM_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>aac03af77a4b42a9c54f9802286af4b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AESGCM_Operation *</type>
      <name>operation</name>
      <anchorfile>struct_a_e_s_g_c_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a38a87bcebd59fd501f797972ce1ff9cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_AESCBC_Transaction</name>
    <filename>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</filename>
    <member kind="variable">
      <type>CryptoCC26XX_Operation</type>
      <name>opType</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>a8ce1bb7d63d53cfdb808dc618261aa3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC26XX_Mode</type>
      <name>mode</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>a631a21077687d9d59f6ebf898352ca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>keyIndex</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>aa1f3d996c876bf337c30691b489c3846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>nonce</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>aff49cae78d6aeda8c9b8ebda71b14c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>msgIn</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>aa0a4fe432e28db115802ec35b727cf29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>msgOut</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>a5d5bf062f401cc3d1ee0c1e590896184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>msgInLength</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_b_c___transaction.html</anchorfile>
      <anchor>adb2b7d2558d9c979b8983c4c4c0c60d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_AESCCM_Transaction</name>
    <filename>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</filename>
    <member kind="variable">
      <type>CryptoCC26XX_Operation</type>
      <name>opType</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>a290d9a7869443690836e17e2540fc369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC26XX_Mode</type>
      <name>mode</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>a47c6078be481486d0dda9a9ab2685d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>keyIndex</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>af0eb856eb89478eef0d83a61e52ad435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>authLength</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>ae543053e1c5906db60e8566764e74b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>nonce</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>afad21bc3309b0689f288a8ee27e7a166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>msgIn</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>af14be4d0036174b871b733437fd38361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>header</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>ab0fd5775305de978e833c66bc7e29c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>msgOut</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>a75508e70a56c297c0bc4351cd586bfdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>fieldLength</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>a8d848bfae83f3b16e8d3a7e83a1c5694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>msgInLength</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>aa29e2771fcf7967303c7a761e23630fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>headerLength</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_c_c_m___transaction.html</anchorfile>
      <anchor>a28e4d04c356e342908588e19011a0e5d</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_crypto_c_c26_x_x_8h">CryptoCC26XX_multi_row</docanchor>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_AESECB_Transaction</name>
    <filename>struct_crypto_c_c26_x_x___a_e_s_e_c_b___transaction.html</filename>
    <member kind="variable">
      <type>CryptoCC26XX_Operation</type>
      <name>opType</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_e_c_b___transaction.html</anchorfile>
      <anchor>a538da4d16f0d7e5fdb2bf3f97bfa81be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC26XX_Mode</type>
      <name>mode</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_e_c_b___transaction.html</anchorfile>
      <anchor>a9dafb34e220b2dfe0ac118df2afc0ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>keyIndex</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_e_c_b___transaction.html</anchorfile>
      <anchor>a1e144214803cec502698401343c830a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>msgIn</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_e_c_b___transaction.html</anchorfile>
      <anchor>ac63701080bffd789b53c7effcf46cfe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>msgOut</name>
      <anchorfile>struct_crypto_c_c26_x_x___a_e_s_e_c_b___transaction.html</anchorfile>
      <anchor>ab5c3bff547308f1a63c771349cbef069</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_Config</name>
    <filename>struct_crypto_c_c26_x_x___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_crypto_c_c26_x_x___config.html</anchorfile>
      <anchor>a11efc6993566cb9306ecb09abe42db5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_crypto_c_c26_x_x___config.html</anchorfile>
      <anchor>a204edbf9c5427a6c48b6dec37970c4fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_HWAttrs</name>
    <filename>struct_crypto_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_crypto_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a8a6e2dbc65c24f641941ebe3c854e961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>powerMngrId</name>
      <anchorfile>struct_crypto_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>ac5c27633092355d3606d6d0b240b2091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intNum</name>
      <anchorfile>struct_crypto_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a63cdd84637d1e9acca0315cd96d9891b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_crypto_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>af5d64e44258b27d68b380085544ab71f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_Object</name>
    <filename>struct_crypto_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>openCnt</name>
      <anchorfile>struct_crypto_c_c26_x_x___object.html</anchorfile>
      <anchor>aed6ed8c1a1fb38542f0a66bac8b207d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_crypto_c_c26_x_x___object.html</anchorfile>
      <anchor>a7bf2c514e22988c397d2b49e5a7be53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC26XX_KeyStore</type>
      <name>keyStore</name>
      <anchorfile>struct_crypto_c_c26_x_x___object.html</anchorfile>
      <anchor>a73d676dd4ff0815b55058c15c6315bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC26XX_Transaction *</type>
      <name>currentTransact</name>
      <anchorfile>struct_crypto_c_c26_x_x___object.html</anchorfile>
      <anchor>a6ebc5fa5ae8455db12e9a01b34a75dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_crypto_c_c26_x_x___object.html</anchorfile>
      <anchor>a141b9a34345818955a399560366f7d6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_Params</name>
    <filename>struct_crypto_c_c26_x_x___params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_crypto_c_c26_x_x___params.html</anchorfile>
      <anchor>a0a0722be7543d9ff4de0c1107357758c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC26XX_Transaction</name>
    <filename>struct_crypto_c_c26_x_x___transaction.html</filename>
    <member kind="variable">
      <type>CryptoCC26XX_Operation</type>
      <name>opType</name>
      <anchorfile>struct_crypto_c_c26_x_x___transaction.html</anchorfile>
      <anchor>a40fe1424c6534f76622ff56ed4f2ab42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC26XX_Mode</type>
      <name>mode</name>
      <anchorfile>struct_crypto_c_c26_x_x___transaction.html</anchorfile>
      <anchor>afe088678af719e3dc46c3196334b9398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>data</name>
      <anchorfile>struct_crypto_c_c26_x_x___transaction.html</anchorfile>
      <anchor>a3eb99656cb17d1c68fc28d42b5b392dd</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoKey_</name>
    <filename>struct_crypto_key__.html</filename>
    <member kind="variable">
      <type>CryptoKey_Encoding</type>
      <name>encoding</name>
      <anchorfile>struct_crypto_key__.html</anchorfile>
      <anchor>a45688947ee67b7c8cd8b705bbaf535a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey_Plaintext</type>
      <name>plaintext</name>
      <anchorfile>struct_crypto_key__.html</anchorfile>
      <anchor>aac0c57cc2ab2c1fc951b2951004644a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey_KeyStore</type>
      <name>keyStore</name>
      <anchorfile>struct_crypto_key__.html</anchorfile>
      <anchor>ad770246f70504ba94deab8d22dea965e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey_KeyBlob</type>
      <name>keyBlob</name>
      <anchorfile>struct_crypto_key__.html</anchorfile>
      <anchor>a071e6ab117001e5f33ee27c770eec60a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CryptoKey_::@0</type>
      <name>u</name>
      <anchorfile>struct_crypto_key__.html</anchorfile>
      <anchor>a9393e8bbe9b4f3ca2b1f7f695f948386</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoKey_KeyBlob_</name>
    <filename>struct_crypto_key___key_blob__.html</filename>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>keyBlob</name>
      <anchorfile>struct_crypto_key___key_blob__.html</anchorfile>
      <anchor>aed346bb0273e0e43001208bd298eed2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>keyBlobLength</name>
      <anchorfile>struct_crypto_key___key_blob__.html</anchorfile>
      <anchor>a5bc0b75ae287efc1ab3214bb939238db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoKey_KeyStore_</name>
    <filename>struct_crypto_key___key_store__.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>keyStore</name>
      <anchorfile>struct_crypto_key___key_store__.html</anchorfile>
      <anchor>a2e1e5828e14d0046f32fa6c9c5f27b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>keyLength</name>
      <anchorfile>struct_crypto_key___key_store__.html</anchorfile>
      <anchor>ad920c156723b43dfd2d5ada9b2faec96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>keyIndex</name>
      <anchorfile>struct_crypto_key___key_store__.html</anchorfile>
      <anchor>a7df9a3fd69b263e3f185cd3ec9979f8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoKey_Plaintext_</name>
    <filename>struct_crypto_key___plaintext__.html</filename>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>keyMaterial</name>
      <anchorfile>struct_crypto_key___plaintext__.html</anchorfile>
      <anchor>af42e0b31c5293366e53a84efb17909b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>keyLength</name>
      <anchorfile>struct_crypto_key___plaintext__.html</anchorfile>
      <anchor>ad9fe22ddb2fc88511c31bc856e2f33da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Display_Config</name>
    <filename>struct_display___config.html</filename>
    <member kind="variable">
      <type>Display_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_display___config.html</anchorfile>
      <anchor>adce10e2738107a8b017ac8df3dbe1d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_display___config.html</anchorfile>
      <anchor>a3888ffcab482aacee937ec782f49110d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_display___config.html</anchorfile>
      <anchor>a5fe62abb9c875eca79144e916082ecb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Display_FxnTable</name>
    <filename>struct_display___fxn_table.html</filename>
    <member kind="variable">
      <type>Display_initFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a61477f2b3203c0441725caae4b208f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_openFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a66473aac0719cf33382770aab5e51f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_clearFxn</type>
      <name>clearFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>ac2db3a7d155afd3bf0f83a125d3e1745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_clearLinesFxn</type>
      <name>clearLinesFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a50c9960307eb7abdddeaea450f2b413d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_vprintfFxn</type>
      <name>vprintfFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a0a8010b19adec2c5f543e0b97f454a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_closeFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>ab87c3ac60591e2f8276ca68e372a0eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_controlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a8fc3ff1c182a8c00cbbbbe182dacba8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_getTypeFxn</type>
      <name>getTypeFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a77c12532ad85c855dd889b28d7d5a282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Display_Params</name>
    <filename>struct_display___params.html</filename>
    <member kind="variable">
      <type>Display_LineClearMode</type>
      <name>lineClearMode</name>
      <anchorfile>struct_display___params.html</anchorfile>
      <anchor>af442a90969018ed8073eef6451425f40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayDogm1286_HWAttrs</name>
    <filename>struct_display_dogm1286___h_w_attrs.html</filename>
    <member kind="variable">
      <type>LCD_Handle</type>
      <name>lcdHandle</name>
      <anchorfile>struct_display_dogm1286___h_w_attrs.html</anchorfile>
      <anchor>a5b7a6005271e6c9117a617e9c735ece1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>powerPin</name>
      <anchorfile>struct_display_dogm1286___h_w_attrs.html</anchorfile>
      <anchor>a9949d110bdfbcab837d945a2e27dadd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayDogm1286_Object</name>
    <filename>struct_display_dogm1286___object.html</filename>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>aa6d4c58705d112dce8ab7aa443783b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>hPins</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>aba88e9b3f2a2c5d65e7ba5a7bbcf86df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LCD_Handle</type>
      <name>hLcd</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>a8f125a6757c84d28ab81f0abfd6feece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_LineClearMode</type>
      <name>lineClearMode</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>a4525973bf6510910127af3b100e1f5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>lcdMutex</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>ad99ca1d24a2c5ea9bb4f7ae6b3b21a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lcdBuffer0</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>ac448fc5a1441d044de286f95ad8c2e2c</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable">
      <type>LCD_Buffer</type>
      <name>lcdBuffers</name>
      <anchorfile>struct_display_dogm1286___object.html</anchorfile>
      <anchor>a965896b532f1b40620ad632b5f509e24</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayGrLib_Object</name>
    <filename>struct_display_gr_lib___object.html</filename>
    <member kind="variable">
      <type>Graphics_Context</type>
      <name>g_sContext</name>
      <anchorfile>struct_display_gr_lib___object.html</anchorfile>
      <anchor>a862853916cae353daca18557f29fc7c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayHost_HWAttrs</name>
    <filename>struct_display_host___h_w_attrs.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>strBuf</name>
      <anchorfile>struct_display_host___h_w_attrs.html</anchorfile>
      <anchor>ac3696cae4d018951b95be22f560d8f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>strBufLen</name>
      <anchorfile>struct_display_host___h_w_attrs.html</anchorfile>
      <anchor>a410831f94366a36020e1018ec71e7501</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayHost_Object</name>
    <filename>struct_display_host___object.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>struct_display_host___object.html</anchorfile>
      <anchor>a636a6b965c094235003c75f758fecefb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplaySharp_HWAttrsV1</name>
    <filename>struct_display_sharp___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a278ed6d447cb2d95830b0229be38ce25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>csPin</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a7281bd7086d5a1bb3394e2d8d8259c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>powerPin</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>aec495b58b10d9c1c4a4ac3ca7d17d1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>enablePin</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a8c42d75e2e59a0d61c912d724cda85f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>pixelHeight</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a5d046a70cfa7de34fa53a14b702bd3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>pixelWidth</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>afcfd96e28aa5b22bd9a350eca860a3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>displayBuf</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a6e11d2f8c113a4f09ee630011e25dfe9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplaySharp_Object</name>
    <filename>struct_display_sharp___object.html</filename>
    <member kind="variable">
      <type>Graphics_Context</type>
      <name>g_sContext</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a95e52d201167a1789c3d44f86d9a7d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>hSpi</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>ace64d49d3e54bd958f5631be3b5a019e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_LineClearMode</type>
      <name>lineClearMode</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a1b911a160ce7d497a13c517038710d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Graphics_Display</type>
      <name>g_sDisplay</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>ad7c24f944e50108ddc86b8b1cc6c037f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DisplaySharpColor_t</type>
      <name>displayColor</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a99bea24fb7ee15769a37eb53087daf22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>semLCD</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a0dbcb1a0eae3976ac55e77a6c674caae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>displayBuffer</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a268dce94be3fcbae2e9d317810269932</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplaySharpColor_t</name>
    <filename>struct_display_sharp_color__t.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fg</name>
      <anchorfile>struct_display_sharp_color__t.html</anchorfile>
      <anchor>a98c48c9cef6f817b8bea0d1f7da88ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bg</name>
      <anchorfile>struct_display_sharp_color__t.html</anchorfile>
      <anchor>a4a3d7b6e3b83826fabdfb2c2f75aa3c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayUart_HWAttrs</name>
    <filename>struct_display_uart___h_w_attrs.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uartIdx</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a3c111ee8c6a5c628ab9aa3f58bb24b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baudRate</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a808a00c56f02105b6a8254c861f770f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mutexTimeout</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a088c26aa2cb1345d33d016617c1db852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>strBuf</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a50486e4fcebccea63bf5233176fa8512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>strBufLen</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a3a5db18ba55168690f3064f98d7ceaac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayUart_Object</name>
    <filename>struct_display_uart___object.html</filename>
    <member kind="variable">
      <type>UART_Handle</type>
      <name>hUart</name>
      <anchorfile>struct_display_uart___object.html</anchorfile>
      <anchor>a8b35f7e4e65999298f8e461817545f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>mutex</name>
      <anchorfile>struct_display_uart___object.html</anchorfile>
      <anchor>a492f4737cfbde275b3e7e898431e6c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>lineClearSeq</name>
      <anchorfile>struct_display_uart___object.html</anchorfile>
      <anchor>a238a4fefc6643ebc4cd56825f1945fc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECCParams_CurveParams_</name>
    <filename>struct_e_c_c_params___curve_params__.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveType</type>
      <name>curveType</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a5743e499073380100fb73dae62480dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const size_t</type>
      <name>length</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>aeebdd7ec31ba259a5f3069e70c782165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>prime</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a3a4f69367ff163f58c519a77ed880853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>order</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a590246bea99547894e4306c5bcf7fa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>a</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a88c82b7c3583e1f484750e8fc2fdb173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>b</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a6859701955dcaea08d69d2ea1c3adda6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>generatorX</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a926ab74e88953388d31b170983606739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>generatorY</name>
      <anchorfile>struct_e_c_c_params___curve_params__.html</anchorfile>
      <anchor>a0795b9e656562233bbbf10b935b19266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDH_Config</name>
    <filename>struct_e_c_d_h___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_e_c_d_h___config.html</anchorfile>
      <anchor>a0ecde7b79dbd50ce9fdf6c0ced2461ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_e_c_d_h___config.html</anchorfile>
      <anchor>a5c9b606d45514f256255d4775cf3b514</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ECDH_Operation</name>
    <filename>union_e_c_d_h___operation.html</filename>
    <member kind="variable">
      <type>ECDH_OperationGeneratePublicKey *</type>
      <name>generatePublicKey</name>
      <anchorfile>union_e_c_d_h___operation.html</anchorfile>
      <anchor>a8ea2131537f172ed34e83779420dc4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDH_OperationComputeSharedSecret *</type>
      <name>computeSharedSecret</name>
      <anchorfile>union_e_c_d_h___operation.html</anchorfile>
      <anchor>a8a20982b0df1ae92824e6d2b1726506e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDH_OperationComputeSharedSecret</name>
    <filename>struct_e_c_d_h___operation_compute_shared_secret.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_d_h___operation_compute_shared_secret.html</anchorfile>
      <anchor>a48ec0ce4a2973bfee8b4a402e3f7c764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateKey</name>
      <anchorfile>struct_e_c_d_h___operation_compute_shared_secret.html</anchorfile>
      <anchor>a52a819338fa7c1fc28af71a7da788295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicKey</name>
      <anchorfile>struct_e_c_d_h___operation_compute_shared_secret.html</anchorfile>
      <anchor>a6540f4e6832e4af2c59e37e1f88a0184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>sharedSecret</name>
      <anchorfile>struct_e_c_d_h___operation_compute_shared_secret.html</anchorfile>
      <anchor>a245268db012d1faa33c350c2166a63cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDH_OperationGeneratePublicKey</name>
    <filename>struct_e_c_d_h___operation_generate_public_key.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_d_h___operation_generate_public_key.html</anchorfile>
      <anchor>a294f8f0057a47509156520d7deda3b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateKey</name>
      <anchorfile>struct_e_c_d_h___operation_generate_public_key.html</anchorfile>
      <anchor>a0bafde21f7129cc94cf7dd5af230b80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPublicKey</name>
      <anchorfile>struct_e_c_d_h___operation_generate_public_key.html</anchorfile>
      <anchor>a007ad6802f1edd96410cd1acfb6a5000</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDH_Params</name>
    <filename>struct_e_c_d_h___params.html</filename>
    <member kind="variable">
      <type>ECDH_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_e_c_d_h___params.html</anchorfile>
      <anchor>a142f454a2576024594b48c531af03825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDH_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_e_c_d_h___params.html</anchorfile>
      <anchor>ae923af750bcdcdd96fb5c05a73a97d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_e_c_d_h___params.html</anchorfile>
      <anchor>a1fdb4c02265b463d2d0000c22fc31bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_e_c_d_h___params.html</anchorfile>
      <anchor>ae4ade9bf8a1bb5dbfa32ef0dd16f691e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDHCC26X2_HWAttrs_</name>
    <filename>struct_e_c_d_h_c_c26_x2___h_w_attrs__.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___h_w_attrs__.html</anchorfile>
      <anchor>a1f5d412be5ac6599eed70f27c0c40c98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDHCC26X2_Object_</name>
    <filename>struct_e_c_d_h_c_c26_x2___object__.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a99499a6cb4f52adaec47fe1340efcc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a822786becef517142b6755a57d7fc1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a3f6e03ee2b7735bffdfcccfc8c0b4ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>operationStatus</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a6dba98d89c1e5a041a343c255ffcd8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDH_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>af256b0d235dbc8a8cd88f76817504825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDH_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a239a79ab7f320b60ccbcdee853c49841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDH_Operation</type>
      <name>operation</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a95bba7724dffa06dc95ae13f6b11ae6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDH_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>ae8e979fd8e81b70bfef2caee6489e1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDHCC26X2_FsmState</type>
      <name>fsmState</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>ae74ae5808b83b87c974f626fc9cf7af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a55728d97f4de513456f189c3afe8da3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>resultAddress</name>
      <anchorfile>struct_e_c_d_h_c_c26_x2___object__.html</anchorfile>
      <anchor>a4c22fb2a2c54b6891a560817f29f3606</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDSA_Config</name>
    <filename>struct_e_c_d_s_a___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_e_c_d_s_a___config.html</anchorfile>
      <anchor>a8efd7aac4a77735e883e9b083470ae0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_e_c_d_s_a___config.html</anchorfile>
      <anchor>a477cd534c7653db9d78ef16c4e05c98f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ECDSA_Operation</name>
    <filename>union_e_c_d_s_a___operation.html</filename>
    <member kind="variable">
      <type>ECDSA_OperationSign *</type>
      <name>sign</name>
      <anchorfile>union_e_c_d_s_a___operation.html</anchorfile>
      <anchor>ab1c51289213e9bd28d1fd04e9710b341</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSA_OperationVerify *</type>
      <name>verify</name>
      <anchorfile>union_e_c_d_s_a___operation.html</anchorfile>
      <anchor>a26b1d7dd7c7ea3ebd7d947ae97b87430</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDSA_OperationSign</name>
    <filename>struct_e_c_d_s_a___operation_sign.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_d_s_a___operation_sign.html</anchorfile>
      <anchor>addbb81fadade3018c2b487249418f525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateKey</name>
      <anchorfile>struct_e_c_d_s_a___operation_sign.html</anchorfile>
      <anchor>a843fb01b09db7fdf743ae969b0f39f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>pmsn</name>
      <anchorfile>struct_e_c_d_s_a___operation_sign.html</anchorfile>
      <anchor>a1024333554aa19d8d93d9f59387b90f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>hash</name>
      <anchorfile>struct_e_c_d_s_a___operation_sign.html</anchorfile>
      <anchor>a505593c925c3a064608f93f04c4545b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>r</name>
      <anchorfile>struct_e_c_d_s_a___operation_sign.html</anchorfile>
      <anchor>a138c214cef2a16aa07169106f3ccfcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>s</name>
      <anchorfile>struct_e_c_d_s_a___operation_sign.html</anchorfile>
      <anchor>a257f3e84f91abca240eea1f1c074d805</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDSA_OperationVerify</name>
    <filename>struct_e_c_d_s_a___operation_verify.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_d_s_a___operation_verify.html</anchorfile>
      <anchor>afad22e22015a4e3f1955fb04bb3e57b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicKey</name>
      <anchorfile>struct_e_c_d_s_a___operation_verify.html</anchorfile>
      <anchor>a00d9dd6bfbca401c1864b4695f4778d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>hash</name>
      <anchorfile>struct_e_c_d_s_a___operation_verify.html</anchorfile>
      <anchor>a769f7680681d01f69682d421962a0f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>r</name>
      <anchorfile>struct_e_c_d_s_a___operation_verify.html</anchorfile>
      <anchor>aebe0eb36778b225c51d7d024e6aa69bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>s</name>
      <anchorfile>struct_e_c_d_s_a___operation_verify.html</anchorfile>
      <anchor>a88c77cd7664b04e6eecb0abe2d34d271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDSA_Params</name>
    <filename>struct_e_c_d_s_a___params.html</filename>
    <member kind="variable">
      <type>ECDSA_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_e_c_d_s_a___params.html</anchorfile>
      <anchor>a5e0fac67e0d31d3b8a97b76e65c61daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSA_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_e_c_d_s_a___params.html</anchorfile>
      <anchor>a15d0723f5c49bc98fef637e9cd4715b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_e_c_d_s_a___params.html</anchorfile>
      <anchor>adcb40575a423250ab665463df1d8526b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_e_c_d_s_a___params.html</anchorfile>
      <anchor>a6838b43ba0c93f8f32856c1362ab31d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDSACC26X2_HWAttrs_</name>
    <filename>struct_e_c_d_s_a_c_c26_x2___h_w_attrs__.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___h_w_attrs__.html</anchorfile>
      <anchor>a2a18d3de64ab1de9ce0741b69885f33c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECDSACC26X2_Object_</name>
    <filename>struct_e_c_d_s_a_c_c26_x2___object__.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a745dbf8ef248a57922e35f77ca0daeab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a1e3f9f8ad84bb9ba99dc08aff8571997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>ad84fec691d6ef35e832e69ce4521cf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>operationStatus</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>aaab48315352f1864cd37041d6765a1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSA_Operation</type>
      <name>operation</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a0f9809ed0695323cc63cb159e191a8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSA_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a2dd5f14ba6dec409056c26cf0f2c859c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSA_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>af5034d6be24d31048a2dcef07e6d13b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSACC26X2_stateMachineFxn</type>
      <name>fsmFxn</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a59281dcaa9b950f6bcab8d8ef8de102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSA_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>af53b7111fbcaa92ebccbcfce9c6e6729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECDSACC26X2_FsmState</type>
      <name>fsmState</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a0cddbf5c9b722b3d9a7ca7229ca08c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>aa4f2d94b647d283843fca4c69b463682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>resultAddress</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>a3f06247c77ea1104270d065021cce942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t *</type>
      <name>scratchNumber1</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>ac341125bb142326b96c60035e87f6297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t *</type>
      <name>scratchNumber2</name>
      <anchorfile>struct_e_c_d_s_a_c_c26_x2___object__.html</anchorfile>
      <anchor>ac22a99a9b1edd2f9200f58f860e4be00</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_Config</name>
    <filename>struct_e_c_j_p_a_k_e___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_e_c_j_p_a_k_e___config.html</anchorfile>
      <anchor>a84312ac49d17c054ab3c4f0a077fa927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_e_c_j_p_a_k_e___config.html</anchorfile>
      <anchor>a89a8b0efb52d7ec041a7a050bc0af09a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>ECJPAKE_Operation</name>
    <filename>union_e_c_j_p_a_k_e___operation.html</filename>
    <member kind="variable">
      <type>ECJPAKE_OperationRoundOneGenerateKeys *</type>
      <name>generateRoundOneKeys</name>
      <anchorfile>union_e_c_j_p_a_k_e___operation.html</anchorfile>
      <anchor>a6c46e845743811aae2037f8dd6876316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_OperationGenerateZKP *</type>
      <name>generateZKP</name>
      <anchorfile>union_e_c_j_p_a_k_e___operation.html</anchorfile>
      <anchor>ac8503245dc8cf2a5987e2a73ee6550e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_OperationVerifyZKP *</type>
      <name>verifyZKP</name>
      <anchorfile>union_e_c_j_p_a_k_e___operation.html</anchorfile>
      <anchor>a728e6fd48622866c96a0cca65d9086c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_OperationRoundTwoGenerateKeys *</type>
      <name>generateRoundTwoKeys</name>
      <anchorfile>union_e_c_j_p_a_k_e___operation.html</anchorfile>
      <anchor>ab867fa191e0c11a5efdc81804427cede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_OperationComputeSharedSecret *</type>
      <name>computeSharedSecret</name>
      <anchorfile>union_e_c_j_p_a_k_e___operation.html</anchorfile>
      <anchor>ad3a8ee59d8b6ee74a1016c9e44a49c6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_OperationComputeSharedSecret</name>
    <filename>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</anchorfile>
      <anchor>a37d1500a311757555ae775f40c7fc8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myCombinedPrivateKey</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</anchorfile>
      <anchor>a9141620809db06c0839bcaa504e35962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirCombinedPublicKey</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</anchorfile>
      <anchor>a2e18c8f059736f66f4c768201ed475a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</anchorfile>
      <anchor>a789ee04ff7193f20aa330b5ad12a61b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</anchorfile>
      <anchor>a700f29dfb260521cbeae1d86c06bce00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>sharedSecret</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_compute_shared_secret.html</anchorfile>
      <anchor>a8486981c6cc2ba1b949322f7178a3dc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_OperationGenerateZKP</name>
    <filename>struct_e_c_j_p_a_k_e___operation_generate_z_k_p.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_generate_z_k_p.html</anchorfile>
      <anchor>a06f03779f77101eeda49eacb69c90c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateKey</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_generate_z_k_p.html</anchorfile>
      <anchor>a4b8a05ead0bb6f6d60861928a57bffab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateV</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_generate_z_k_p.html</anchorfile>
      <anchor>af55456bdd3c1f6e9fb48f75d1ddbcd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>hash</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_generate_z_k_p.html</anchorfile>
      <anchor>a7cafdde04fe2951a5f2402f39b35971b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>r</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_generate_z_k_p.html</anchorfile>
      <anchor>a4fec606197ccec4e21c87eb3ea3fcd9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_OperationRoundOneGenerateKeys</name>
    <filename>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>ab114792910e0ea158a8ac395510ccc53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPrivateKey1</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a4daf3b33de1e9d3de08869918f9d215e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPrivateKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a864d14da964cd8a7a14ca0055700e58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPublicKey1</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a02b1264ab2a9d23a7ae54cdaf39494c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPublicKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a8aa339a06a25586addbcb5d408c9ed49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPrivateV1</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a998769ead4ed78a9fc7ebd1986a11753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPrivateV2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a19b4f5da483abcf28c03cf6baae924ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPublicV1</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a4be523ebfc383f0c41e61f4fc3ea149b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPublicV2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_one_generate_keys.html</anchorfile>
      <anchor>a8c021725d9774a0f6153ee30b424485c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_OperationRoundTwoGenerateKeys</name>
    <filename>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a70378dcb290f2d4032d667bb37975ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPrivateKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a9e7e5b0765e81c7b8021242dae006231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPublicKey1</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a2a9a1eff4321e488d979b01b69a4c5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>myPublicKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>ad67d4498895c39c520fc89af43411cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicKey1</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>aa56b66dd17b7788d4a092c08c0fc526d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicKey2</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a7b26f89a9ff6c4991231cacfa2834fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>preSharedSecret</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>af056028d0089252d89d1413e9950e39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>theirNewGenerator</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a79021d246ce8e6603f987502e1c306d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myNewGenerator</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>aad7c70af8f88da28262eae66c2606196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myCombinedPrivateKey</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>ae3b22eb15838cffb4469dae238bd103f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myCombinedPublicKey</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a5be4dc8d025e3f195b9ca9467d891e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPrivateV</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>aeb7a4d170ee355be0201d4b246a73a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>myPublicV</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_round_two_generate_keys.html</anchorfile>
      <anchor>a8d31da90d614deb245c6ef35ab9ea795</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_OperationVerifyZKP</name>
    <filename>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</filename>
    <member kind="variable">
      <type>const ECCParams_CurveParams *</type>
      <name>curve</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</anchorfile>
      <anchor>aa9fd0c3220148eb260da304767b845e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirGenerator</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</anchorfile>
      <anchor>acf6d864f4e02a34195700a538f3ec3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicKey</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</anchorfile>
      <anchor>a22bf5b561832f7be21e7c766573f906a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CryptoKey *</type>
      <name>theirPublicV</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</anchorfile>
      <anchor>a4be0a99f30ddb02784ae088d8b36d497</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>hash</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</anchorfile>
      <anchor>ad524369b4c52fbff25abef2b7dc5f2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>r</name>
      <anchorfile>struct_e_c_j_p_a_k_e___operation_verify_z_k_p.html</anchorfile>
      <anchor>acd55d6b35c8713a96fe853cf813df8ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKE_Params</name>
    <filename>struct_e_c_j_p_a_k_e___params.html</filename>
    <member kind="variable">
      <type>ECJPAKE_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_e_c_j_p_a_k_e___params.html</anchorfile>
      <anchor>aeb38bfee3ec1ec719187b92cf7809f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_e_c_j_p_a_k_e___params.html</anchorfile>
      <anchor>a37c26c9517afb1b31656f0b1bd75c0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_e_c_j_p_a_k_e___params.html</anchorfile>
      <anchor>a3d57c640ac73a11756b4e81e2c47f43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_e_c_j_p_a_k_e___params.html</anchorfile>
      <anchor>a6423049919fbd7864c3726ec7e5417ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKECC26X2_HWAttrs_</name>
    <filename>struct_e_c_j_p_a_k_e_c_c26_x2___h_w_attrs__.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___h_w_attrs__.html</anchorfile>
      <anchor>abdf25275a69f4b6fcb6ea3f2435fa572</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ECJPAKECC26X2_Object_</name>
    <filename>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>ac1fee03ba07b587bf40aa20c0cef8f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationInProgress</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>a5fe8a1eabf4c8f03d2e525efcfa95aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>operationCanceled</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>a81037ac68b264539ee5d465ce47cf323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>operationStatus</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>a3e6502c933be4cbdbd222ea5c4272fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>abfbd906924eb9edc9ada0b8075cd8fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>a6e0aae9d23f8a6cf4bc8445834978445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKECC26X2_FsmState</type>
      <name>fsmState</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>ad5753a8f80b7129467bfb8618be68216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_Operation</type>
      <name>operation</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>a2cd6b963069398b40c2b9532f4fbeb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ECJPAKE_OperationType</type>
      <name>operationType</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>abf94256356aaa0083d2cbb5a947beb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>adabde0fa798da7b617e7e337dde81df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>resultAddress</name>
      <anchorfile>struct_e_c_j_p_a_k_e_c_c26_x2___object__.html</anchorfile>
      <anchor>af514ef9ba0ff26900dafb7b47cfd9880</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GPIOCC26XX_Config</name>
    <filename>struct_g_p_i_o_c_c26_x_x___config.html</filename>
    <member kind="variable">
      <type>GPIO_PinConfig *</type>
      <name>pinConfigs</name>
      <anchorfile>struct_g_p_i_o_c_c26_x_x___config.html</anchorfile>
      <anchor>a68e77c4393d8ce8da87060e9ebda485a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPIO_CallbackFxn *</type>
      <name>callbacks</name>
      <anchorfile>struct_g_p_i_o_c_c26_x_x___config.html</anchorfile>
      <anchor>a889dc0d27aa313d15bbfa6fbe94ed7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>numberOfPinConfigs</name>
      <anchorfile>struct_g_p_i_o_c_c26_x_x___config.html</anchorfile>
      <anchor>ae5978d3a1a3c9b05cd47d8e3b9a875fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>numberOfCallbacks</name>
      <anchorfile>struct_g_p_i_o_c_c26_x_x___config.html</anchorfile>
      <anchor>ad8d28533d6cb78c62e5a371ce9c6f00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_g_p_i_o_c_c26_x_x___config.html</anchorfile>
      <anchor>a7f628362609f5d1cea2733083ddccedf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GPTimerCC26XX_Config</name>
    <filename>struct_g_p_timer_c_c26_x_x___config.html</filename>
    <member kind="variable">
      <type>GPTimerCC26XX_Object *</type>
      <name>object</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___config.html</anchorfile>
      <anchor>a92658b3b494f165b96a8bb7324ffb737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const GPTimerCC26XX_HWAttrs *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___config.html</anchorfile>
      <anchor>a713a6a23b178957ab2f245326f954b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Part</type>
      <name>timerPart</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___config.html</anchorfile>
      <anchor>a6d76dc1cbe8a2e7e38a2c6546ea58782</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GPTimerCC26XX_HWAttrs</name>
    <filename>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>ad6bc77822c89ec42d268a29178d81828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intNum</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>af8a6cce8af13c52e964b65ac2f8fa9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a83fbce47b4ff591bde69b5f77d2c133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>powerMngrId</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a3772ec5a7f529047ed690c83cffad038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Part</type>
      <name>timer</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a85c14724ff57d1b25d6552752293d7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_PinMux</type>
      <name>pinMux</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a7a5f3ba89a0094ead820cc15f9465ed5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GPTimerCC26XX_Object</name>
    <filename>struct_g_p_timer_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>GPTimerCC26XX_Width</type>
      <name>width</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>a81ee4bac962aee8e9d7289822d1e8005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>aa81688dec3340dd5ad2f3e19eeefdc17</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>a8ea9d34ec7d19d5059826aeecd2dbf5f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_HwiFxn</type>
      <name>hwiCallbackFxn</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>ad1931931acdb73ced544f667ac7f8f9b</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>powerConstraint</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>adf14dbb2f480fbdcda727c074248dbcf</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GPTimerCC26XX_Params</name>
    <filename>struct_g_p_timer_c_c26_x_x___params.html</filename>
    <member kind="variable">
      <type>GPTimerCC26XX_Width</type>
      <name>width</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___params.html</anchorfile>
      <anchor>a4c9e040425769960160b4d42496f5aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Mode</type>
      <name>mode</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___params.html</anchorfile>
      <anchor>ae911c92ad3079146c568a02575bb6300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_SetMatchTiming</type>
      <name>matchTiming</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___params.html</anchorfile>
      <anchor>ab56d45730a939287443fd19135fa1e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Direction</type>
      <name>direction</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___params.html</anchorfile>
      <anchor>af1bee4b3ddfb7464a760b70c9bca0313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_DebugMode</type>
      <name>debugStallMode</name>
      <anchorfile>struct_g_p_timer_c_c26_x_x___params.html</anchorfile>
      <anchor>aebaace525be6fc274c77ff655f604754</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_Config_</name>
    <filename>struct_i2_c___config__.html</filename>
    <member kind="variable">
      <type>I2C_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_i2_c___config__.html</anchorfile>
      <anchor>a635dcef77b14e153ffb35e270cd46886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_i2_c___config__.html</anchorfile>
      <anchor>a8bdac95426bbb6b46559fab1e81898ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_i2_c___config__.html</anchorfile>
      <anchor>af4722d351fb7137a34166e047a4f96bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_FxnTable_</name>
    <filename>struct_i2_c___fxn_table__.html</filename>
    <member kind="variable">
      <type>I2C_CancelFxn</type>
      <name>cancelFxn</name>
      <anchorfile>struct_i2_c___fxn_table__.html</anchorfile>
      <anchor>a8cadbe830929fa9a54461448e471d359</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_i2_c___fxn_table__.html</anchorfile>
      <anchor>af53a791f92401f932164b46c4f36c64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_i2_c___fxn_table__.html</anchorfile>
      <anchor>a64329bef0f93df5f00ab40ebbff55781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_i2_c___fxn_table__.html</anchorfile>
      <anchor>a1cf1cb27dbc1b6df32f4539fa673ff47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_i2_c___fxn_table__.html</anchorfile>
      <anchor>a729b2903401dbfe7b39dd57e21a113bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_TransferFxn</type>
      <name>transferFxn</name>
      <anchorfile>struct_i2_c___fxn_table__.html</anchorfile>
      <anchor>acbc284ea2ca7877265e72167f716f3c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_Params</name>
    <filename>struct_i2_c___params.html</filename>
    <member kind="variable">
      <type>I2C_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>a79c5c51380ffbdb21df1dff6cb57de0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>a57edf1b900368904779d0c57a73cf047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_BitRate</type>
      <name>bitRate</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>ad31857f6dbedb77c60c92cc8cd8cde0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>a2416cc06d853e6cc24e1f294dfebb194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_Transaction</name>
    <filename>struct_i2_c___transaction.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>writeBuf</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>aa3490c2af4b443a7a4ec13f57aec6d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a08959a9f098163d02d6002e73b3a4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>readBuf</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a804b918d5cb08bb75a39866d0b89e01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a2085d4c943f0d8617365b7c427e6a0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>slaveAddress</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a2e5c027c6f243f7169305f86bb2ab6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a29ec65addac2d4ef5d1235c2329e2fc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2CCC26XX_HWAttrsV1</name>
    <filename>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>I2CBaseAddrType</type>
      <name>baseAddr</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a1dcaf2c98df0688a137d6d36fcf5b813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>powerMngrId</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>ae4f13a6d9682c89ebaa095ac65550284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intNum</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a47978d1b0177205345aea6760bdd44ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>af2ce41811fa52e3b70cb2388b1a9a5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>af6dcf5a19b94fa39e89a1435c78f0d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>sdaPin</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a3387c3315d2b4f62fedf70563fd55931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>sclPin</name>
      <anchorfile>struct_i2_c_c_c26_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a0c0d7cba4b01ece784f35192fdc91b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2CCC26XX_I2CPinCfg</name>
    <filename>struct_i2_c_c_c26_x_x___i2_c_pin_cfg.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>pinSDA</name>
      <anchorfile>struct_i2_c_c_c26_x_x___i2_c_pin_cfg.html</anchorfile>
      <anchor>a07155d4bf6fac9ed7181eca65563e2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>pinSCL</name>
      <anchorfile>struct_i2_c_c_c26_x_x___i2_c_pin_cfg.html</anchorfile>
      <anchor>af6a6d421ac74746b80065a3e9de338d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2S_Config_</name>
    <filename>struct_i2_s___config__.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_i2_s___config__.html</anchorfile>
      <anchor>a932c69ee3828da7ab143a571118521b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_i2_s___config__.html</anchorfile>
      <anchor>a95ba4b746375e69ef43e51cc5c8b966a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2S_Params_</name>
    <filename>struct_i2_s___params__.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>trueI2sFormat</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>ab63bb5c611a5d8d1b878d30785f20d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>invertWS</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>ac241296ad6a75842b2221aa9c7ebd511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isMSBFirst</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a43adf73f770fc1f2f06893df1792106d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isDMAUnused</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a9cb2f843982e209aca2d7098de7c8a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_MemoryLength</type>
      <name>memorySlotLength</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>abb5b82efd574a61175bc032bd0776dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>beforeWordPadding</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>ac22f472321151947f2d49d6fda47c3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>afterWordPadding</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a8945562d6ca586ea227c44317be2be04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>bitsPerWord</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a1d22bd4570339862333460a6d872e845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Role</type>
      <name>moduleRole</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>acef474246bce385bab7cad0b0cd3790f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_SamplingEdge</type>
      <name>samplingEdge</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a5697e2772a5e5d5b7bc3f74a72ea2a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_DataInterfaceUse</type>
      <name>SD0Use</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a1a065a60ed2ff86867b3a481f8239089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_DataInterfaceUse</type>
      <name>SD1Use</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a87dd7fa383ca106800d9729b485df7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_ChannelConfig</type>
      <name>SD0Channels</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a8437bdc34943957b8700e70492bde018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_ChannelConfig</type>
      <name>SD1Channels</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a38000a066bd23eee109d6426d51e9e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_PhaseType</type>
      <name>phaseType</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a65cae355ed8dc3d8eb46b7bb356a9f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>fixedBufferLength</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a2a8ccb59f26ff43303ebea9d4c9109db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>startUpDelay</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>af489cbb683b64e99838d3dd59b8b6b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MCLKDivider</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a0bd8fe343f240970af78ad9a941285c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplingFrequency</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a9da18ece35f03dfbf5a68667f3587240</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>abcd538ba2de411afbbfcdbb6278d08f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a4392adb6b38a71d18a40f4383d90529d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Callback</type>
      <name>errorCallback</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a72fc424dd561ba232346711b4b15a570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_i2_s___params__.html</anchorfile>
      <anchor>a67b114c9e4dc215184db375076b5c10f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2S_Transaction_</name>
    <filename>struct_i2_s___transaction__.html</filename>
    <member kind="variable">
      <type>List_Elem</type>
      <name>queueElement</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>a5228d22402bcfebc6501698484287ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>bufPtr</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>a4ff4f588027c268d095934f9712c874e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bufSize</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>a417c126a698a675b74b1a1ab270b3898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bytesTransferred</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>ab85c4420ca74927bbe58409d474cc433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>untransferredBytes</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>ae3c18b29fdac33fc14608c9356fdfcd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>numberOfCompletions</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>a2acdcde7e70f6f458fa891c3767ab6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>arg</name>
      <anchorfile>struct_i2_s___transaction__.html</anchorfile>
      <anchor>a44991881905faa78742079722b174986</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2SCC26XX_HWAttrs_</name>
    <filename>struct_i2_s_c_c26_x_x___h_w_attrs__.html</filename>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>pinSD1</name>
      <anchorfile>struct_i2_s_c_c26_x_x___h_w_attrs__.html</anchorfile>
      <anchor>ae0bac313052336c28c5ddc99af4c0464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>pinSD0</name>
      <anchorfile>struct_i2_s_c_c26_x_x___h_w_attrs__.html</anchorfile>
      <anchor>a9755ad7c1c2e1410e922481741e9332d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>pinSCK</name>
      <anchorfile>struct_i2_s_c_c26_x_x___h_w_attrs__.html</anchorfile>
      <anchor>a0020425403a57485b71199d5fab7af9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>pinMCLK</name>
      <anchorfile>struct_i2_s_c_c26_x_x___h_w_attrs__.html</anchorfile>
      <anchor>a9cac099fcfb57d71f218b382a89509d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>pinWS</name>
      <anchorfile>struct_i2_s_c_c26_x_x___h_w_attrs__.html</anchorfile>
      <anchor>a4237e70b89623172c5c942c7e4691bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_i2_s_c_c26_x_x___h_w_attrs__.html</anchorfile>
      <anchor>abecd26b24a802055f38a5bd726a46c15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LCD_Buffer</name>
    <filename>struct_l_c_d___buffer.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>pcBuffer</name>
      <anchorfile>struct_l_c_d___buffer.html</anchorfile>
      <anchor>af0f290cdf7fc2b94ebe0a918cc736982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>bufSize</name>
      <anchorfile>struct_l_c_d___buffer.html</anchorfile>
      <anchor>a77c4adb59142a732371a552558161ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>bufMutex</name>
      <anchorfile>struct_l_c_d___buffer.html</anchorfile>
      <anchor>ab6862a6a73f37992b448142930927e75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LCD_Command</name>
    <filename>struct_l_c_d___command.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>displayStartLine</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>ae4fbd8142bd9ee7b42020251b036efe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>adcSet</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a13174f610535ad591df48139b2e4c511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>outputMode</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>afe9d8a469e345bcbf35cfe14e5184eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>displayType</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a795b45502f9138dfc6486297cd14628b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lcdBias</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a1ccb63cfbfab6ef7627a1951640ddbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>powerControl</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a988a63f9ff8ca32ab6952c097de3e5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>boosterRadio0</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a9f62631a5984e53bf96647e1ce68c25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>boosterRadio1</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a05a53c0a6c81f5db5438695b14c2f9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>contrastSet0</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a37382a7a2ddbd5ccdd3ee1db887bb50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>contrastSet1</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>aa031605824fe2c5e283c8bcd7f27e9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>contrastSet2</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>af26bfd125db7aef96ce618bc31181a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>staticIndicator0</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a5b301143d4a24deb3946fd6a23b46b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>staticIndicator1</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>af42f170bac9dfd5edfcf2a9f8b940525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>displayEn</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>ad5e77eb483dec8e803653904047f2945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>setPage</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a0e0aeb304cfae0c5af8ec43c3c8daa50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>columnHi</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>a53634dafcc4b7694da1dbfa351b3986e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>columnLo</name>
      <anchorfile>struct_l_c_d___command.html</anchorfile>
      <anchor>adaf735a3cc75a92e5b8bbc51d7bf2975</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LCD_Config</name>
    <filename>struct_l_c_d___config.html</filename>
    <member kind="variable">
      <type>LCD_Object *</type>
      <name>object</name>
      <anchorfile>struct_l_c_d___config.html</anchorfile>
      <anchor>a264b39a3788c4e64089320afa5ad33fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LCD_HWAttrs const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_l_c_d___config.html</anchorfile>
      <anchor>a76942612562659fe3b3254b24c66f2b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LCD_HWAttrs</name>
    <filename>struct_l_c_d___h_w_attrs.html</filename>
    <member kind="variable">
      <type>LCD_Command const  *</type>
      <name>LCD_initCmd</name>
      <anchorfile>struct_l_c_d___h_w_attrs.html</anchorfile>
      <anchor>a04de8f9bfd92ed872bbd447177eba7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>lcdModePin</name>
      <anchorfile>struct_l_c_d___h_w_attrs.html</anchorfile>
      <anchor>af2b2c62d70137e4f8727136001e69718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>lcdResetPin</name>
      <anchorfile>struct_l_c_d___h_w_attrs.html</anchorfile>
      <anchor>a5a9db2fc62d4c34511507e5843ff82a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>lcdCsnPin</name>
      <anchorfile>struct_l_c_d___h_w_attrs.html</anchorfile>
      <anchor>af9926a7b6972357506299ff4893a5ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_l_c_d___h_w_attrs.html</anchorfile>
      <anchor>aad817df3726cc746fd22075f4510e9d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LCD_Object</name>
    <filename>struct_l_c_d___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_l_c_d___object.html</anchorfile>
      <anchor>ae964c8fbe9fda2b5cac3592a4b02b16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>spiHandle</name>
      <anchorfile>struct_l_c_d___object.html</anchorfile>
      <anchor>ae5a83e239d37d34cf7c111cb879ab237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>lcdWriteTimeout</name>
      <anchorfile>struct_l_c_d___object.html</anchorfile>
      <anchor>acb3f2edac00d7ef0a0cf2dc9b0ba3160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>lcdMutex</name>
      <anchorfile>struct_l_c_d___object.html</anchorfile>
      <anchor>a1a903e5cf13da97d7d1bcd5f9277e880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LCD_Buffer *</type>
      <name>lcdBuffers</name>
      <anchorfile>struct_l_c_d___object.html</anchorfile>
      <anchor>acf7322679a62a6a8f0d0c26363d33696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>nBuffers</name>
      <anchorfile>struct_l_c_d___object.html</anchorfile>
      <anchor>aaedc411a324d3ada993422793871a919</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LCD_Params</name>
    <filename>struct_l_c_d___params.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>lcdWriteTimeout</name>
      <anchorfile>struct_l_c_d___params.html</anchorfile>
      <anchor>a4d0eed4a93a0785c12eb26c48be77a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>spiBitRate</name>
      <anchorfile>struct_l_c_d___params.html</anchorfile>
      <anchor>a5670d1d33180c428d0b84154ca658098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_FrameFormat</type>
      <name>spiFrameFormat</name>
      <anchorfile>struct_l_c_d___params.html</anchorfile>
      <anchor>a27584b38ae256abf6358c4158da5be60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>List_Elem</name>
    <filename>struct_list___elem.html</filename>
    <member kind="variable">
      <type>struct List_Elem *</type>
      <name>next</name>
      <anchorfile>struct_list___elem.html</anchorfile>
      <anchor>a0f1336247f6538e230d2c23b3ce4c92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct List_Elem *</type>
      <name>prev</name>
      <anchorfile>struct_list___elem.html</anchorfile>
      <anchor>aaf7affa6c4bd1d22a7b4beaf716be863</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>List_List</name>
    <filename>struct_list___list.html</filename>
    <member kind="variable">
      <type>List_Elem *</type>
      <name>head</name>
      <anchorfile>struct_list___list.html</anchorfile>
      <anchor>ac6fe915aed884adffb39b7c5538b4b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List_Elem *</type>
      <name>tail</name>
      <anchorfile>struct_list___list.html</anchorfile>
      <anchor>aaa078249706663590a38d168b115171e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_Attrs</name>
    <filename>struct_n_v_s___attrs.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>regionBase</name>
      <anchorfile>struct_n_v_s___attrs.html</anchorfile>
      <anchor>a6c36a2b1c3a5cdfae48ac7665b479aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s___attrs.html</anchorfile>
      <anchor>ad15dd254ec5ce79e82dd3eb3e6e25fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorSize</name>
      <anchorfile>struct_n_v_s___attrs.html</anchorfile>
      <anchor>a8d341bb3f922bae7c50600f301564774</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_Config_</name>
    <filename>struct_n_v_s___config__.html</filename>
    <member kind="variable">
      <type>NVS_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_n_v_s___config__.html</anchorfile>
      <anchor>ade295be230bf42b6140ce89757c92c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_n_v_s___config__.html</anchorfile>
      <anchor>a1b7be7029b10ca1babf1afc824494352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_n_v_s___config__.html</anchorfile>
      <anchor>acc2f91b7a436df48b14e67e936aaa0a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_FxnTable</name>
    <filename>struct_n_v_s___fxn_table.html</filename>
    <member kind="variable">
      <type>NVS_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>ad52c763811aad3bb099f2c92c794d26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a1a5e20488f0b701ea0980bd17228022c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_EraseFxn</type>
      <name>eraseFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a638a6cf443ca76532ba9b7b564379de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_GetAttrsFxn</type>
      <name>getAttrsFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a7d1f0f2c1dd51aa90cecccd178638531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a8e59ff1f3109c7b04194f176df155555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_LockFxn</type>
      <name>lockFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a2b5a1e3491a985d786210a26221dd9e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a41667ec87600c340a861475f916feb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a33828cc4c1c845e5a7f95440e79a4e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_UnlockFxn</type>
      <name>unlockFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>afae868b5c2f52df1dcd840f0d4876966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a67cbdb1f87bf99c91079da45aa0150a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_Params</name>
    <filename>struct_n_v_s___params.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_n_v_s___params.html</anchorfile>
      <anchor>a348c8fdf3758e5ea7a65212d0b917687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSCC26XX_HWAttrs</name>
    <filename>struct_n_v_s_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>regionBase</name>
      <anchorfile>struct_n_v_s_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>ad5ee322e543d49b4c177f28f4e96f884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>ab479adbd1bbeb60a6849c4611d9f4941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSCC26XX_Object</name>
    <filename>struct_n_v_s_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_n_v_s_c_c26_x_x___object.html</anchorfile>
      <anchor>a6efb4e8388b62e19e411d12299ebdcce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSRAM_HWAttrs</name>
    <filename>struct_n_v_s_r_a_m___h_w_attrs.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>regionBase</name>
      <anchorfile>struct_n_v_s_r_a_m___h_w_attrs.html</anchorfile>
      <anchor>a06f0a7a3323a55f6740f7c0a362dcf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s_r_a_m___h_w_attrs.html</anchorfile>
      <anchor>ae07d198b33dae009dedfa38897d69b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorSize</name>
      <anchorfile>struct_n_v_s_r_a_m___h_w_attrs.html</anchorfile>
      <anchor>aa52893b2c1da0f062d69db8ef4128be9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSRAM_Object</name>
    <filename>struct_n_v_s_r_a_m___object.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorBaseMask</name>
      <anchorfile>struct_n_v_s_r_a_m___object.html</anchorfile>
      <anchor>a21a3e3f641687421de4908c9ee2bf393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_n_v_s_r_a_m___object.html</anchorfile>
      <anchor>af14797e6df756e8d18d27db5a75925d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSSPI25X_HWAttrs</name>
    <filename>struct_n_v_s_s_p_i25_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>regionBaseOffset</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a0743a03845422aebdcc49c67552637cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>aa33d42d0f66905a9d5d70ba77916099c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorSize</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a4187978da42e59bb81953569577a53b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>verifyBuf</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ad231c8f7f6c73d29e2b715c8b1e032ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>verifyBufSize</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ac0e721a58e6b25c8ab1fc0759698f796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle *</type>
      <name>spiHandle</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>affd4e2d11d8b0c9dd43aeb22de7361f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ae99187ec73db72f537b87b75200fc52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>spiBitRate</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a738695395ff8772994c1446793636df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>spiCsnGpioIndex</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ade20d02364fd0f77d795295f4b85d363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>statusPollDelayUs</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a0babde38f1743458205b95c316363e80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSSPI25X_Object</name>
    <filename>struct_n_v_s_s_p_i25_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___object.html</anchorfile>
      <anchor>ac279aced49b5423b40cfab02b5c78d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>spiHandle</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___object.html</anchorfile>
      <anchor>a6e78dbf7192457ef032aa7f94c68c4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorBaseMask</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___object.html</anchorfile>
      <anchor>a6cb6753a7703769a54800945a065bfba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_BufferRequest</name>
    <filename>struct_p_d_m_c_c26_x_x___buffer_request.html</filename>
    <member kind="variable">
      <type>PDMCC26XX_pcmBuffer *</type>
      <name>buffer</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___buffer_request.html</anchorfile>
      <anchor>af1ba97caba202d780151fb276b128802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_Status</type>
      <name>status</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___buffer_request.html</anchorfile>
      <anchor>aced5abcb251e52d046809a985d8e2af7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_Config</name>
    <filename>struct_p_d_m_c_c26_x_x___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___config.html</anchorfile>
      <anchor>ae8b1f8e6eac1a99fd352df7fa0d3fa4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___config.html</anchorfile>
      <anchor>a41f103fa307fa16ee21cb639023ba934</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_HWAttrs</name>
    <filename>struct_p_d_m_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>micPower</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a719c9b1d50c606a6287deab7d20e2463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>taskPriority</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a5169287c5b16c798c14fb4b5f1a77df2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_AudioClockConfig</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</filename>
    <member kind="variable">
      <type>uint16_t</type>
      <name>wclkDiv</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>ade00c43db3086dd3ecefb9fe7ccd3388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>sampleOnPositiveEdge</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a2279f907affa09272498993fbeae89d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>wclkPhase</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a9331d100be715d25c802d26ce4c994ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>wclkInverted</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a64a761c3713ca2df6e3f4e5a06b77e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>wclkSource</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a4af2c2583820a348b3b6ec9061fd21c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>bclkDiv</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a5dd6e5158b7e1a285b271f255db2fc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>reserved</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>ad5468b30f2eea667d53831ee2a81ed1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>bclkSource</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a393fa4b3cb3ce807911ff7b623e42bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>mclkDiv</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_clock_config.html</anchorfile>
      <anchor>a4c695f4c6e3933bacc7c1abab4eb379a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_AudioFormatConfig</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___audio_format_config.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>wordLength</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_format_config.html</anchorfile>
      <anchor>a43c47e956fdcdd7b0e1eee61553f3607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>sampleEdge</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_format_config.html</anchorfile>
      <anchor>a48600a4eaee3c7b9e26a2eb826da68b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>dualPhase</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_format_config.html</anchorfile>
      <anchor>a45a99f82001d8cdc96361eab8ea6fff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>memLen</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_format_config.html</anchorfile>
      <anchor>aa6310978bb3efcf50aab7226f34597b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>dataDelay</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___audio_format_config.html</anchorfile>
      <anchor>a8fbefceb8a0609ab4dee5beeecec98e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>PDMCC26XX_I2S_AudioPinConfig</name>
    <filename>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</filename>
    <member kind="variable">
      <type>uint16_t</type>
      <name>ad1</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>afde140c72f0b7fff618278f466a42245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>ad0</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>a1ed6ea89aca197435fd2119774fc6992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PDMCC26XX_I2S_AudioPinConfig::@1</type>
      <name>driverLibParams</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>a6e832ec2d09f1064bbb579adea0da298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ad1Usage</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>ac6ba5e2275ff8537a39f141db28d6310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>enableMclkPin</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>a36ce5e086fdbc64d80735104e76478f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>reserved</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>ab1afe1354cd783e06dab4fc8e28f0baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ad1NumOfChannels</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>aabec0b0c95bf1757afb8fd80e06ef515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ad1ChannelMask</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>a44ac00030f25ea2b143b7b87f5794a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ad0Usage</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>aa50e23d415933dbd7a21e5b5f949d38b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>enableWclkPin</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>abea61a9942e8a5d934aebeb603d62520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>enableBclkPin</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>a10fc32796844e7f1320cee642695237e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ad0NumOfChannels</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>aefb4fcc1a8af0204f4daf2dd82b6498a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ad0ChannelMask</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>adfd6ad24574668b77d782c3616369c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PDMCC26XX_I2S_AudioPinConfig::@2</type>
      <name>bitFields</name>
      <anchorfile>union_p_d_m_c_c26_x_x___i2_s___audio_pin_config.html</anchorfile>
      <anchor>a279e2ef767dbd4251493bfcd63f73d19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_BufferRelease</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___buffer_release.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>bufferHandleIn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___buffer_release.html</anchorfile>
      <anchor>aba73b8ce3a0b12b652c0078ad6cf2169</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_BufferRequest</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___buffer_request.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>bufferIn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___buffer_request.html</anchorfile>
      <anchor>a03f357f8dc39622a3c1fa7ca73584184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>bufferHandleIn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___buffer_request.html</anchorfile>
      <anchor>a0d0c0185f7c71df36df0cf4949c25d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_Status</type>
      <name>status</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___buffer_request.html</anchorfile>
      <anchor>a41c2f850d9390251550c4c7defd6a6a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_Config</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___config.html</anchorfile>
      <anchor>a3016fb0e8abf231ef6e34e468e459b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___config.html</anchorfile>
      <anchor>a45d9141418dd765f894371694b878819</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_HWAttrs</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intNum</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>acaa31ac5c7fdd2274bc81f4aba780301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>a3f0d4c4111cb613831d61d0d1b66956c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC26XX_Resource</type>
      <name>powerMngrId</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>a1d03e81015e5838b4ac5156f9f4c66a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>mclkPin</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>a8afea4d9f2354f268bd41e8cbd741a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>bclkPin</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>a62627ff326a8ba803bca75d85a04c217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>wclkPin</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>a521d8c38b647738c7fbb4ef89058da0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>ad0Pin</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>a42b84a967e7257dda186a3a10b28089a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___h_w_attrs.html</anchorfile>
      <anchor>af1366b2ec99c0c4b6f99a4f35eb0b1f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_Object</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>abea7f7d13e225bd7f9a036b78a5cd13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>blockCount</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a99d22b30bdef8e72e768405402a46089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>blockSizeInBytes</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>ac5a777204cee6d4a2bfee6e9a838df0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_RequestMode</type>
      <name>requestMode</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a075b678ddb1fa9546ada194fb0ea95be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>requestTimeout</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>ada304c8d2774a8f178d8ea9ff9fb488e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sampleRate</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>abb66b6b03831e77f65f2ff753db59f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a98840eae8f2530e3c263ab66f31c2d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_TransferSize</type>
      <name>blockSizeInSamples</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a5ac05520000a6461a9a005dbd3279eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>ae12dc32ac991175a4f08515d752ac325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_MallocFxn</type>
      <name>mallocFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>afae5bd581190edc183a29e76ff95a043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_FreeFxn</type>
      <name>freeFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a87afffd3d7ce4ccb9afc2d1135a92b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_StreamNotification *</type>
      <name>currentStream</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a53ae4a933eca22f77f05ddaeb9da6a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_AudioFormatConfig</type>
      <name>audioFmtCfg</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a51f2f3fb525d8d95a5b8aeb77891bfed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_AudioPinConfig</type>
      <name>audioPinCfg</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a264fc107af3d9f75af4d16a4725a0d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a2dc5691bc168fc1208b645c94314b72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>blockComplete</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>aac8b4862b5ef30133286e885aa39fafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>semStopping</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a84cf43656bdf8195df4571c040fc0ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>a369c473d24f32e961a4b9d5fe01620fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_AudioClockConfig</type>
      <name>audioClkCfg</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___object.html</anchorfile>
      <anchor>af265891596f047a7afec3b74de172d29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_Params</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___params.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>blockCount</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>aff2142d7edd36c676ba466157f3e00bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>requestTimeout</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>ae24ad0b8694eecadda238df85e7a5f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_RequestMode</type>
      <name>requestMode</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>a2bd373c5a35eb5708499735ad1d1b0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_TransferSize</type>
      <name>blockSizeInSamples</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>a2d7f98ab25330b887dc309873a26f7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>a00d6ad911e30febe21d265d9808859b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_MallocFxn</type>
      <name>mallocFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>aa300017bc6e99f06398d3eea8fab5414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_FreeFxn</type>
      <name>freeFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>ad7a28838be0626f4ac923686e82098ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_StreamNotification *</type>
      <name>currentStream</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___params.html</anchorfile>
      <anchor>aaabb96f9076a3e32f28c22164ab32159</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_I2S_StreamNotification</name>
    <filename>struct_p_d_m_c_c26_x_x___i2_s___stream_notification.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___stream_notification.html</anchorfile>
      <anchor>a1801d35678740cfd40b4204b66b134e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_I2S_Status</type>
      <name>status</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___i2_s___stream_notification.html</anchorfile>
      <anchor>a0299d59c398531b389196e260548ad30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_metaData</name>
    <filename>struct_p_d_m_c_c26_x_x__meta_data.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>seqNum</name>
      <anchorfile>struct_p_d_m_c_c26_x_x__meta_data.html</anchorfile>
      <anchor>aa7b19869f73f7a947e6cbdf61ff5c7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>si</name>
      <anchorfile>struct_p_d_m_c_c26_x_x__meta_data.html</anchorfile>
      <anchor>a817f693899137c53178f402eb5cbc459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16_t</type>
      <name>pv</name>
      <anchorfile>struct_p_d_m_c_c26_x_x__meta_data.html</anchorfile>
      <anchor>a3c221557847398149d1034d3d2a590b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_Object</name>
    <filename>struct_p_d_m_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>streamStarted</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>accb73d20cdc867da97ef5cd00cad572d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>micPowerActiveHigh</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a9fa96e50147f141ed92b212e20b6b8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyCompression</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a8e2020efb94b94f43615aea729bda8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>ac89b6cf6088d05b4f52087e67e6bba0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>retBufSizeInBytes</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a05f92e36498598102830fa57a91c2a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>pcmBufferSizeInBytes</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a0df815d07161255f46b7d2fbe728bc36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>startupDelayWithClockInSamples</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>af20066ae39625d19c95159696bd720d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32_t *</type>
      <name>decimationFilter</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a43b9456c4cda0f1b83e49e7f348c5440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t *</type>
      <name>decimationFilterState</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>acf99a7c75e04fdda9b579d3092d28377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>decimationFilterStateSize</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a4f04b686ab2ad8d27c8e48aa280714b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_StreamNotification *</type>
      <name>streamNotification</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a16a58b87745354f508e1c58751ad03a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a9506c80c0b58cf030d46721d90d96bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_MallocFxn</type>
      <name>mallocFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a4805a0277b49cce6fa2c4255cb4e26a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_FreeFxn</type>
      <name>freeFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a1c7fe813d98d451be08b4d7f7618f2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_Pdm2PcmFxn</type>
      <name>pdm2pcmFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>acab3488cd637d5b6f7e4e6d11661274b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>ad8f04523e0414883b00857c4beac6075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a66ad6778e6bfacee79397bf1d44f09fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___object.html</anchorfile>
      <anchor>a25f0b75fdadf1d726861295d5501efb6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_Params</name>
    <filename>struct_p_d_m_c_c26_x_x___params.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>micPowerActiveHigh</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>ab0b5ba7b77e820496242b568e9722197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyCompression</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>a8f7df45298c5e74e04e18050fc36adf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>pdmBufferQueueDepth</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>a7866964e30e66983db76fb8eb8f20c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>retBufSizeInBytes</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>a05bff0a3c2ddbb3a49c2bc7a47a7fe24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32_t *</type>
      <name>decimationFilter</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>ada70be0c2c779c0908babb7978807589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>decimationFilterStateSize</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>ad6940680eb8801335070fef3ef6d128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_Gain</type>
      <name>defaultFilterGain</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>a1c5542bc8d7d16c9e4876746f24b2dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_PcmSampleRate</type>
      <name>pcmSampleRate</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>a7a888cb14c83b729ad0886f1e50eb4a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>startupDelayWithClockInSamples</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>a1ffbb2852a48ff157c0f58df4dce4a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>ada480cae6ca7398efef4293350f92090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_MallocFxn</type>
      <name>mallocFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>aea959cfd6c30b0af7f4c9547c5186d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_FreeFxn</type>
      <name>freeFxn</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>ae0149ca1615d25422c7e0d9c473ccd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>custom</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___params.html</anchorfile>
      <anchor>ad41793869ce12a57f513749b244aa1a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_pcmBuffer</name>
    <filename>struct_p_d_m_c_c26_x_x__pcm_buffer.html</filename>
    <member kind="variable">
      <type>PDMCC26XX_metaData</type>
      <name>metaData</name>
      <anchorfile>struct_p_d_m_c_c26_x_x__pcm_buffer.html</anchorfile>
      <anchor>ac652edcb2ef46127630cc5c765bccee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>pBuffer</name>
      <anchorfile>struct_p_d_m_c_c26_x_x__pcm_buffer.html</anchorfile>
      <anchor>abdff62b23b9567ca243328c5350b0ea9</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PDMCC26XX_StreamNotification</name>
    <filename>struct_p_d_m_c_c26_x_x___stream_notification.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___stream_notification.html</anchorfile>
      <anchor>ab21bcd11c6d72c08354643d6022cbb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PDMCC26XX_Status</type>
      <name>status</name>
      <anchorfile>struct_p_d_m_c_c26_x_x___stream_notification.html</anchorfile>
      <anchor>a57a4fc3f0b7fc1ff267b164cafff063c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PIN_State_s</name>
    <filename>struct_p_i_n___state__s.html</filename>
    <member kind="variable">
      <type>PIN_IntCb</type>
      <name>callbackFxn</name>
      <anchorfile>struct_p_i_n___state__s.html</anchorfile>
      <anchor>acb09d62f6ff8d844fa08f1d4279ee2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>portMask</name>
      <anchorfile>struct_p_i_n___state__s.html</anchorfile>
      <anchor>a5749503bdf478c3184576a1978db84d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>userArg</name>
      <anchorfile>struct_p_i_n___state__s.html</anchorfile>
      <anchor>a5bc12663e721b3c520bf2f65ef71a973</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PINCC26XX_HWAttrs</name>
    <filename>struct_p_i_n_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_p_i_n_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a6e4e12f10aa905a5e6a7cf566c1dfe44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_p_i_n_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>af7aa538ec5ac9d067fd7eb9fce31f0f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Power_NotifyObj</name>
    <filename>struct_power___notify_obj.html</filename>
    <member kind="variable">
      <type>List_Elem</type>
      <name>link</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>a0715ba7a7af18cd16286eeefa20252c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast16_t</type>
      <name>eventTypes</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>a2fc010ad9ca5f6827323308aa56709ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyFxn</type>
      <name>notifyFxn</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>acfc434bbe72476fdac364ffe7df28f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>clientArg</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>ab430e61fc76f545d992c452a3bc74405</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC26X2_Config</name>
    <filename>struct_power_c_c26_x2___config.html</filename>
    <member kind="variable">
      <type>Power_PolicyInitFxn</type>
      <name>policyInitFxn</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>ae8b483d05ce9a7f7d01fc6d0856cc238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_PolicyFxn</type>
      <name>policyFxn</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>ad724fc3b2f6c398c3e0bad52fad61668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool(*</type>
      <name>calibrateFxn</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>a72cdfe7f045f2c69d7231281e2c64c51</anchor>
      <arglist>)(unsigned int)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enablePolicy</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>a6439c6e55fbd69c64995742b41d91dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>calibrateRCOSC_LF</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>a7bff0de8698936011f253fa50b8e2ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>calibrateRCOSC_HF</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>a40af3bd4358266557833b9382011c09b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>enableTCXOFxn</name>
      <anchorfile>struct_power_c_c26_x2___config.html</anchorfile>
      <anchor>a409db316d66e690d875efb98de2894f9</anchor>
      <arglist>)(bool)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC26X2_ModuleState</name>
    <filename>struct_power_c_c26_x2___module_state.html</filename>
    <member kind="variable">
      <type>List_List</type>
      <name>notifyList</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a8d8f0bb7fc9d2c52f532890ccae747c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>constraintMask</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>abf51a840c3f3df8a64f880c79715a6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>clockObj</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>ac16ae4c010cc610660272e4049639fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>calibrationClock</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a769204a932b785b34fdd53154627141f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>tcxoEnableClock</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a97a9d8ac3464840e76ec8ce637802481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>oscHwi</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a3f6fd11885f9c0adce9e776a2a9b02f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>tdcHwi</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a4fbaa0a68597952cddae9c74b465cd32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nDeltaFreqCurr</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a637a33b541811e6b5e5bf3727e86a454</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimCurr</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a88988981684a25514942a9cd959baf5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimFractCurr</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a1179bae945ea10f8e8ee90ebc73d0cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimNew</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>ae1071aeeaa063c5f9ca0c9776d24987a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimFractNew</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>af2aca808244d7fa14ddb5018482a0027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nRtrimNew</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a4de413fdc05f77cb0d8bb026a4851140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nRtrimCurr</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a0a5c8327aae8812469d187e0e65eec96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nDeltaFreqNew</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>ab0db8e2a59279103c3ae5c9d300bc46f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bRefine</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>ac0fa965baa14fa3bd0ed5cfda43532a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>state</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a830b7228265ad69f85606f25cf6149ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>xoscPending</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>aec0ef1e5ac5e500393e7b5f0fa288105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>calLF</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a9d835dc2ab22d4440a6217063dca0eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>auxHwiState</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a53d7535993e9a0fdc2790eb066ce1c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>busyCal</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>af77fd1c713c6425c7325c3717cbfcf76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>calStep</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a7e898370102e00cae9029f70108a212a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>firstLF</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>aa77f0fd172ce7d1aced10499ca16636b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enablePolicy</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>aadf21f98766029cf3cc9b9b1c88df8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>ad8997e3cfcac9bfd9c8558fe88af4e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>constraintCounts</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>aea286d524dd4afd4b9a8bf2b8954e2c8</anchor>
      <arglist>[PowerCC26X2_NUMCONSTRAINTS]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>resourceCounts</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a4243dae7fe4edb3af11b873370c83191</anchor>
      <arglist>[PowerCC26X2_NUMRESOURCES]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int(*</type>
      <name>resourceHandlers</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>a461124af4372059b20816992b49d1456</anchor>
      <arglist>[3])(unsigned int)</arglist>
    </member>
    <member kind="variable">
      <type>Power_PolicyFxn</type>
      <name>policyFxn</name>
      <anchorfile>struct_power_c_c26_x2___module_state.html</anchorfile>
      <anchor>ab2b77cb5c15870503315da4c00aea5f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC26XX_Config</name>
    <filename>struct_power_c_c26_x_x___config.html</filename>
    <member kind="variable">
      <type>Power_PolicyInitFxn</type>
      <name>policyInitFxn</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>aa5fa2edd433b84788c63277a21bc8dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_PolicyFxn</type>
      <name>policyFxn</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>acd4011995544865f832440e9d869b563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool(*</type>
      <name>calibrateFxn</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>a92f68736067cceef7bbc32408b5bec96</anchor>
      <arglist>)(unsigned int)</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maxStandbyDuration</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>a2984f1a5a8939c690067bcaa82f8edba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>vddrRechargeMargin</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>a7878a56b4a04b55c66e3a32f102fb525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableMaxStandbyDuration</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>a34214625d9b49848b0297e40d4af8188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enablePolicy</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>a0dabcd65e4700189af683ce0f54e8479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>calibrateRCOSC_LF</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>ae5541ad9e9fb883e9bdf9c68d1c0226b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>calibrateRCOSC_HF</name>
      <anchorfile>struct_power_c_c26_x_x___config.html</anchorfile>
      <anchor>a896b6c56c0d1be28de7ce4ef09fe616a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC26XX_ModuleState</name>
    <filename>struct_power_c_c26_x_x___module_state.html</filename>
    <member kind="variable">
      <type>List_List</type>
      <name>notifyList</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ab7a30da55e342a00e49baab649ad1fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>constraintMask</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ad500e504e794086911ecad33c3134f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>clockObj</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ae62e5716b9434790354784fa05b73482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>xoscClockObj</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>aa5af578b28c4ec73a9e6a74b4d7ca4c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>lfClockObj</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ab954ff9d624f9b75fe313a3f0e10311c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>calClockStruct</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a5db1ac70532dcfd9b52948e0be8c4538</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwiStruct</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a13cca41139bf5dcee868fe03782c1446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nDeltaFreqCurr</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>aa85213d5686bba5b7b214207deb27637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimCurr</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a964421fa101fbf783bcaf061380614ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimFractCurr</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>afa3ea38f50ef03b11159820b2ea40385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimNew</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a88f64a21ba0bf629a4a053acc7437b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nCtrimFractNew</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ae73577d0ac8b0e0ac6066a51da2e2069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nRtrimNew</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a72a304c2f61537e3419cf94ae9428dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nRtrimCurr</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a71ecdf485b5ac83bda9f50683912cf80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>nDeltaFreqNew</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a5ba698f9b08cd1fa921a376c386f4002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bRefine</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>abbeb88a5424af553d50baa10acad9804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>state</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a94573418a672016214ff7c62dc27bc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>xoscPending</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a89a7943515d2c6eb7da22a2017c3891c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>calLF</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>aac1b3efea8ce636fe2ccfdc97fe03aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>hwiState</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ae1e7421cc42f5181b00720174d81ede7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>busyCal</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a9311e19be396a5ab3c8b2d5f6bfff6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>calStep</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a45966e49f7fc38e3006ef3aa68761188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>firstLF</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a702ec4760d50a0bcb6577ff029938ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enablePolicy</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ad1d986fdb2bc8fe27a4d5341eaa059ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a587f4424044334445086b426953a3e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>constraintCounts</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>af141040006ff722deab0a60947de14c9</anchor>
      <arglist>[PowerCC26XX_NUMCONSTRAINTS]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>resourceCounts</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>af13aa7f8e1d035365a1f2b8b30e57a61</anchor>
      <arglist>[PowerCC26XX_NUMRESOURCES]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int(*</type>
      <name>resourceHandlers</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>ac8d49a96f7ae612895080a07378d3dbd</anchor>
      <arglist>[3])(unsigned int)</arglist>
    </member>
    <member kind="variable">
      <type>Power_PolicyFxn</type>
      <name>policyFxn</name>
      <anchorfile>struct_power_c_c26_x_x___module_state.html</anchorfile>
      <anchor>a11876366e8d0d07879231d033ab31e57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWM_Config_</name>
    <filename>struct_p_w_m___config__.html</filename>
    <member kind="variable">
      <type>PWM_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_p_w_m___config__.html</anchorfile>
      <anchor>a36b812aeed91072b4a917e7342278d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_p_w_m___config__.html</anchorfile>
      <anchor>ab0f7f8412e33fb690759b836069356a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_p_w_m___config__.html</anchorfile>
      <anchor>a93a946b1ade9f430d4d1aae474e41f6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWM_FxnTable_</name>
    <filename>struct_p_w_m___fxn_table__.html</filename>
    <member kind="variable">
      <type>PWM_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>aa762279c4052544260de1030664f2ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>a0fa8ed3f89c78c39be160efedf5344d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>a1698c7ea2dc391cd3b445c1ac532ce3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>a29e0d64f10ef19b8729f8fec2a07f9e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_SetDutyFxn</type>
      <name>setDutyFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>a0f886757fbe16e89545ab64b8d5c4ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_SetPeriodFxn</type>
      <name>setPeriodFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>a47c0e665d032075f42dd41841a0eb9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_SetDutyAndPeriodFxn</type>
      <name>setDutyAndPeriodFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>a3bce9431abacba278ae460c511f37940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_StartFxn</type>
      <name>startFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>aca222c4acfc632a9855fdfdefb833780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_StopFxn</type>
      <name>stopFxn</name>
      <anchorfile>struct_p_w_m___fxn_table__.html</anchorfile>
      <anchor>aa7ab83d44d13aa21391180e3cc39a687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWM_Params</name>
    <filename>struct_p_w_m___params.html</filename>
    <member kind="variable">
      <type>PWM_Period_Units</type>
      <name>periodUnits</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>a9b31d4a26ee33211085b5a9a983f6f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>periodValue</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>abb64879de715fcfa14e9c756f279b972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Duty_Units</type>
      <name>dutyUnits</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>aa8616ac3e487fe6b46fd0486c10873d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dutyValue</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>ad0ed6daabdc32e1eecfae60ebe13e975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_IdleLevel</type>
      <name>idleLevel</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>adc9d7e702b3e45b68e448ad4811a3691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>a37396e0fa9aac45d2a8292cf5d653471</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWMTimerCC26XX_HwAttrs</name>
    <filename>struct_p_w_m_timer_c_c26_x_x___hw_attrs.html</filename>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>pwmPin</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___hw_attrs.html</anchorfile>
      <anchor>a51bf646e2e56d0dbe1c3b79af314af08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>gpTimerUnit</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___hw_attrs.html</anchorfile>
      <anchor>a82c34a1970bf960c04b72f28ecebe1c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWMTimerCC26XX_Object</name>
    <filename>struct_p_w_m_timer_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>a441df1ad70adabb3de769358d301416c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>ab3d97daf91d574c8e6d495a5d0229c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Period_Units</type>
      <name>periodUnit</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>aa844c8a863f84a9775dbabb0241b41fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>periodValue</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>ad725c417ec82ce43ae3d37d7c6fbb204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>periodCounts</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>ae502cdc25152927e72670c6d89d26fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Duty_Units</type>
      <name>dutyUnit</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>aa1dc95a5203db4aa57210b66d75827fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dutyValue</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>ab32ceff831d4f1c28fea0dcd51694c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dutyCounts</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>a212dc0c3c4ae31c8bc285add11ee31a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_IdleLevel</type>
      <name>idleLevel</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>ad185ce1a42838b87b520ba3ca066ccc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPTimerCC26XX_Handle</type>
      <name>hTimer</name>
      <anchorfile>struct_p_w_m_timer_c_c26_x_x___object.html</anchorfile>
      <anchor>a8ccd272d60d7cae93d6ab39d50b3a175</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_AccessParams</name>
    <filename>struct_r_f___access_params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>duration</name>
      <anchorfile>struct_r_f___access_params.html</anchorfile>
      <anchor>a0d6adb1c309962431a8b777a44325ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>startTime</name>
      <anchorfile>struct_r_f___access_params.html</anchorfile>
      <anchor>a4ec6ddde388c80d5e2d4b3d8311fcaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Priority</type>
      <name>priority</name>
      <anchorfile>struct_r_f___access_params.html</anchorfile>
      <anchor>a9ed4a1af207a7f63beb8cfebdd940894</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_Cmd_s</name>
    <filename>struct_r_f___cmd__s.html</filename>
    <member kind="variable">
      <type>List_Elem</type>
      <name>_elem</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>ae804e9344ef33dcd59f06c0caa670101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Callback volatile</type>
      <name>pCb</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a7c32ce7d9fc2c6841abea3968dd47348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Op *</type>
      <name>pOp</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a160b049a5b931d088cfdffd3b4606793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Object *</type>
      <name>pClient</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a8c37b92c67e04e09a17d1fea7b0f2927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_EventMask</type>
      <name>bmEvent</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>ab479d9528352a37e972cf485d5424c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_EventMask</type>
      <name>pastifg</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>ae53debe48792ca34db5b877be6854ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_EventMask</type>
      <name>rfifg</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a512524fc0224ca1d6dd9f7769825cc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>startTime</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>aa15d245c5ea5c502434b079bb08a7403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>endTime</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>ae72550b1a46bfbfd98fb504e34bf746c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>allowDelay</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a09c34818653610e511de4d3c13620f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_CmdHandle</type>
      <name>ch</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a9e812943c3612b40d4e4de8396a34093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Priority</type>
      <name>ePri</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>ab0a39f0c8e45f7dd41b9db35858fc9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t volatile</type>
      <name>flags</name>
      <anchorfile>struct_r_f___cmd__s.html</anchorfile>
      <anchor>a3ea224589801e2de3088545b6567cdc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>RF_InfoVal</name>
    <filename>union_r_f___info_val.html</filename>
    <member kind="variable">
      <type>RF_CmdHandle</type>
      <name>ch</name>
      <anchorfile>union_r_f___info_val.html</anchorfile>
      <anchor>a19bf3d8f9d5a9d3b3ec34fd6238f6564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>availRatCh</name>
      <anchorfile>union_r_f___info_val.html</anchorfile>
      <anchor>ae380eea33c0f34396c006a85e97baa71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bRadioState</name>
      <anchorfile>union_r_f___info_val.html</anchorfile>
      <anchor>ae8142037b3833868a4e6b7498c4a631c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Handle</type>
      <name>pClientList</name>
      <anchorfile>union_r_f___info_val.html</anchorfile>
      <anchor>a1ca81db912d2929d27726ae29eb65c79</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>phySwitchingTimeInUs</name>
      <anchorfile>union_r_f___info_val.html</anchorfile>
      <anchor>a3593c8e569ae4cb95561fc47e587817f</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pScheduleMap</name>
      <anchorfile>union_r_f___info_val.html</anchorfile>
      <anchor>ae33dc7b74020dfde9708504e46ac634c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_Mode</name>
    <filename>struct_r_f___mode.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rfMode</name>
      <anchorfile>struct_r_f___mode.html</anchorfile>
      <anchor>a4d6945bf75c2af234159e60ae6ef843a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>cpePatchFxn</name>
      <anchorfile>struct_r_f___mode.html</anchorfile>
      <anchor>a2bd4297cca8b9f0fb38aae44d0ae93a5</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>mcePatchFxn</name>
      <anchorfile>struct_r_f___mode.html</anchorfile>
      <anchor>ae3fe98ef86a6b3e1b0729288c4e8e94a</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>rfePatchFxn</name>
      <anchorfile>struct_r_f___mode.html</anchorfile>
      <anchor>a9ce1fcc0fc102f664127d8f8f21f01b9</anchor>
      <arglist>)(void)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_Object</name>
    <filename>struct_r_f___object.html</filename>
  </compound>
  <compound kind="struct">
    <name>RF_Params</name>
    <filename>struct_r_f___params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>nInactivityTimeout</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>a01d3752799ea4318bbf9d1384cb49b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>nPowerUpDuration</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>a58dc682aa09acabe6411ea186dd3aebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Callback</type>
      <name>pPowerCb</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>ae683ebc129d40a11fb9ec7e371f1e11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Callback</type>
      <name>pErrCb</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>ab7be231b23fab2503b8c54b474fba74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>nPowerUpDurationMargin</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>a848ebeabce42f87f6a1d4f51f908dbe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>nPhySwitchingDurationMargin</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>a726d5af03c6c3b7c81244bea6a8de276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_ClientCallback</type>
      <name>pClientEventCb</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>a23e520f0583d79783f8bf54a491fc26e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_ClientEventMask</type>
      <name>nClientEventMask</name>
      <anchorfile>struct_r_f___params.html</anchorfile>
      <anchor>ac63730611b6c615fe40a17b4dc5eb021</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>RF_RadioSetup</name>
    <filename>union_r_f___radio_setup.html</filename>
    <member kind="variable">
      <type>rfc_command_t</type>
      <name>commandId</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>a7849a5bb5dc28c798cc55793f6c347dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_RADIO_SETUP_t</type>
      <name>common</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>afd03d9690df15d5cca3e82c4ff25ba58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_BLE5_RADIO_SETUP_t</type>
      <name>ble5</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>add11d56e4882de38a71bc75c3d38cb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_PROP_RADIO_SETUP_t</type>
      <name>prop</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>afd693ac0735adf77800aa285124bd03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_PROP_RADIO_DIV_SETUP_t</type>
      <name>prop_div</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>ae5b63db8408d7cd3cc773f7c38ea0545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_RADIO_SETUP_PA_t</type>
      <name>common_pa</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>a1579f53ccbf1bbf14c1b7260a5ed56a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_BLE5_RADIO_SETUP_PA_t</type>
      <name>ble5_pa</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>aab942e0b3ee6bc1f3109728303601e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_PROP_RADIO_SETUP_PA_t</type>
      <name>prop_pa</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>acdfbf2a3a7906e1f47f22aee025a351d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rfc_CMD_PROP_RADIO_DIV_SETUP_PA_t</type>
      <name>prop_div_pa</name>
      <anchorfile>union_r_f___radio_setup.html</anchorfile>
      <anchor>a8cf1aa6395a7052d57ca66e3cab1794f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_RatConfigCapture</name>
    <filename>struct_r_f___rat_config_capture.html</filename>
    <member kind="variable">
      <type>RF_RatCallback</type>
      <name>callback</name>
      <anchorfile>struct_r_f___rat_config_capture.html</anchorfile>
      <anchor>a3570c9f346bd87a6f81b59b70e8de0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_RatHandle</type>
      <name>channel</name>
      <anchorfile>struct_r_f___rat_config_capture.html</anchorfile>
      <anchor>a7a46abf1a585b215f7e62087cdb9c901</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_RatCaptureSource</type>
      <name>source</name>
      <anchorfile>struct_r_f___rat_config_capture.html</anchorfile>
      <anchor>a97d47066ca0bac9c5aab53a7c0424e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_RatCaptureMode</type>
      <name>captureMode</name>
      <anchorfile>struct_r_f___rat_config_capture.html</anchorfile>
      <anchor>adff5ee83e863f7a23f288b3c229b12eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_RatCaptureRepetition</type>
      <name>repeat</name>
      <anchorfile>struct_r_f___rat_config_capture.html</anchorfile>
      <anchor>ac655323156a5d790d30dd4d2879a0d5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_RatConfigCompare</name>
    <filename>struct_r_f___rat_config_compare.html</filename>
    <member kind="variable">
      <type>RF_RatCallback</type>
      <name>callback</name>
      <anchorfile>struct_r_f___rat_config_compare.html</anchorfile>
      <anchor>a07cbf5e6902c168024921db4d520d231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_RatHandle</type>
      <name>channel</name>
      <anchorfile>struct_r_f___rat_config_compare.html</anchorfile>
      <anchor>ac9d3979d011cb7554280d0a03f5f6929</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_r_f___rat_config_compare.html</anchorfile>
      <anchor>a28b5f51f9aa9b8c61e2cf9205ffc97eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_RatConfigOutput</name>
    <filename>struct_r_f___rat_config_output.html</filename>
    <member kind="variable">
      <type>RF_RatOutputMode</type>
      <name>mode</name>
      <anchorfile>struct_r_f___rat_config_output.html</anchorfile>
      <anchor>acba02cc8bff8335605565dcee641a7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_RatOutputSelect</type>
      <name>select</name>
      <anchorfile>struct_r_f___rat_config_output.html</anchorfile>
      <anchor>acf115f92f8c930f3964fda9ae5b50bca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_ScheduleCmdParams</name>
    <filename>struct_r_f___schedule_cmd_params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>endTime</name>
      <anchorfile>struct_r_f___schedule_cmd_params.html</anchorfile>
      <anchor>ae4244a807352c8c93def2d39bbbd080e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Priority</type>
      <name>priority</name>
      <anchorfile>struct_r_f___schedule_cmd_params.html</anchorfile>
      <anchor>a809078fc59bdf91f81ef390da0047537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>allowDelay</name>
      <anchorfile>struct_r_f___schedule_cmd_params.html</anchorfile>
      <anchor>aa52c58bb63181c248966b0bd67c76975</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_ScheduleMap</name>
    <filename>struct_r_f___schedule_map.html</filename>
    <member kind="variable">
      <type>RF_ScheduleMapElement</type>
      <name>accessMap</name>
      <anchorfile>struct_r_f___schedule_map.html</anchorfile>
      <anchor>a62346d847edaeb55eba3288013fe69bc</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>RF_ScheduleMapElement</type>
      <name>commandMap</name>
      <anchorfile>struct_r_f___schedule_map.html</anchorfile>
      <anchor>a3ed09257f9e0ed0eeb3d7ac9f511a9fa</anchor>
      <arglist>[8]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_ScheduleMapElement</name>
    <filename>struct_r_f___schedule_map_element.html</filename>
    <member kind="variable">
      <type>RF_CmdHandle</type>
      <name>ch</name>
      <anchorfile>struct_r_f___schedule_map_element.html</anchorfile>
      <anchor>a8c96b7655968eea04187f2f864c7dd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Handle</type>
      <name>pClient</name>
      <anchorfile>struct_r_f___schedule_map_element.html</anchorfile>
      <anchor>aaba31f986c1826ab3a44fba106caca4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>startTime</name>
      <anchorfile>struct_r_f___schedule_map_element.html</anchorfile>
      <anchor>a114e912b54edf47b1ae5b02c36a91f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>endTime</name>
      <anchorfile>struct_r_f___schedule_map_element.html</anchorfile>
      <anchor>a615ed3c74407996016f69a2d01a66ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_Priority</type>
      <name>priority</name>
      <anchorfile>struct_r_f___schedule_map_element.html</anchorfile>
      <anchor>aec3c01a661e746e18a525d5516c88498</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_TxPowerTable_Entry</name>
    <filename>struct_r_f___tx_power_table___entry.html</filename>
    <member kind="variable">
      <type>int8_t</type>
      <name>power</name>
      <anchorfile>struct_r_f___tx_power_table___entry.html</anchorfile>
      <anchor>a81d77b34e43baf03283895487bdc983d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_TxPowerTable_Value</type>
      <name>value</name>
      <anchorfile>struct_r_f___tx_power_table___entry.html</anchorfile>
      <anchor>ab48bd443e251a47fc554caf5ab7976ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RF_TxPowerTable_Value</name>
    <filename>struct_r_f___tx_power_table___value.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rawValue</name>
      <anchorfile>struct_r_f___tx_power_table___value.html</anchorfile>
      <anchor>a8636d2f86a74329740cd19242ebae1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>__dummy</name>
      <anchorfile>struct_r_f___tx_power_table___value.html</anchorfile>
      <anchor>a0aa4162c0537124893ec5d705e90c407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>paType</name>
      <anchorfile>struct_r_f___tx_power_table___value.html</anchorfile>
      <anchor>a6a14d4aba3c660a461c4c4d16384307d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RFCC26XX_HWAttrsV2</name>
    <filename>struct_r_f_c_c26_x_x___h_w_attrs_v2.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>hwiPriority</name>
      <anchorfile>struct_r_f_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a552a6992c1d1e8ff3e5f0876d80b734f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_r_f_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>adcb29352c7c6db61035bb34242175d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>xoscHfAlwaysNeeded</name>
      <anchorfile>struct_r_f_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a0332f985284e8397667e477605bb1bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_GlobalCallback</type>
      <name>globalCallback</name>
      <anchorfile>struct_r_f_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a7b47cefffa594a19d5f45d676fa09491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_GlobalEventMask</type>
      <name>globalEventMask</name>
      <anchorfile>struct_r_f_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a43e0d7e59ef95cfad107009deef20c30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RFCC26XX_SchedulerPolicy</name>
    <filename>struct_r_f_c_c26_x_x___scheduler_policy.html</filename>
    <member kind="variable">
      <type>RF_SubmitHook</type>
      <name>submitHook</name>
      <anchorfile>struct_r_f_c_c26_x_x___scheduler_policy.html</anchorfile>
      <anchor>ab8ac174e422417db1f65184727d099b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RF_ConflictHook</type>
      <name>conflictHook</name>
      <anchorfile>struct_r_f_c_c26_x_x___scheduler_policy.html</anchorfile>
      <anchor>a15a0cdf6e8add3721396f26ba6580c89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RingBuf_Object</name>
    <filename>struct_ring_buf___object.html</filename>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>buffer</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>a3aabec3f4cf04dbc4083548e830d8f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>length</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>ac7102de5f975cd743e9618625f6028c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>count</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>ae0c8cf16fcfb34570c11db5f5af7aaf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>head</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>a39b92dd09345c4799adf2de4920af5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>tail</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>ab792bbd6ff48d13ae09eedc33bb79289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxCount</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>afdea48daa7a86ad212139842569b8a3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SD_Config_</name>
    <filename>struct_s_d___config__.html</filename>
    <member kind="variable">
      <type>SD_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_s_d___config__.html</anchorfile>
      <anchor>a15df01acc4194fe38acd711e668840da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_s_d___config__.html</anchorfile>
      <anchor>afe674251049a6d824b2a65dfdaf446ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_s_d___config__.html</anchorfile>
      <anchor>aead18f144f5939a3ef9501b550fe63a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SD_FxnTable_</name>
    <filename>struct_s_d___fxn_table__.html</filename>
    <member kind="variable">
      <type>SD_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>a5f3ed0d8d705b13e2c296fdbfe44b257</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>a8ecd0d61cf03056bee2ad5d9c414fbd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_getNumSectorsFxn</type>
      <name>getNumSectorsFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>a08f133aa3bdcd6c203ced3736b0c3f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_getSectorSizeFxn</type>
      <name>getSectorSizeFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>aca2e09f5ff3b93cc8239fb6f4d59688d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>a075fac764e9ec6d4773e51b2b07c788a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_InitializeFxn</type>
      <name>initializeFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>ac1a4b78131c865e04a3f59a4cf07d8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>a80501a095bcf180d012b21ecfc8cbbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>a662ee9e634eafa87985e612d3a552321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_s_d___fxn_table__.html</anchorfile>
      <anchor>ae18c6f6d1153dfb49aaac7cf2defff8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SD_Params_</name>
    <filename>struct_s_d___params__.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_s_d___params__.html</anchorfile>
      <anchor>a55c09a81285439878750a2e30e523325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDFatFS_Config_</name>
    <filename>struct_s_d_fat_f_s___config__.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_s_d_fat_f_s___config__.html</anchorfile>
      <anchor>a167caa8e03b8bbca8a094b29473db303</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDFatFS_Object_</name>
    <filename>struct_s_d_fat_f_s___object__.html</filename>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>driveNum</name>
      <anchorfile>struct_s_d_fat_f_s___object__.html</anchorfile>
      <anchor>a5229d7b39c9dd4a2cc3e17a14cb1c23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DSTATUS</type>
      <name>diskState</name>
      <anchorfile>struct_s_d_fat_f_s___object__.html</anchorfile>
      <anchor>a6734f09df3533a39262c747ad632aebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FATFS</type>
      <name>filesystem</name>
      <anchorfile>struct_s_d_fat_f_s___object__.html</anchorfile>
      <anchor>a48b08817d1657903832153b411534620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_Handle</type>
      <name>sdHandle</name>
      <anchorfile>struct_s_d_fat_f_s___object__.html</anchorfile>
      <anchor>ace21c37010b50456e35a0dcda69766eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDSPI_HWAttrs</name>
    <filename>struct_s_d_s_p_i___h_w_attrs.html</filename>
  </compound>
  <compound kind="struct">
    <name>SDSPI_HWAttrs_</name>
    <filename>struct_s_d_s_p_i___h_w_attrs__.html</filename>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_s_d_s_p_i___h_w_attrs__.html</anchorfile>
      <anchor>a49012f237e2f4237ea94776d597ed313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>spiCsGpioIndex</name>
      <anchorfile>struct_s_d_s_p_i___h_w_attrs__.html</anchorfile>
      <anchor>afae50a1f6cd05c9fe6c8410adc73a620</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDSPI_Object_</name>
    <filename>struct_s_d_s_p_i___object__.html</filename>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>lockSem</name>
      <anchorfile>struct_s_d_s_p_i___object__.html</anchorfile>
      <anchor>a4dc3d583ce7f81425a1a9012aa4e188e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>spiHandle</name>
      <anchorfile>struct_s_d_s_p_i___object__.html</anchorfile>
      <anchor>af57a746a2adf123993f976b45a3f08cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_CardType</type>
      <name>cardType</name>
      <anchorfile>struct_s_d_s_p_i___object__.html</anchorfile>
      <anchor>a7fb7285cc115f0f54bb5d66d8f86d818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_s_d_s_p_i___object__.html</anchorfile>
      <anchor>a8eddf37822d7b5e9da5c0b8f29fa7856</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SHA2_Config</name>
    <filename>struct_s_h_a2___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_s_h_a2___config.html</anchorfile>
      <anchor>ac2b5fd13aeea22e6337bdb55206810fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_s_h_a2___config.html</anchorfile>
      <anchor>a4f78c4a20fea50a67a56a71e7235fee1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SHA2_Params</name>
    <filename>struct_s_h_a2___params.html</filename>
    <member kind="variable">
      <type>SHA2_HashType</type>
      <name>hashType</name>
      <anchorfile>struct_s_h_a2___params.html</anchorfile>
      <anchor>af4e727bc27c0e8841d3e29733766e059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SHA2_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_s_h_a2___params.html</anchorfile>
      <anchor>ab8486d42556be0df51c3450b0ccb151d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SHA2_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_s_h_a2___params.html</anchorfile>
      <anchor>ad443e5775dba2d44238eff1595d4af78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_s_h_a2___params.html</anchorfile>
      <anchor>aeca064ee25e6e6d3e6383fe8d54b9185</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SHA2CC26X2_HWAttrs</name>
    <filename>struct_s_h_a2_c_c26_x2___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_s_h_a2_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>aaaa92213ba97f374e25b18e33198e745</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_Config_</name>
    <filename>struct_s_p_i___config__.html</filename>
    <member kind="variable">
      <type>SPI_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_s_p_i___config__.html</anchorfile>
      <anchor>a422fb4ed4cc7ceb4d8f7d03d9f37639f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_s_p_i___config__.html</anchorfile>
      <anchor>a99ceb1a7284c7f76c6ce19f599721df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_s_p_i___config__.html</anchorfile>
      <anchor>aa0e01417e2e18ecf220f5f580882b94e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_FxnTable</name>
    <filename>struct_s_p_i___fxn_table.html</filename>
    <member kind="variable">
      <type>SPI_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a4cfaf232f1b8c27f570a7e48f31cdffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a8823765c2e1d303e18da6bec1a432210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>aa4a0b45347320aed418d45cdb6609664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a938876d892f41db4a3837f93e1ef04c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_TransferFxn</type>
      <name>transferFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>ae4294e8e6273b581459432386439ca88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_TransferCancelFxn</type>
      <name>transferCancelFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a50f7f21536780c912dedf32c0918034c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_Params</name>
    <filename>struct_s_p_i___params.html</filename>
    <member kind="variable">
      <type>SPI_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a16dbcc3768a01fb7deae25b48fc0d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>transferTimeout</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a600801907cf396a96825eaf69781913a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a68d1d610da6a6bf299121b939ef2a352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Mode</type>
      <name>mode</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>abe5eca64adf4ca96bed206a271d9b157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bitRate</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>ab3f035044fdbe75adac8c1d729d8cf20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dataSize</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a30722b1de5e3b089ecf0c669da42ed2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_FrameFormat</type>
      <name>frameFormat</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a67b5ebb8ec72796a0260c427c91cc093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a909f58a310514d16b4fee1b51033d976</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_Transaction</name>
    <filename>struct_s_p_i___transaction.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>count</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>ad049d6a900c4bdb59a5ee8ce3d5bced2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>txBuf</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>a9461a248f1cceb4048668d44b323a0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>rxBuf</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>a214f57d7809c875fb9456a62a406e041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>ac47daaa10705d748ace918a098aa1945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Status</type>
      <name>status</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>aa244504b2384411f7de17340be62128a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>nextPtr</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>a3857151eff782605a3b3c4edeb884130</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPICC26X2DMA_HWAttrs</name>
    <filename>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a6ffb243ce20d6ea290c7bcbb3112ebec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intNum</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>acb8a020b5721b1057ac20ea52d1e8d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a9b90725d7784136be4bfa7bf94be3a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a72cbd5d379f1e808dbdec750d66ddfb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC26XX_Resource</type>
      <name>powerMngrId</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a384d17cbbda7262b259f705f7c988a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>defaultTxBufValue</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>ad21e0894d771e9c9a0b78ac739543a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rxChannelBitMask</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>ac60297b47b15ead053d01d00e2964c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>txChannelBitMask</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>ab389acc2cea2c998c4c04f72bc48c82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>mosiPin</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a7c7c2d781e3514bce346bcb07e7ae97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>misoPin</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>ae7823a68d7728550b7fbad4efbb3f3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>clkPin</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>afedc394dcdbab6e7fe0527734f2bdc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>csnPin</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>aba89c3c3011d28e77783187b3fec1f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>minDmaTransferSize</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>aafcf5e92ef5b7cbd9fb857b43b2f4cee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPICC26X2DMA_Object</name>
    <filename>struct_s_p_i_c_c26_x2_d_m_a___object.html</filename>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a7f3edd58588d88e22dbd6fc0e7516d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ac160f1a76fda44dc0ebb021dd687fd1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>af8141a5b85ae0cbdb3655cf518387dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>spiPostObj</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a147b4acc503950aab4c92647b882fdc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>swi</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a3a511419c06d5f07e66e58bec1201828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>transferComplete</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ab224c283780f21b6fd20b9446980d49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a4cc56d1ddc40e385d0e30162e3a97671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Transaction *</type>
      <name>headPtr</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a1299c9e4339c672ec81cb5e01520c77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Transaction *</type>
      <name>tailPtr</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a9d6a1de968cf6a397a73cdc9c5d1162c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Transaction *</type>
      <name>completedTransfers</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>aabdb2381fa725d487c3d811e6bc4784d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC26XX_Handle</type>
      <name>udmaHandle</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a5908f8b17f72efa4e6b479731d2a351e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>framesQueued</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ad3dba2e9a489559415448a419ffc19f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>framesTransferred</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a3282855d1f11eab3559a04c02d2a1d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>priTransferSize</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a1424887f888234122a90807b43562a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>altTransferSize</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a9eed065474de19726bf6a4b499b28b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>activeChannel</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>af7807d7f05996354fde2c98da2d180ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bitRate</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a0b4ae4efb52aec9e80ce17e94aa3beea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dataSize</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>af59f74596d22143b292558aefc1e5bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>transferTimeout</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a7cf8cb062e9430c90312fc57945799fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>busyBit</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>acf714c9e6b4287145bdcc725dace6ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rxScratchBuf</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>add5356db32d00e7b0e4668700010d6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>txScratchBuf</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ada37b2ae0b867564c635d4b2a09afe5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a9e8761b56588b9d24397cfaa6543a9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Mode</type>
      <name>mode</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ae0c98fa3c42e354ee3aafffd85c4177f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>format</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ad8caf96a11276521ec251a25c1b3bd16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>csnPin</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>ae07d4793b977289d7ea90dae691c47cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPICC26X2DMA_ReturnPartial</type>
      <name>returnPartial</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a7f47f8cfe6f2b3aeec12734417be66c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>a325d43423ec5cd191e1f5c8d4ff3c4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>manualStart</name>
      <anchorfile>struct_s_p_i_c_c26_x2_d_m_a___object.html</anchorfile>
      <anchor>aa26588bfa54c3062ecc6d99e20410aab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPICC26XXDMA_HWAttrsV1</name>
    <filename>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a9599bdd7fa7cd54ba21abd1620ff9b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intNum</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>acd8e80fe8f87b4dd9dc2c4dd67154b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>adf00bea7af47e0a9710abbb678f2a5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ae85e096957fdda594aef03bd11f3ecc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC26XX_Resource</type>
      <name>powerMngrId</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>abb44579acb05087acf70a9f0f9b07a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>defaultTxBufValue</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a174e951d2fbfe1336e169146e4719cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rxChannelBitMask</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ab398cf4aa44a1856c8b8b2d874e838e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>txChannelBitMask</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a79459502de9e2ce20c4151a6ceb987f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>mosiPin</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>aa67bd42df961080c01653b99a4d475a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>misoPin</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a420ee9fc74e0a5c86f5461ecea484bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>clkPin</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>adcdbba63f9164524601115195754ccaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>csnPin</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ae6f53f93617b30ba7a3026cac95822e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>minDmaTransferSize</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a5f6ef34d364b4037db08ee3afcb95135</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPICC26XXDMA_Object</name>
    <filename>struct_s_p_i_c_c26_x_x_d_m_a___object.html</filename>
    <member kind="variable">
      <type>SPI_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a12fcb093793c5a34ff32f9e29a3d7cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>transferTimeout</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a6a89c25b77087f8298df74b52fde9615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>acee695558ae9a3f4108d8322c41b5c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Mode</type>
      <name>mode</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>acd71f040d34bcc9de82225b8e99bc7a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>bitRate</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a056c615ea06764de3732a88bc0933422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>dataSize</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>ad5f703751ac0581fd69ad7b984bea44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_FrameFormat</type>
      <name>frameFormat</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a8a73c6d84d6a8080f76e7b97421d2733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a0f2533663ef71ed6e658a5b2d0927a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>swi</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a14e035d45fe4f48f401f8cbd116c3f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>transferComplete</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a03b535169583abde7f8af0262df40de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Transaction *</type>
      <name>currentTransaction</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a4a6ed13c8b6215e83ba22084f1ffc69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>amtDataXferred</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a8de29bc4b8bf578cceff93223af68aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>currentXferAmt</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a323d0ba757d3a8a62072e4d65f9b6572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPICC26XXDMA_FrameSize</type>
      <name>frameSize</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>add4190b9bb9d623e4593056021ec19a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Id</type>
      <name>csnPin</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a436d2148d95d8cbb1f4ab7750ea4e081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a2bf05a9ab13570614b205faef838a60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>pinHandle</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a253e7758ec60b0deb706c12bf2cac7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC26XX_Handle</type>
      <name>udmaHandle</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>ad1b5299f66bd0ed6a1feb66bb17dbb70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>returnPartial</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>aaad712b779c3c23a1a9c7b4e444c82fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>scratchBuf</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a9d4b85fd8a20f01c8ef9d83818394678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>spiPreFxn</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>accb678d98cf66ed2d15a6ddf9ea993ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>spiPostFxn</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a1f7b7de23148a962619517a66132a602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>spiPreObj</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>aaf7de912547eb0e0d6040e816329d942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>spiPostObj</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a0507bf0f4300ed38ede4a414a619a8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>spiPowerConstraint</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>adbcda45a5bec189d12b7122426126181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_s_p_i_c_c26_x_x_d_m_a___object.html</anchorfile>
      <anchor>a54ded097b995c036bd7e12fc2e00139f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_config</name>
    <filename>structspiffs__config.html</filename>
    <member kind="variable">
      <type>spiffs_read</type>
      <name>hal_read_f</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a2d2cc2d17896ba4f5e78c524cd7da76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_write</type>
      <name>hal_write_f</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>ab9402faf21097e938cb86b70efab38b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_erase</type>
      <name>hal_erase_f</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a86af9c6671604e9c6e08cfe6c3fdfaeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>phys_size</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>ad1746f2435254dd38ebdbf167a3289e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>phys_addr</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>ad14f81b04bcc96bb09909015e06a5b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>phys_erase_block</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a5d33e08b152880f482c976f897a1632f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>log_block_size</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>afda08e08a059b922706188f6f2c557ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>log_page_size</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a2525c28d372c9d46152b9997972c25fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_DIR</name>
    <filename>structspiffs___d_i_r.html</filename>
    <member kind="variable">
      <type>spiffs *</type>
      <name>fs</name>
      <anchorfile>structspiffs___d_i_r.html</anchorfile>
      <anchor>ad006821d5233083eaf04fa13fae90d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_block_ix</type>
      <name>block</name>
      <anchorfile>structspiffs___d_i_r.html</anchorfile>
      <anchor>a822b1a3cdc78d84d377af471cde6cbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>entry</name>
      <anchorfile>structspiffs___d_i_r.html</anchorfile>
      <anchor>a14d25754d25e2dab074381fd20395c2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_dirent</name>
    <filename>structspiffs__dirent.html</filename>
    <member kind="variable">
      <type>spiffs_obj_id</type>
      <name>obj_id</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>adb9c8e8a7c378611c58c02c4a28a9d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>name</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>abd0b462b485b05eb9ee1703b1ee5beab</anchor>
      <arglist>[SPIFFS_OBJ_NAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>spiffs_obj_type</type>
      <name>type</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>a38414e80ef79bb9dcf421555e9435f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>size</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>a5cbe52f4c2bb069e109857246decc01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_page_ix</type>
      <name>pix</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>af3dd1aaf484385078fa8f171c6c9456d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_stat</name>
    <filename>structspiffs__stat.html</filename>
    <member kind="variable">
      <type>spiffs_obj_id</type>
      <name>obj_id</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a50f7d3e286b659e09498edf4e17f1daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>size</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a861b9a64014f77a01b9630278a7c2410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_obj_type</type>
      <name>type</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>ae08c958bb4b22fd9c6d576e1fea23685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_page_ix</type>
      <name>pix</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a06f9e575229aee0252974423e045fe50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>name</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a42b32d4cd1868c63f8a8598e5d888a8b</anchor>
      <arglist>[SPIFFS_OBJ_NAME_LEN]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_t</name>
    <filename>structspiffs__t.html</filename>
    <member kind="variable">
      <type>spiffs_config</type>
      <name>cfg</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a7f9247b4b84e6b6a6f3b988fdf83ba99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>block_count</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a8554c5fc24edbd495ed55da15ea172af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_block_ix</type>
      <name>free_cursor_block_ix</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a0e0cb263ec86272f5a75503d362582c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>free_cursor_obj_lu_entry</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>aa98ef3edf530c19d0847f900720f3499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_block_ix</type>
      <name>cursor_block_ix</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ab61206cd5cbcaf8ee4bcd1cdf2fb53ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cursor_obj_lu_entry</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>aaac9760dde13fbb11ba81871ecee6b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t *</type>
      <name>lu_work</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>aadc62737ea37cf850aa84f7cb0faabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t *</type>
      <name>work</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>af48f680e30ac20c12412545af0515201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t *</type>
      <name>fd_space</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a4471d7ec110042b1c68cb06311b1daf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>fd_count</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a1538b44ff998bbc79b59d5adbffeb9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s32_t</type>
      <name>err_code</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a5a2359dde97d3ce7158b0ed37ecca219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>free_blocks</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a70cd3e118549e8ec2f20a34725a91a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>stats_p_allocated</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ac567c1d29a7c3c91c8e9ad480a5f4c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>stats_p_deleted</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ad261e9db98b460b8e514ef11eaed5220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>cleaning</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a57d679557baf30480c0b435461e34f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_obj_id</type>
      <name>max_erase_count</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a98c1ac3d41d58deb2f667856901b714f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_check_callback</type>
      <name>check_cb_f</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a5eb5f40440f41dfca5e0a3aba520e4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_file_callback</type>
      <name>file_cb_f</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ab3da90414142391c3eeeb5905b7eb30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>mounted</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a542d258081a8be645319ff597cfcedd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>user_data</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a00dfd42d670514d50b7a906b75e45a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>config_magic</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>acaf98085b60c8f1a916bb4023a2bd3be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPIFFSNVS_Data_</name>
    <filename>struct_s_p_i_f_f_s_n_v_s___data__.html</filename>
    <member kind="variable">
      <type>NVS_Handle</type>
      <name>nvsHandle</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___data__.html</anchorfile>
      <anchor>ace8ae79c7417bbb05f93cd4aad152aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPIFFSNVS_Lock</type>
      <name>lock</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___data__.html</anchorfile>
      <anchor>ac00631ca202002964fdaef5d00d899cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPIFFSNVS_Lock_</name>
    <filename>struct_s_p_i_f_f_s_n_v_s___lock__.html</filename>
    <member kind="variable">
      <type>MutexP_Handle</type>
      <name>mutex</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___lock__.html</anchorfile>
      <anchor>a80a8ba22db4613ab647b69a86dacf384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>keys</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___lock__.html</anchorfile>
      <anchor>a5e104ec48b7039a3ab0e1d501068d375</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>volatile u32_t</type>
      <name>count</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___lock__.html</anchorfile>
      <anchor>a289bb44a011b127b056b774cfe041c6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TRNG_Config</name>
    <filename>struct_t_r_n_g___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_t_r_n_g___config.html</anchorfile>
      <anchor>a727d3498e892ce603992faf979ba4e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_t_r_n_g___config.html</anchorfile>
      <anchor>abfbdd16990fc3515d7642465672a7f6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TRNG_Params</name>
    <filename>struct_t_r_n_g___params.html</filename>
    <member kind="variable">
      <type>TRNG_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_t_r_n_g___params.html</anchorfile>
      <anchor>acf65c71f5b682d34aee78a772c39765e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRNG_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_t_r_n_g___params.html</anchorfile>
      <anchor>a83f59fc5c2591501c1cdcedd4a20dd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout</name>
      <anchorfile>struct_t_r_n_g___params.html</anchorfile>
      <anchor>a66b27173e274d714d5f7801f906e417c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_t_r_n_g___params.html</anchorfile>
      <anchor>a6c4dfcffcd1b6d08d9bb77bf7309bfd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TRNGCC26XX_HWAttrs</name>
    <filename>struct_t_r_n_g_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a5568241831c36fd0bccbebd9cafb71ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a02289a31d15a63a042dcc8f525aee3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplesPerCycle</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>af27bf3d39b994431e88408a9d7e18be0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TRNGCC26XX_Object</name>
    <filename>struct_t_r_n_g_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a16cf52b78704d5b405a6fcc5e8e36bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRNG_ReturnBehavior</type>
      <name>returnBehavior</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a54eb0b7622031506b10a992b5710d655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast16_t</type>
      <name>returnStatus</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a53e4a293b0e06be74331b0b1a95f499f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>entropyGenerated</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a70eef46fd95531979c9a16fb50200c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>entropyRequested</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a4bee8855d8495fd7b3bff44c830eeac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>semaphoreTimeout</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a984a479c67a8d9f79c42eed70e849f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>entropyBuffer</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a2b435aa0281ec07e8aa6d264fed793ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoKey *</type>
      <name>entropyKey</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a8bbd84c95347a7b9f41fcbb676199c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplesPerCycle</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>a81c8935912b1ca5407fe881b08d530a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRNG_CallbackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_t_r_n_g_c_c26_x_x___object.html</anchorfile>
      <anchor>ae7d1a245ce17dd7600f95a8e8b785fd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART_Config_</name>
    <filename>struct_u_a_r_t___config__.html</filename>
    <member kind="variable">
      <type>UART_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_u_a_r_t___config__.html</anchorfile>
      <anchor>a20c35d866935a4bb465c5a4d02183d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_u_a_r_t___config__.html</anchorfile>
      <anchor>a3e4817fc0e2b0225caeda2072acf56c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_u_a_r_t___config__.html</anchorfile>
      <anchor>a33679e33b65c88fc4e7c2815054923ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART_FxnTable_</name>
    <filename>struct_u_a_r_t___fxn_table__.html</filename>
    <member kind="variable">
      <type>UART_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a91b9bc339349b571f1752a85808c09e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a63d0403a3c65b008b649f0dcfa2a635d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>adf5bc14a3aee187f2af8a733832ce0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>ad83109d4aeba8cbf8dbbacac36e61fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a4f2ca105cea6f46e0b939dfacd763267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReadPollingFxn</type>
      <name>readPollingFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a863502e89af278503cdfa1d9493f4534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReadCancelFxn</type>
      <name>readCancelFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a971fb08a118142918ee91fd48b6d03b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>ad873762990c060a91fb679f1a0f769d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_WritePollingFxn</type>
      <name>writePollingFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a765f0674a82bcf26aa6aba2e0ac71ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_WriteCancelFxn</type>
      <name>writeCancelFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table__.html</anchorfile>
      <anchor>a1e325b42b7b7122b2b5521a15d88be0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART_Params_</name>
    <filename>struct_u_a_r_t___params__.html</filename>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a3595f9cd8c7629a977f6833c2578f7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>aba1e2f7319961148683112ce7c46fef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>ad7d6962c8a9f89ec9ea12f2b8485f43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a880f731e24ba95677cfeb6e802bb2bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a90143ce78450225d957e0d05289564d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>ad8882b7e15bb07a3cb150dec73f05b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>ad79c1d618eacd0e40d09aafe0c3b9a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>ac0748b65265ff4fced9fee6a8c003398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>afa84cf6a6b53150ab6908785a7aac41d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Echo</type>
      <name>readEcho</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a2a06d92c34f52e31debd8882d061ff06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a4423b9250bb409710872f0a00b3383c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a37be40bc926b38cba71c494ccd1c2d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a7f10fa36761f30f658c12f86ceee4b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a575f35085ddbf8a58ec0b02b18f58e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_u_a_r_t___params__.html</anchorfile>
      <anchor>a2ccda88cd42b0d919a094d486d879d2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC26X0_HWAttrs</name>
    <filename>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a091822f9d5572be06426760ab3e6b44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intNum</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a2757773ef1f7b7c5cbdeb2a5dcfcaf8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>af7beab6599c42fcdcdedcc5f1d297c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>aabef0fbd07e5c22381063255bf44cc02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>flowControl</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>aa1f203b8f56e23257b1d741b1328e863</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>ringBufPtr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a71cee2fff1816ab7a446928cd407711a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ringBufSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a63a97d3afe9086654dcb9c3bdd5f5e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rxPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>ae9da1e79a6d0e6d0e416ae96555a33af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a876b0b51e7841a9368015733c8b03caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ctsPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a40c89e214487955cc4a22e9d126a4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>ace9e39605b976f710aec2b02dcdf00f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26X0_FifoThreshold</type>
      <name>txIntFifoThr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a936362f162da99598578d59f13c54e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26X0_FifoThreshold</type>
      <name>rxIntFifoThr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a3681180de4f2d779ed7ad3972f01c1be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26X0_ErrorCallback</type>
      <name>errorFxn</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___h_w_attrs.html</anchorfile>
      <anchor>a37268e5bb0184d82ecb659026b267113</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC26X0_Object</name>
    <filename>struct_u_a_r_t_c_c26_x0___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a1bcca039d550a72437fb110f1190e0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ad95148fcff21cbd0889b60ca122a6b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a527f074228fc6d72e16648890f2903e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a08da81e924330c33e2cc9dae10126167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a2c61d3bd187e41a12653e0fbf3dc06d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a447c68657dc14336fcf374e68619397c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Echo</type>
      <name>readEcho</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a740f3766ae350e690026ece1b1293ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bufTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ab77c107252454509b37022bd0aaa62b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>callCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a419dc17a818d2de598dfc2df3aa38127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>drainByISR</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ab480d227f65da82cbdcc2c36bcb20106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ctrlRxEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>aff37ba9a22638df656ca5c102b26237c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rxEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ae579176b04340a837a952fefa9a3c64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>txEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>aeb2afadc9378cad35b513b457aae41a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct UARTCC26X0_Object::@3</type>
      <name>state</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a092b02227748923f1afb2d459fc13452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a750f31cd3f34e352be253313938885f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>swi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a0b5c3855fdd55df3dee87d5a14af689f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>timeoutClk</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>aa98127fd45e6651fb0b88ee3ef081b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>txFifoEmptyClk</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a915017f0c3d952737d750fa6e9ddf5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ab31c6705368e5be88a92475eba344961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>afc01096d0ce8a1aa176463581d78bb8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a8336b8a73d0b8a507234f2d9d38785b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a27ad5cc1529cea95fb28939e27381342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>status</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a346287cc6a870bc08cd2c8cc12467323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RingBuf_Object</type>
      <name>ringBuffer</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a8a4c15f0c27f5b20c011116a1b53f3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>readBuf</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>aaeb2f6f3d6cf7cfaad57acdad626a750</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ad9138a16640d1c92f2508b46f5b950bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>abd90a0dd5b65bcd04f85361f69872d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>readSem</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>acaf35533552353f505f1e574b3f256d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>af555d1cbbf1407c2e06d6cf665d1b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a2206f5b814199e680133864898255a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>readRetPartial</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ae334cd0d20ca9c15f286fde46252ccd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned char *</type>
      <name>writeBuf</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>aa84b356565e1ede57b82f4dd15602f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a090b54bae3c0609c95bf447e6f3f8f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ae937fa43b74840a5595cd7d884ad29ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>writeSem</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a7167deabd68bcfced018c27ac7137cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a29f02ff73581c29e4ebceddc73bb3873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>af17b6bfd1da4b1346312e885d09e621d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>writeEmptyClkTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a7274539c322050709788768635ae5cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ac16b2db5a70ab809c89faf043333bd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>hPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>a3829f55843cda524a5cbb8a634e969ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_u_a_r_t_c_c26_x0___object.html</anchorfile>
      <anchor>ae174fe8286492bd7712102c1c8346641</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC26X2_HWAttrs</name>
    <filename>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a3c266863e2a35633ba1aa2cfad060139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intNum</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a6ca4d99daed51401db80ef2d8cf93bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a84cc16f92572fb23d6f6225a5d67fec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a91afe31127f995bb25ba2470d68ea459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>flowControl</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a49057bcf1a8b6998a1e8756c1e3a14de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>ringBufPtr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>ad0b3c5f4c05d0cbbf670ce2ad98650fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ringBufSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>ab9061612f5127cc110eb3f1b695f882e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rxPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a58385329cdb7617c0a700de63cbd7575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>af3f04f75d40ead21482c63a90230f3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ctsPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a4b4c291ed53d49aeff9cdc45bc71ce83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a69c296b2d903aab1e12f3a8cf28b90bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26X2_FifoThreshold</type>
      <name>txIntFifoThr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a11434a21ceebcd5b7a00d4485a5e1cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26X2_FifoThreshold</type>
      <name>rxIntFifoThr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a74af77acd242601403e6d0ed8ed86a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26X2_ErrorCallback</type>
      <name>errorFxn</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___h_w_attrs.html</anchorfile>
      <anchor>a77ec4ff1e2c78871ee98d45cf58df70c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC26X2_Object</name>
    <filename>struct_u_a_r_t_c_c26_x2___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ad80e81723221677243635504adeec15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a5c309f84580dd98f954d22c7dc68850e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ad41eb0a79f5ddc2824ffa0ab63192ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a2a6d6a63ae3f09d961f0595b27e81884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ab03698ab625d6b57683cb0a8de31940d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a976ff1f3dfcaa7ffbf3397d6feef8a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Echo</type>
      <name>readEcho</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ac0504633f71ce407243096203fbd9588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bufTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a69558c564f637ce6aac4257c18b78a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>callCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a534ad41879209e0bac0e808552c3a334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>drainByISR</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a856e279252e78ec141bcdc8325f59f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ctrlRxEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a8a40775f6b3bb1ca286b29937bc85f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rxEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>aaf20dd98aafc521d8e2ee72f5fb7c094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>txEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a4ab74cf269bbfad34244a034c3423ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct UARTCC26X2_Object::@4</type>
      <name>state</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ac586a800775288a1ae4b4a4e0a7958b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>afe44ee76f927a1e76fccdf8594f4ef65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>readSwi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>af2ba5db9fc837184cffd3c1cb71d4709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>writeSwi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a9149b30c699b53315e7e0e97cd2cc2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>timeoutClk</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a50bfc28419ac4352df599591816e52df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a03c95eea414610c8b9e60e47d8ca1d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>abddd44b9ba313101ea20d67758239754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ac7594c5900cf2a39f7340a36dff0137e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a3b855ca07d0568f0a3e7ac079e375638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>status</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a2effdee4c5dd455415822941c708d1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RingBuf_Object</type>
      <name>ringBuffer</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ab2418d624a9b069bb49690aadf292c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>readBuf</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ad787fe9adc54cbcc8a48bcf1823c5644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ab6020280b2197e86144af267ed663c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>ae63b6e9030fcf073d70d853f476be724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>readSem</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a70afe5839145d8603cf11ff4ae9c16be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a82ac02063329cce58dd311605855d86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a163ac77038aee451ec5b96c43aa1cd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>readRetPartial</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a3cab3b1b7037db9942b8b0648ecc9f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned char *</type>
      <name>writeBuf</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>adef4df05f8f3acd19da26334409e2776</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a16a84615f4e47a4326954b19f68d42eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>aeb26df465398b0ac3b2ae9ae6035175f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>writeSem</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>aabfda8ebcd8831a4ea8a21e8ed8ffd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a44c87c4b6619e55f861d5f883aa6dfff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a7c2bbd4ad0968b31e21e4f194a9687f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a245ba00bb8fe2c2e32aae13bc1320d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>hPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>a0f31e5f6bc340972d2e6231aa1e0d9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>aadd6e843155714ef8f0440c60a7ea5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>powerMgrId</name>
      <anchorfile>struct_u_a_r_t_c_c26_x2___object.html</anchorfile>
      <anchor>af3dc4eaf321d798f4d909618d1a23c49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC26XX_HWAttrsV2</name>
    <filename>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>aba311f9c5938c83e262a0e5144013acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>powerMngrId</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a4bb5070acbfb10be326b27ffd783ed2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intNum</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a241735d20617487c5a12db2f481b4ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a154b4300357fcc365090a970b17aa67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>swiPriority</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a6a8b6d625ad061be7e354ce1db08e86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a44ce413fed4b61b66f5155a4b90c2769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rxPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>ab904bcffce2f8243d02af985809f6e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ctsPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>ad999164f2ccf4f229fa56e19711e93e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a7c7c0bf162bb8518251e683e0665e5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>ringBufPtr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>aefd6d29db9c97680fae7de8c9ecc0cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ringBufSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a63f6ad063feb518a1d453e550b0a4dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26XX_FifoThreshold</type>
      <name>txIntFifoThr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>ac7fcf0c0bcabb3c0e0d59f81d6adc582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26XX_FifoThreshold</type>
      <name>rxIntFifoThr</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>ade23630c03a9914d017d63e2ccae5ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC26XX_ErrorCallback</type>
      <name>errorFxn</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a7d9ae2ba3686400d0530fec5a12380a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC26XX_Object</name>
    <filename>struct_u_a_r_t_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>aabff5933f6661e2ebdbd8b001a6c12d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a6f41cd73c5e6a1ea8ccc0a45bc588043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>abd7189770beb245f88ba363b64bc2924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a001dd8b9c060037c53d19b79e32d1ee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a55b3ddd718d4de0aeffd2426c3f14efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a4811ff5ec74aca1f4085d7c6ec03d25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>af1042c19f71eaf88f30c6c747cd10974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>ad70982f98db142d1b7e2daae892cef0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a6356ee769243af84a67e767108930777</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a0b1a8cc79747676e8c9f465ef145359e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>aae59e30e9a676337e5ae02a378ffe6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a2f9a4fa7ee40a43897a2df10d936ab0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>ae5a931f5b2f5de1c3aa6852856ca1b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>ab42ca16e6fc784e7d0a727b1e9c6b299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Status</type>
      <name>status</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a10ff4c367c40263e72d3494f78b9ce07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const void *</type>
      <name>writeBuf</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a440f4f4b165c4c725e544f13ad9ed02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>ac1e9fe4a759db1bb57ea9e50af9b08c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a6532e1f4a50fcf7e6908f7502a64fea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>writeCR</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>adc03957f1fbafe66c14fd7d9308a5e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>readRetPartial</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>af8d33692f51db0e0874b0568e7011e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>readBuf</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a9672e42f229731578af8a2c81f3f84db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a860c348843ce491dc8787304ddc84f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readSize</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>abefd4ca2a4db441a73e8b373a6947f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RingBuf_Object</type>
      <name>ringBuffer</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>aca1cb90c83d3e045058469a997340c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_State</type>
      <name>pinState</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a5a12b2fd3f28ae68e2c4c6ddd2f38eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIN_Handle</type>
      <name>hPin</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>acf3b45b67310e399f3fcf6ad449fa445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>uartPostFxn</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a990a1d69fb8edf1e88f47e01f7de4e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>uartPostObj</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a06f854831de50d17f7249224f560cdd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a5906e1c603461cfa8ac5cf69fcab5f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SwiP_Struct</type>
      <name>swi</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a3df984af8a96f77db1e917cd424f752b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>writeSem</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a98058d205676bc3f3ba80dee4d34817e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Struct</type>
      <name>readSem</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a66088c4c89af819490ccbe6af459762e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>txFifoEmptyClk</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a3c0d66c09e9ba4d976438c71ee684b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>uartRxPowerConstraint</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>af00cf010b26886a2fc422fa2cefa3059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>uartTxPowerConstraint</name>
      <anchorfile>struct_u_a_r_t_c_c26_x_x___object.html</anchorfile>
      <anchor>a8cba68e2e584c6f603aaf9eba76641e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDMACC26XX_Config</name>
    <filename>struct_u_d_m_a_c_c26_x_x___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___config.html</anchorfile>
      <anchor>a9b87747e67e7cba15e71ccdd495bbf65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___config.html</anchorfile>
      <anchor>a394867c60268267c4c503fb10100d960</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDMACC26XX_HWAttrs</name>
    <filename>struct_u_d_m_a_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a62ff254a8b85ecced4f749c35065515d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC26XX_Resource</type>
      <name>powerMngrId</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a77e02a4666668a7d35d012e5dd7b2d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intNum</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a842b5f7c2c0a2563eaf6f037cff07785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a56b5f00f14e051a08329130b6d2c6fe6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDMACC26XX_Object</name>
    <filename>struct_u_d_m_a_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___object.html</anchorfile>
      <anchor>a90be70e4c9fd4907abdb17412c0cc7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_u_d_m_a_c_c26_x_x___object.html</anchorfile>
      <anchor>a0a6e8a9bdd1a5b20d30e157bd7efa391</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Watchdog_Config_</name>
    <filename>struct_watchdog___config__.html</filename>
    <member kind="variable">
      <type>Watchdog_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_watchdog___config__.html</anchorfile>
      <anchor>a2ceb6aabf71a42cf6e4162d1ce314e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_watchdog___config__.html</anchorfile>
      <anchor>a445dc09c39f77c050e15f83a5b431943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_watchdog___config__.html</anchorfile>
      <anchor>a839535d8cd9c2c46e4112cd6e99c684f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Watchdog_FxnTable_</name>
    <filename>struct_watchdog___fxn_table__.html</filename>
    <member kind="variable">
      <type>Watchdog_ClearFxn</type>
      <name>watchdogClear</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>a2a54d653160c28f8e9247f108bdeddaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_CloseFxn</type>
      <name>watchdogClose</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>a1a6cf64a9b9a6ab04bf73d08caea0d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ControlFxn</type>
      <name>watchdogControl</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>ad1c171a0d986dc229e20f7cec61cacd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_InitFxn</type>
      <name>watchdogInit</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>a15d382257d3dc884dfeacf2b58f9c3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_OpenFxn</type>
      <name>watchdogOpen</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>a7f356e48718e93891d400486d1f22db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_SetReloadFxn</type>
      <name>watchdogSetReload</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>a61d4f1bbadcc529418776c6bc9797511</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ConvertMsToTicksFxn</type>
      <name>watchdogConvertMsToTicks</name>
      <anchorfile>struct_watchdog___fxn_table__.html</anchorfile>
      <anchor>a3deac0545a5885bb7bcace8535f808b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Watchdog_Params_</name>
    <filename>struct_watchdog___params__.html</filename>
    <member kind="variable">
      <type>Watchdog_Callback</type>
      <name>callbackFxn</name>
      <anchorfile>struct_watchdog___params__.html</anchorfile>
      <anchor>a26a219dd0a8c1972a721a40aca0b52e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ResetMode</type>
      <name>resetMode</name>
      <anchorfile>struct_watchdog___params__.html</anchorfile>
      <anchor>ac695f58c6e582d98c9171bf02a760c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_DebugMode</type>
      <name>debugStallMode</name>
      <anchorfile>struct_watchdog___params__.html</anchorfile>
      <anchor>adfd763090a1a67a2cb8069c5c5ba135a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_watchdog___params__.html</anchorfile>
      <anchor>a4f6448256335e7f67199fda107f84faa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WatchdogCC26XX_HWAttrs</name>
    <filename>struct_watchdog_c_c26_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baseAddr</name>
      <anchorfile>struct_watchdog_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a0eda34ad75c65e399e2c97ce3ee9bbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>reloadValue</name>
      <anchorfile>struct_watchdog_c_c26_x_x___h_w_attrs.html</anchorfile>
      <anchor>a4d5992495525d1457f5aa356046ce055</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WatchdogCC26XX_Object</name>
    <filename>struct_watchdog_c_c26_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_watchdog_c_c26_x_x___object.html</anchorfile>
      <anchor>a841c8d0d31d1579a93b252a1fa0f24ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_Callback</type>
      <name>callbackFxn</name>
      <anchorfile>struct_watchdog_c_c26_x_x___object.html</anchorfile>
      <anchor>aa6c9f831aad4ab34f61bf323aa3c0b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ResetMode</type>
      <name>resetMode</name>
      <anchorfile>struct_watchdog_c_c26_x_x___object.html</anchorfile>
      <anchor>a6d5b931599fbf0753e7cba317d638385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_DebugMode</type>
      <name>debugStallMode</name>
      <anchorfile>struct_watchdog_c_c26_x_x___object.html</anchorfile>
      <anchor>a1d7fd3a5482cda6047764bdd4d5c81e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Struct</type>
      <name>hwi</name>
      <anchorfile>struct_watchdog_c_c26_x_x___object.html</anchorfile>
      <anchor>ad4ff3bd63542d01fef51a1fd2ac469ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SPIFFSNVS_STATUS</name>
    <title>SPIFFSNVS status codes</title>
    <filename>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga44e1652f2eb8528bf93adc77e3e013d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_ERROR</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga24d6594e8daac912958ef381ffd60763</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_NVS_IDX</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaaed3fec880853b3df3ddc6f2bd171f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_BLOCK_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7961506209d7c5a1dc791159d6c52a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_PAGE_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga21872212b529e6a1157b6f3f4e579dbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ADC_CONTROL</name>
    <title>ADC_control command and status codes</title>
    <filename>group___a_d_c___c_o_n_t_r_o_l.html</filename>
    <subgroup>ADC_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>ADC_CMD_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga1850e2c1e2791103d1102917d1e5b01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5a8bd7786df22349b1a5434f48b08581</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaee02c8883a7e443d36ea47f9696730ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_ERROR</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga33ce323c3bbdc8a3f4e018f99a92b09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga704a8cd95bdee94b0f61f06566062e8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ADC_CMD</name>
    <title>Command Codes</title>
    <filename>group___a_d_c___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>ADCBuf_CONTROL</name>
    <title>ADCBuf_control command and status codes</title>
    <filename>group___a_d_c_buf___c_o_n_t_r_o_l.html</filename>
    <subgroup>ADCBuf_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_CMD_RESERVED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga6d889e191027535ad318be0b9c3765d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_RESERVED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga61f0abe91c78f6ab7003c53e513d4d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gac9c96db575dfaa6bcdfbd94cd875fbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_ERROR</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga78f1a705377b5bb15cc6c152f75846e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5d552a66f63d36a8eaffd53c9deff2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBuf_STATUS_UNSUPPORTED</name>
      <anchorfile>group___a_d_c_buf___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga14c9aea90d55fbbf215ab5a17a33573d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ADCBuf_CMD</name>
    <title>Command Codes</title>
    <filename>group___a_d_c_buf___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_ACQUIRE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>gad718c3bba0f5e4319c9b09e7bf5dc3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga297e57ceef7d21efad09a4c9f8cc5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>gadd5ecbab7264c2cd7b29d9d8e5736387</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga760d6e0d9c8d79bd7fadbd1e72204ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_ACQUIRE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga0a536e47b039d0f506a4245079af247e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga830dac4199ded43c278e48bb1fe9725e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>ga23015764922f21c49518aa1050d70c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCBufCC26XX_CMD_RELEASE_ADC_SEMAPHORE</name>
      <anchorfile>group___a_d_c_buf___c_m_d.html</anchorfile>
      <anchor>gaaacc1d31de8c38e71c351bc1fcd54340</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CryptoKey_CONTROL</name>
    <title>Status codes</title>
    <filename>group___crypto_key___c_o_n_t_r_o_l.html</filename>
    <subgroup>CryptoKey_STATUS</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_RESERVED</name>
      <anchorfile>group___crypto_key___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga804fde3a9a6494b4beeb058556cb6212</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CryptoKey_STATUS</name>
    <title>Status Codes</title>
    <filename>group___crypto_key___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_SUCCESS</name>
      <anchorfile>group___crypto_key___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga57bc657c5ea7a274cfc47c3a66829882</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_ERROR</name>
      <anchorfile>group___crypto_key___s_t_a_t_u_s.html</anchorfile>
      <anchor>gade8db452abe2f9f233fd4dbb207d4acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoKey_STATUS_UNDEFINED_ENCODING</name>
      <anchorfile>group___crypto_key___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga936ba18446ed96ed60511b7e1922da25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GPIOCC26XX_PinConfigIds</name>
    <title>GPIO pin identification macros used to configure GPIO pins</title>
    <filename>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_EMPTY_PIN</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gafd3a36893f287868e89f52ad3028647e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_00</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9df90ec187763683c4eaed593d358013</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_01</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1517f769b85937467831948da88a2f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_02</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8135b039ec5e330acf6e3d8537d60855</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_03</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga4aaed6f9970315406d6e336070e454b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_04</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga26c4d3e65c836464a5eb0ed82a81f20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_05</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaeabbc647f451d8e38122cf4090340d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_06</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga77f186ae066398a90eeb509b36669dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_07</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadd55f5a414e365f598b70a82f6702c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_08</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacda8042974ed48b7c2a443194fc38abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_09</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga05f52fde8069fcf0cfb2d402f66059eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_10</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga77cd660fc81974b5aca40b71cf19b701</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_11</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gae43ad67feed2594fca16f728a4370a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_12</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga06c358d2a3dd7c8e1df95debdd05abdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_13</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadbdb48ba0c4442195218a9ddd47216e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_14</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9f8e48d6505bab472f244bdd3a09d314</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_15</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga33f7040ad5310a2016da71d3f9d3a8b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_16</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa0c0e910f6eb279b7ef816d80ddc57ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_17</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga16ef430a5c6fc095eae357ea0da9eae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_18</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa8debefa14c291aae6934b4a1f9d2b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_19</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga27a107bace659fb5794f3006bf3fde2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_20</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga027e920b68bd09a64a98c88c7d5110f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_21</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadd164676da3172dcd3ba7ec80398b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_22</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga2cb39452780504dff0188ef3ddd7e71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_23</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga07951649eb1fc0fef858161d04cfab9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_24</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8b0ea5a02c2021929f79019580312d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_25</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga3958f17cc269abea657eff59c25d6d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_26</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga09380ef292de0568024085542b905fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_27</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1b5462223c705b087bb6fe038e1edb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_28</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf46ec9fe29cc059be1183d7abbf3b20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_29</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacbef3dd6c35bb9be9382cd04e599840e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_30</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga157328572f63fec37c4fe75d0b934617</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC26XX_DIO_31</name>
      <anchorfile>group___g_p_i_o_c_c26_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaaa466824da319dfa3f84032fdba8740b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GPIO_PinConfigSettings</name>
    <title>Macros used to configure GPIO pins</title>
    <filename>group___g_p_i_o___pin_config_settings.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUTPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaad0c4b9c093f1d57fd03061b7456193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac52528c42a8eb3be193f49de5ed7d820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae660060d38901c2370d8f104fbb842a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga16cfdcae58be5f77932b36f43e7c1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaf4e7be1d009ff2c25a048ab7fe401d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga2917f431dff7eb7f5559643bd8df251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_MED</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac1d2c5bf8f2359d26d28abc8aa393b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga25609d59d41f081ae9759d5862dc9dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae86eb6dc677c962a9ad94bdad6752dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad4fd3be9a7bec74d862cb1caecc5d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_INPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga874e34de3bef2d9415b4311dd6bed234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad2e8d27bfc96ef0de4dd35db10055412</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4fb7b60751481b6988049fe8fa94a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad09e6716ad1b54cb6509b8c92a6567c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_NONE</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga666c6995ed5737b43a707d1cacd9fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_FALLING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga7a69ee26049dc2f8b5059b00a24b9f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_RISING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4a9f53e525d1f1659b485274d08ff91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_BOTH_EDGES</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0829900a2dd949219edc6ddc8d928f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gab0f05c331bb66230f175e574d0d317a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga669d2e840e0f934426670a069a5efe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_ONLY</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac8df4b49e09cb612275ed7d00e8cc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_DO_NOT_CONFIG</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0974eb3af57b7bccef9ac749d4cf23a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>I2C_CONTROL</name>
    <title>I2C_control command and status codes</title>
    <filename>group___i2_c___c_o_n_t_r_o_l.html</filename>
    <subgroup>I2C_STATUS</subgroup>
    <subgroup>I2C_CMD</subgroup>
  </compound>
  <compound kind="group">
    <name>I2C_STATUS</name>
    <title>Status Codes</title>
    <filename>group___i2_c___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_SUCCESS</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa0bcf3acd26ac82bd8ff91daba2c78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ERROR</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7323fe57c39c46d0da9910e17f5f0b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga11c31c9869ed2441789205d9e5967d66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>I2C_CMD</name>
    <title>Command Codes</title>
    <filename>group___i2_c___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>I2S_STATUS</name>
    <title>Status Codes</title>
    <filename>group___i2_s___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>I2S_ALL_TRANSACTIONS_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab6513a393fed75b7c1b507d5ec9047fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TRANSACTION_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8265d03e72406770257a834e377247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TIMEOUT_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga815abf87dfe4353e42bea24940f45d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_BUS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaeff50b687883296e143e5da70102a915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_WS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab9cb86b261eb8a0abcfc19091f46385a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_READ_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga50be1b2cc5cef182aff769f626eb6e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_WRITE_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacb0dde45fe8df930d9914a100fbfcef8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NVS_CONTROL</name>
    <title>NVS_control command and status codes</title>
    <filename>group___n_v_s___c_o_n_t_r_o_l.html</filename>
    <subgroup>NVS_STATUS</subgroup>
    <subgroup>NVS_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>NVS_CMD_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaa9fa1c41660d17139bce63ff34cd774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gad82fd139152ca14946c80c6c91edb4a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NVS_STATUS</name>
    <title>Status Codes</title>
    <filename>group___n_v_s___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_SUCCESS</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga5f3b6583ee909863b86799762dc8b4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_ERROR</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga995c9896630b7a0cd1662e7be9c4cf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8aa59663f65af4fa564a3a83cd7d6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_TIMEOUT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga1b42309ac8efec007159e58382dd4a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_OFFSET</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga30a816faeeb9a50757055fb6f10189a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_ALIGNMENT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga07f2472d1204718531ddf7a369b86ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_SIZE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga6bdc99317ca872755243d9a76ad1db95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_WRITE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad8da7024d67625daf4347c22d50fdb4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NVS_CMD</name>
    <title>Command Codes</title>
    <filename>group___n_v_s___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>SD_CONTROL</name>
    <title>SD_control command and status codes</title>
    <filename>group___s_d___c_o_n_t_r_o_l.html</filename>
    <subgroup>SD_STATUS</subgroup>
    <subgroup>SD_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>SD_CMD_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaeae6617d0410c8dfd0df727b44d9fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gabca601c1ba0b541c82e3065b5f115ace</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SD_STATUS</name>
    <title>Status Codes</title>
    <filename>group___s_d___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_SUCCESS</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga691cc2fe1fe0fa94560519b53f18c647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_ERROR</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ed21a29e85502f5a205d5273df01713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga072054678e68aafcd16a7bf45892d8c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SD_CMD</name>
    <title>Command Codes</title>
    <filename>group___s_d___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>SPI_CONTROL</name>
    <title>SPI_control command and status codes</title>
    <filename>group___s_p_i___c_o_n_t_r_o_l.html</filename>
    <subgroup>SPI_STATUS</subgroup>
    <subgroup>SPI_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>SPI_CMD_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga3d23d16525ee76f77276472d8dea80b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gae1af8c6ebf5e8fe481649f65e37b1b9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SPI_STATUS</name>
    <title>Status Codes</title>
    <filename>group___s_p_i___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab38fa90ff62128dbc98b2ecd84ca106f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_ERROR</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2d0020dd673cc28a9e1c20b0ff101073</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacfcd15e1eecdb99b4867adc7592a8d6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SPI_CMD</name>
    <title>Command Codes</title>
    <filename>group___s_p_i___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga34c49fde4df8fd436cf431b8c69e64d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga0e1ad744e41c95b652bc5c04f492d609</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_SET_CSN_PIN</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga572d479a9a8504cf5c096d16465f8e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_SET_MANUAL</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga2e83f10ecd69aa4b117acb2e64565f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_CLR_MANUAL</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga687eef73eab3644a3000ab89b2a83cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26X2DMA_CMD_MANUAL_START</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga3b4361e2cabb4ae7fedda98551aee5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>ga348d271d5ad295c5e049e78d745c57e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>gaff8de4036abcdb2903cb5280120c30b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPICC26XXDMA_CMD_SET_CSN_PIN</name>
      <anchorfile>group___s_p_i___c_m_d.html</anchorfile>
      <anchor>gab3ab03abd9ca073344acdcc6b442f9eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UART_CONTROL</name>
    <title>UART_control command and status codes</title>
    <filename>group___u_a_r_t___c_o_n_t_r_o_l.html</filename>
    <subgroup>UART_STATUS</subgroup>
    <subgroup>UART_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga0f5a809e0884da33fef102236eb51644</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga8f35027907fbab6a9ee302d2ee52a879</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UART_STATUS</name>
    <title>Status Codes</title>
    <filename>group___u_a_r_t___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_SUCCESS</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga101b7761f89b3ec49f0c6726669acfed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_ERROR</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ae076f4aae13ca8e2aea674207df0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga61125a2eb8059fd8b96ad95edc68ac2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UART_CMD</name>
    <title>Command Codes</title>
    <filename>group___u_a_r_t___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga8f1ba957064e0d6bef2033ad5ba8038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga5d75c2021478fc0e7b5d1365d15dc693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X0_CMD_RX_FIFO_FLUSH</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga053edc1a548000a9bac472d8d25193c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga9a21e7999f55e4efb146f202337c9381</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaa14c4e92cd925d03a5308ef2885a6fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26X2_CMD_RX_FIFO_FLUSH</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaa8657ba4d475506b57be9c27720d82e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_CMD_RETURN_PARTIAL_ENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga90f59d674fd3b290c3dd711128413014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_CMD_RETURN_PARTIAL_DISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga7cc7c1551022a60bd310c79acb6b26b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC26XX_CMD_RX_FIFO_FLUSH</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga56280a288223c44c73a5169e957dc078</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_PEEK</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga942596a37cb2109ae021f88f3d907bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_ISAVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaf5be6db621c5b048637dc93b26797693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_GETRXCOUNT</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga470321cbd9eccf137ffbe6553ae7f35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gad67d01fa376f25bb28141d819647e8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXDISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gac0b19ce2fa9f43d3fe255bcdbd3cda7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Watchdog_CONTROL</name>
    <title>Watchdog_control command and status codes</title>
    <filename>group___watchdog___c_o_n_t_r_o_l.html</filename>
    <subgroup>Watchdog_STATUS</subgroup>
    <subgroup>Watchdog_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_CMD_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga4d1b16e67bf555b8fe49182eb8a28b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaf7d1273929fd4d1f630c31b90def9684</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Watchdog_STATUS</name>
    <title>Status Codes</title>
    <filename>group___watchdog___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_SUCCESS</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa8dd490de97398b1da33798d8e54b53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_ERROR</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7cc28c1119ebecae88a5ae0735228489</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga589be79a7f8ce642863f231e1dae7577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNSUPPORTED</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f4ea82c3209f4acc21607ee0e9e053c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Watchdog_CMD</name>
    <title>Command Codes</title>
    <filename>group___watchdog___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>DISPLAY_TYPES</name>
    <title>Meta-types of display implementations</title>
    <filename>group___d_i_s_p_l_a_y___t_y_p_e_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANY</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga18e865923359fab7d26c09dc169caf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_INVALID</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga09ec0c157c10708af6c2fec8e5b26805</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LCD</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga9b8f62fe443d3a584f598392d233f38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_UART</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga0257ac5b377a67eb525400e4c2a4f0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LOG</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gaaf8a10cc8b8de9d38f144d44f968b1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ITM</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gae19f6c6b10d4e3d491819fb02ae4c865</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_HOST</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga159af3b59e8fa662fc153a0307fd1817</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANSI</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gabdee477121870fb7102a9a572c5cdc9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_GRLIB</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga498ae390d2feea643ec3f23533859f35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_CONTROL</name>
    <title>Display_control command and status codes</title>
    <filename>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</filename>
    <subgroup>DISPLAY_STATUS</subgroup>
    <subgroup>DISPLAY_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga99c2401cd11ea3b49e5e3e4ffac5c886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gacb7031dd18c19e3ecb86d97cb7b17abb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_STATUS</name>
    <title>Status Codes</title>
    <filename>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_SUCCESS</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f6a4a10f24cf55bc13d1750e38bb946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_ERROR</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaf91798b06dd95fce8063b7328420fab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga3e506301dbdad496a95e12c3b17efc6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_CMD</name>
    <title>Command Codes</title>
    <filename>group___d_i_s_p_l_a_y___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_CLOSE</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga5be24ea4a3ddfd94efbb513d649ac88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_OPEN</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>gae12206be356c6b2ce885b5ada9b1854d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAYSHARP_CMD_SET_COLORS</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga27b9623d9abc7aa7eeae74ea7d77cd0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Crypto_STATUS</name>
    <title>Crypto_STATUS</title>
    <filename>group___crypto___s_t_a_t_u_s.html</filename>
  </compound>
  <compound kind="group">
    <name>Crypto_CMD</name>
    <title>Crypto_CMD</title>
    <filename>group___crypto___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>DMA_STATUS</name>
    <title>DMA_STATUS</title>
    <filename>group___d_m_a___s_t_a_t_u_s.html</filename>
  </compound>
  <compound kind="group">
    <name>DMA_CMD</name>
    <title>DMA_CMD</title>
    <filename>group___d_m_a___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>Power_Latency_Type</name>
    <title>Power_Latency_Type</title>
    <filename>group___power___latency___type.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_TOTAL</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>gaa5e33b10202cc5a261c1800b4ae1de3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_RESUME</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>ga7343f6504f2df361dca3760a97584371</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Power_Notify_Response</name>
    <title>Power_Notify_Response</title>
    <filename>group___power___notify___response.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYDONE</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98c91c03b469de0cf4f53b89a867ee19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYERROR</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98066f45fce59fd38d8edcb6f2ac96fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Power_Status</name>
    <title>Power_Status</title>
    <filename>group___power___status.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_SOK</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga92eed670a5d7e3d43f612ca0da9d3fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EFAIL</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaed2f92a8c72bfa183e14d10a2e35789f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDINPUT</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga200ab87d1e0ffbc4eb3864d18646e0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDPOINTER</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga0d24bacb087e8282be2e4394503a429a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ECHANGE_NOT_ALLOWED</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaa4e7b580b1c9c026036bf53befe5723b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EBUSY</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga3132904395c5631392bd6301d9a2181e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Power_Transition_State</name>
    <title>Power_Transition_State</title>
    <filename>group___power___transition___state.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_ACTIVE</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga01074d8221d330077fbe040b9143e183</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga6038b3877b09c908834af7d46595b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EXITING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga1ea41cdfb6fb053eaed2792c4edf886d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SHUTDOWN</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>gad09d75dfaa5d799c4f044df9814db485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_CHANGING_PERF_LEVEL</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga2b7d4ba49a9418af10c84132a8cbf108</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>Disclaimer</name>
    <title></title>
    <filename>_disclaimer</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>SimpleLink MCU SDK Driver API Reference</title>
    <filename>index</filename>
    <docanchor file="index" title="Drivers">drivers</docanchor>
    <docanchor file="index" title="Display Driver">display</docanchor>
    <docanchor file="index" title="Driver Utilities">utilities</docanchor>
    <docanchor file="index" title="Driver Configuration">driver_configuration</docanchor>
    <docanchor file="index" title="Driver Objects">driver_objects</docanchor>
    <docanchor file="index" title="Driver Hardware Attributes">driver_hardware_attributes</docanchor>
    <docanchor file="index" title="Driver Function Table">driver_function_table</docanchor>
    <docanchor file="index" title="NoRTOS Framework Module">nortos</docanchor>
  </compound>
</tagfile>
