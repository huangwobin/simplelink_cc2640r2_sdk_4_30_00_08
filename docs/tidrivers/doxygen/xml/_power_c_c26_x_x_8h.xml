<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_power_c_c26_x_x_8h" kind="file" language="C++">
    <compoundname>PowerCC26XX.h</compoundname>
    <includes local="no">ti/drivers/dpl/HwiP.h</includes>
    <includes local="no">ti/drivers/dpl/ClockP.h</includes>
    <includes refid="_power_8h" local="no">ti/drivers/Power.h</includes>
    <includedby refid="_a_d_c_c_c26_x_x_8h" local="no">ADCCC26XX.h</includedby>
    <includedby refid="_a_d_c_buf_c_c26_x_x_8h" local="no">ADCBufCC26XX.h</includedby>
    <includedby refid="_u_d_m_a_c_c26_x_x_8h" local="no">UDMACC26XX.h</includedby>
    <includedby refid="_p_d_m_c_c26_x_x_8h" local="no">PDMCC26XX.h</includedby>
    <includedby refid="_p_d_m_c_c26_x_x__util_8h" local="no">PDMCC26XX_util.h</includedby>
    <includedby refid="_power_c_c26_x2_8h" local="no">PowerCC26X2.h</includedby>
    <includedby refid="_s_p_i_c_c26_x2_d_m_a_8h" local="no">SPICC26X2DMA.h</includedby>
    <includedby refid="_s_p_i_c_c26_x_x_d_m_a_8h" local="no">SPICC26XXDMA.h</includedby>
    <incdepgraph>
      <node id="615">
        <label>stdbool.h</label>
      </node>
      <node id="609">
        <label>PowerCC26XX.h</label>
        <link refid="_power_c_c26_x_x_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
      </node>
      <node id="614">
        <label>stdint.h</label>
      </node>
      <node id="612">
        <label>ti/drivers/Power.h</label>
        <link refid="_power_8h"/>
        <childnode refid="613" relation="include">
        </childnode>
      </node>
      <node id="616">
        <label>stddef.h</label>
      </node>
      <node id="613">
        <label>ti/drivers/utils/List.h</label>
        <link refid="_list_8h"/>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
      </node>
      <node id="610">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="611">
        <label>ti/drivers/dpl/ClockP.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="617">
        <label>PowerCC26XX.h</label>
        <link refid="_power_c_c26_x_x_8h"/>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
      </node>
      <node id="622">
        <label>SPICC26X2DMA.h</label>
        <link refid="_s_p_i_c_c26_x2_d_m_a_8h"/>
      </node>
      <node id="621">
        <label>ADCBufCC26X2.h</label>
        <link refid="_a_d_c_buf_c_c26_x2_8h"/>
      </node>
      <node id="623">
        <label>SPICC26XXDMA.h</label>
        <link refid="_s_p_i_c_c26_x_x_d_m_a_8h"/>
      </node>
      <node id="620">
        <label>UDMACC26XX.h</label>
        <link refid="_u_d_m_a_c_c26_x_x_8h"/>
        <childnode refid="621" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
      </node>
      <node id="626">
        <label>PowerCC26X2.h</label>
        <link refid="_power_c_c26_x2_8h"/>
        <childnode refid="621" relation="include">
        </childnode>
      </node>
      <node id="624">
        <label>PDMCC26XX.h</label>
        <link refid="_p_d_m_c_c26_x_x_8h"/>
      </node>
      <node id="625">
        <label>PDMCC26XX_util.h</label>
        <link refid="_p_d_m_c_c26_x_x__util_8h"/>
      </node>
      <node id="619">
        <label>ADCBufCC26XX.h</label>
        <link refid="_a_d_c_buf_c_c26_x_x_8h"/>
      </node>
      <node id="618">
        <label>ADCCC26XX.h</label>
        <link refid="_a_d_c_c_c26_x_x_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_power_c_c26_x_x___config" prot="public">PowerCC26XX_Config</innerclass>
    <innerclass refid="struct_power_c_c26_x_x___module_state" prot="public">PowerCC26XX_ModuleState</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a27633fb4e1e9ef1d16b4c526f564cd22" prot="public" static="no">
        <name>PowerCC26XX_RESUMETIMESTANDBY</name>
        <initializer>750</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The latency to reserve for resume from STANDBY (usec). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="68" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a7fa063e42fa24f7d5d7db2c0d420c4a6" prot="public" static="no">
        <name>PowerCC26XX_TOTALTIMESTANDBY</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The total latency to reserve for entry to and exit from STANDBY (usec). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="71" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a03efface3d3941dd7b91d9653cc992b4" prot="public" static="no">
        <name>PowerCC26XX_WAKEDELAYSTANDBY</name>
        <initializer>240</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initial delay when waking from STANDBY (usec). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="74" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1af69c407f50204cbe8e3f71f78d1633bf" prot="public" static="no">
        <name>PowerCC26XX_INITIALWAITRCOSC_LF</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initial wait time (usec) before checking if RCOSC_LF is stable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="77" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a6976f53c142aad31a7deb67d6a370e4a" prot="public" static="no">
        <name>PowerCC26XX_RETRYWAITRCOSC_LF</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The retry wait time (usec) when checking to see if RCOSC_LF is stable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="80" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ae154f9cbcf8d09e8bc2cb417b1e48c16" prot="public" static="no">
        <name>PowerCC26XX_INITIALWAITXOSC_HF</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initial wait time (usec) before checking if XOSC_HF is stable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="83" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ad31fbc0ab3dbd0aa6298d9f90a538534" prot="public" static="no">
        <name>PowerCC26XX_RETRYWAITXOSC_HF</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The retry wait time (usec) when checking to see if XOSC_HF is stable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="86" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a5b63c7d42624c45f7e99957ef9cebd69" prot="public" static="no">
        <name>PowerCC26XX_INITIALWAITXOSC_LF</name>
        <initializer>10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initial wait time (usec) before checking if XOSC_LF is stable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="89" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a5ca11beb72ea210b1ba5c1172654993d" prot="public" static="no">
        <name>PowerCC26XX_RETRYWAITXOSC_LF</name>
        <initializer>5000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The retry wait time (usec) when checking to see if XOSC_LF is stable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="92" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1aa15ce915efc606bfc93aa1a1dba3c766" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_GPT0</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: General Purpose Timer 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="95" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a1af8297196f468c056ab88ff4b6adaf3" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_GPT1</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: General Purpose Timer 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="98" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a07689c7adbc7112e4c7fedfcd6465abe" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_GPT2</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: General Purpose Timer 2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="101" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a554b5da09234a5a12deabe92e8c60112" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_GPT3</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: General Purpose Timer 3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="104" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a0086b3809cd19916dc83fe3707ae721f" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_SSI0</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: Synchronous Serial Interface 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="107" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1af0bae9873af0845e4a1151e4f1717113" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_SSI1</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: Synchronous Serial Interface 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="110" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a1fcd75795174d11d9bcf8fedae2e63fc" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_UART0</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: UART 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="113" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a1637c7e9df94ea4619c8c72594071b92" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_I2C0</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: I2C 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="115" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1af7aecb869e5c26ebc49257026be7269c" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_TRNG</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: True Random Number Generator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="117" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1aa1cabaa5a4591d59c71b88e94923b89a" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_GPIO</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: General Purpose I/Os </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="120" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a9f672f8e724079777b448f3e31a63307" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_UDMA</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: uDMA Controller </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="122" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ab7e5798bed1f87a647ca6a963e0c3336" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_CRYPTO</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: AES Security Module </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="124" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1abe23c943cc254781d2193b054dbf8685" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_I2S</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: I2S </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="126" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a915d52fe49b00163be68301b8e3e23fc" prot="public" static="no">
        <name>PowerCC26XX_PERIPH_RFCORE</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: RF Core Module </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="128" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a0363d14e004e085a63c2bf312542d11a" prot="public" static="no">
        <name>PowerCC26XX_XOSC_HF</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: High Frequency Crystal Oscillator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="130" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1aaa165396fa3e549f034262cbd7c527dd" prot="public" static="no">
        <name>PowerCC26XX_DOMAIN_PERIPH</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: Peripheral Power Domain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="133" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a80c11363509b3eb0ca1587b24439b764" prot="public" static="no">
        <name>PowerCC26XX_DOMAIN_SERIAL</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: Serial Power Domain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="136" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ad86ecb1e5493071d9b856137ebfeba1c" prot="public" static="no">
        <name>PowerCC26XX_DOMAIN_RFCORE</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: RF Core Power Domain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="139" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a2f6486327eb9ca7b1c746fa8def3546b" prot="public" static="no">
        <name>PowerCC26XX_DOMAIN_SYSBUS</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resource ID: System Bus Power Domain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="142" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1acb2ec2d3aa2f104d5691710fd2ba89b7" prot="public" static="no">
        <name>PowerCC26XX_STANDBY</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The STANDBY sleep state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="158" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a3ef4f975166b6195651bc4a1295196d4" prot="public" static="no">
        <name>PowerCC26XX_RETAIN_VIMS_CACHE_IN_STANDBY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: VIMS RAM must be retained while in STANDBY </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="166" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a169ec80ef6871b27768a145f477447a5" prot="public" static="no">
        <name>PowerCC26XX_DISALLOW_SHUTDOWN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: Disallow a transition to the SHUTDOWN state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="169" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a45e6ce6cd0332d1aee0357739aaf20b7" prot="public" static="no">
        <name>PowerCC26XX_DISALLOW_STANDBY</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: Disallow a transition to the STANDBY sleep state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="172" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ab80d8e6de86d3acfa903ceab156da031" prot="public" static="no">
        <name>PowerCC26XX_DISALLOW_IDLE</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: Disallow a transition to the IDLE sleep state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="175" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a1f1dee2876bca97a20c152ca9b6c2fb5" prot="public" static="no">
        <name>PowerCC26XX_NEED_FLASH_IN_IDLE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: Flash memory needs to enabled during IDLE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="178" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a14166f9527e26cbb95021795afc95588" prot="public" static="no">
        <name>PowerCC26XX_SWITCH_XOSC_HF_MANUALLY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: Prevent power driver from starting an RTOS clock and automatically switching to the XOSC_HF when it is ready. The power driver will turn on the XOSC_HF and return control to the application. The application must poll the status of the XOSC_HF and make sure that it is stable before manually switching to it. If the constraint is released before the application has switched to the XOSC_HF, the application is still responsible for switching to the XOSC_HF. Failing to do so may cause an undefined internal state in the power driver. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="181" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ae508511dd31f28553b4dffdc00aebd97" prot="public" static="no">
        <name>PowerCC26XX_DISALLOW_XOSC_HF_SWITCHING</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constraint: Prevent power driver from switching to XOSC_HF when the crystal is ready. The RTOS clock will be rescheduled to try again in the future. This is a workaround to prevent the flash from being accessed by a bus master other than the CPU while switching to XOSC_HF. This would cause a bus stall. This functionality is only implemented on CC26X0, CC26X0R2, and CC13X0 as the bug was fixed in hardware on later devices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="194" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a88d658da388e2fc58328283b3349003e" prot="public" static="no">
        <name>PowerCC26XX_ENTERING_STANDBY</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power event: The device is entering the STANDBY sleep state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="222" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a09692bd5d3fb7c16fcf320b0490f29fa" prot="public" static="no">
        <name>PowerCC26XX_ENTERING_SHUTDOWN</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power event: The device is entering the SHUTDOWN state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="225" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a7f9f2c7a5f0c307aeab0b9854d2384b9" prot="public" static="no">
        <name>PowerCC26XX_AWAKE_STANDBY</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power event: The device is waking up from the STANDBY sleep state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="228" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1ae9a4db5e58593a5bc2f6cbba3c8ed283" prot="public" static="no">
        <name>PowerCC26XX_AWAKE_STANDBY_LATE</name>
        <initializer>0x8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power event: The device is waking up from STANDBY (this event is sent later during wakeup, after interrupts are re-enabled) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="231" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a592028a2a5ba6e323205a6400ef11b07" prot="public" static="no">
        <name>PowerCC26XX_XOSC_HF_SWITCHED</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power event: The high frequency (HF) clock source has been switched to XOSC_HF </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="234" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1acaed4f189f650d485596cd173016ca1b" prot="public" static="no">
        <name>PowerCC26XX_JTAG_PD_TURNED_ON</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Note that this power event is only supported by the CC2640R2 device!</para></simplesect>
The JTAG subsystem on the CC26xx devices is automatically enabled after receiving 8 pulses on the TCK pin. This will cause the device to draw more power in all power modes (Active, Idle, Standby, Shutdown). The <ref refid="_power_c_c26_x_x_8h_1acaed4f189f650d485596cd173016ca1b" kindref="member">PowerCC26XX_JTAG_PD_TURNED_ON</ref> power event will let you know when this has happened outside of a debug session due to noise on the pin. This allows the application to do a reset of the device when it&apos;s convenient in order disable the JTAG subsystem and conserve power.</para><para>In order to turn off the JTAG_PD the application should subscribe to this event. In the callback function the application can call <ref refid="_power_8h_1a311d085ba6ecbeea0e279c52995892a5" kindref="member">Power_shutdown()</ref> and this will force a reset of the device. Alternatively the the callback function can post another event so that the application can reset the device when it&apos;s more convenient to do so.</para><para>When <ref refid="_power_8h_1a311d085ba6ecbeea0e279c52995892a5" kindref="member">Power_shutdown()</ref> is called when the JTAG subsystem is on, the device will reset and branch to the flash image again, only now with the JTAG_PD turned off, thus the excess power is gone. The wakeup source as read through the SysCtrlResetSourceGet() will in this case return RSTSRC_WAKEUP_FROM_SHUTDOWN.</para><para>The power driver will, each time before entering standby, check to see if the JTAG_PD has been turned on after boot. If so, it will notify all subscribers to the <ref refid="_power_c_c26_x_x_8h_1acaed4f189f650d485596cd173016ca1b" kindref="member">PowerCC26XX_JTAG_PD_TURNED_ON</ref> event. If the JTAG_PD was turned on during boot, which is the case when using the debugger, the notification will NOT be sent even if the event is registered. This is because when actively developing code with an IDE and emulator, the user typically wants to be able to debug their code through standby without the device resetting.</para><para>Summary of when the <ref refid="_power_c_c26_x_x_8h_1acaed4f189f650d485596cd173016ca1b" kindref="member">PowerCC26XX_JTAG_PD_TURNED_ON</ref> notification function will be called.</para><para><table rows="5" cols="3"><row>
<entry thead="yes"><para>JTAG_PD state </para></entry><entry thead="yes"><para>Notification function registered </para></entry><entry thead="yes"><para>Notification function called  </para></entry></row>
<row>
<entry thead="no"><para>Off </para></entry><entry thead="no"><para>Don&apos;t care </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>Turned on during boot</para></entry><entry thead="no"><para>Don&apos;t care </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>Turned on after boot </para></entry><entry thead="no"><para>No </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>Turned on after boot </para></entry><entry thead="no"><para>Yes </para></entry><entry thead="no"><para>Yes </para></entry></row>
</table>
<simplesect kind="warning"><para>If the <ref refid="_power_c_c26_x_x_8h_1acaed4f189f650d485596cd173016ca1b" kindref="member">PowerCC26XX_JTAG_PD_TURNED_ON</ref> event is registered, and the notification callback function calls <ref refid="_power_8h_1a311d085ba6ecbeea0e279c52995892a5" kindref="member">Power_shutdown()</ref> it will not be possible to attach an emulator to a running target. This is becasue the device will reset as soon as the emulator turns on the JTAG_PD as part of the connect sequence.</para></simplesect>
Code snippet on how to register the notification and the callback function: <programlisting><codeline><highlight class="normal">void<sp/>jtagPdTurnedOnCallbackFxn()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Optionally<sp/>save<sp/>any<sp/>critical<sp/>application<sp/>information</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>gracefullyShutdownApplication();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Call<sp/>shutdown,<sp/>this<sp/>will<sp/>reset<sp/>device,<sp/>and<sp/>the<sp/>application<sp/>will<sp/>reboot<sp/>with<sp/>JTAG_PD<sp/>off.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Power_shutdown(NULL,<sp/>NULL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Power_shutdown(...)<sp/>should<sp/>never<sp/>return,<sp/>device<sp/>will<sp/>reset.</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>taskFxn(UArg<sp/>a0,<sp/>UArg<sp/>a1)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Register<sp/>&quot;JTAG<sp/>power<sp/>domain<sp/>turned<sp/>on&quot;<sp/>notification<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Everytime<sp/>the<sp/>device<sp/>is<sp/>about<sp/>to<sp/>enter<sp/>standby,<sp/>the<sp/>power<sp/>driver<sp/>will<sp/>check</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>to<sp/>see<sp/>if<sp/>the<sp/>JTAG_PD<sp/>has<sp/>been<sp/>turned<sp/>on<sp/>after<sp/>boot.<sp/>If<sp/>so,<sp/>the<sp/>notification</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>function<sp/>will<sp/>be<sp/>called<sp/>before<sp/>entering<sp/>standby...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Power_registerNotify(&amp;jtagPdTurnedOnNotifyObj,<sp/>PowerCC26XX_JTAG_PD_TURNED_ON,<sp/>(Fxn)jtagPdTurnedOnCallbackFxn,<sp/>NULL);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="237" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a33c66d2d8a05f50274105eef817c41b0" prot="public" static="no">
        <name>Power_getPerformanceLevel</name>
        <param><defname>void</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="643" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_power_c_c26_x_x_8h_1a5c634ae909d29db6dd48c6bd104b62e5" prot="public" static="no">
        <name>Power_setPerformanceLevel</name>
        <param><defname>level</defname></param>
        <initializer><ref refid="group___power___status_1gaed2f92a8c72bfa183e14d10a2e35789f" kindref="member">Power_EFAIL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="644" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" bodystart="644" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_power_c_c26_x_x_8h_1adb528c35432da8c5cae957cdbf874740" prot="public" static="no">
        <type>struct <ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref></type>
        <definition>typedef struct PowerCC26XX_Config  PowerCC26XX_Config</definition>
        <argsstring></argsstring>
        <name>PowerCC26XX_Config</name>
        <briefdescription>
<para>Global configuration structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_power_c_c26_x_x_8h_1a2903fa8d575b7c6d33d95bd652625561" prot="public" static="no">
        <type>struct <ref refid="struct_power_c_c26_x_x___module_state" kindref="compound">PowerCC26XX_ModuleState</ref></type>
        <definition>typedef struct PowerCC26XX_ModuleState  PowerCC26XX_ModuleState</definition>
        <argsstring></argsstring>
        <name>PowerCC26XX_ModuleState</name>
        <briefdescription>
<para><ref refid="struct_power_c_c26_x_x___module_state" kindref="compound">PowerCC26XX_ModuleState</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Power manager state structure. The application must not access any members of this structure! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="503" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1a27a4c7312d5cf59eb699ad5f87104408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerCC26XX_calibrate</definition>
        <argsstring>(unsigned int arg)</argsstring>
        <name>PowerCC26XX_calibrate</name>
        <param>
          <type>unsigned int</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>The RC Oscillator (RCOSC) calibration function. </para>        </briefdescription>
        <detaileddescription>
<para>The function to be used for performing RCOSC calibation. This is the default calibration function, and is specified via the calibrateFxn pointer in the <ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref> structure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>used internally</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>used internally </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1ad4ff77b3854dd494aac42e42f70bdee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26XX_doWFI</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_doWFI</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The Wait for interrupt (WFI) policy. </para>        </briefdescription>
        <detaileddescription>
<para>This is a lightweight Power Policy which simply invokes CPU wait for interrupt.</para><para>This policy can be selected statically via the policyFxn pointer in the <ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref> structure, or dynamically at runtime, via <ref refid="_power_8h_1aa4af0d238813058bf6146df6021df8cc" kindref="member">Power_setPolicy()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1ad90c836c979f3569fa0981154dbd245c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ClockP_Handle</type>
        <definition>ClockP_Handle PowerCC26XX_getClockHandle</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_getClockHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the handle of the Clock object used for scheduling device wakeups. </para>        </briefdescription>
        <detaileddescription>
<para>During initialization, the Power Manager creates a Clock object that a Power Policy can use to schedule device wakeups. This function can be called by a policy function to get the handle of this pre-allocated Clock object.</para><para><simplesect kind="return"><para>The handle of the Clock object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1ace6e106b5cef8823de93a6d4b66ca964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t PowerCC26XX_getXoscStartupTime</definition>
        <argsstring>(uint32_t timeUntilWakeupInMs)</argsstring>
        <name>PowerCC26XX_getXoscStartupTime</name>
        <param>
          <type>uint32_t</type>
          <declname>timeUntilWakeupInMs</declname>
        </param>
        <briefdescription>
<para>Get the estimated HF crystal oscillator (XOSC_HF) startup delay, for a given delay from now, until startup is initiated. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeUntilWakeupInMs</parametername>
</parameternamelist>
<parameterdescription>
<para>The estimated time until the next wakeup event, in units of milliseconds</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The estimated HF crystal oscillator startup latency, in units of microseconds. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1aac76ed82c4d33897111e7e3e863e2c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerCC26XX_injectCalibration</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_injectCalibration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Explicitly trigger RC oscillator calibration. </para>        </briefdescription>
        <detaileddescription>
<para>When enabled, RCOSC calibration is normally triggered upon each device wakeup from STANDBY. To trigger more frequent calibration, an application can explicitly call this function, to initiate an immediate calibration cycle.</para><para><simplesect kind="return"><para>true if calibration was actually initiated otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1a39c82b7c57a1b5c013f5e285e98232e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerCC26XX_noCalibrate</definition>
        <argsstring>(unsigned int arg)</argsstring>
        <name>PowerCC26XX_noCalibrate</name>
        <param>
          <type>unsigned int</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Function to specify when RCOSC calibration is to be disabled. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be specified as the &apos;calibrateFxn&apos; in the <ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref> structure when RCOSC calibration is to be disabled.</para><para>Note that the reason a function pointer is used here (versus a simple Boolean) is so that references to internal calibration subroutines can be removed, to eliminate pulling the calibration code into the application image; this enables a significant reduction in memory footprint when calibration is disabled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>used internally</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>used internally </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1ac415ca8b39f16660c12bc636ed429b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerCC26XX_isStableXOSC_HF</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_isStableXOSC_HF</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if the XOSC_HF is stable and ready to be switched to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>Set PowerCC26XX_SWITCH_XOSC_HF_MANUALLY in the early standby wakeup notification.</para></simplesect>
This function should be called when using the PowerCC26XX_SWITCH_XOSC_HF_MANUALLY power constraint to ensure that the XOSC_HF is stable before switching to it.</para><para><simplesect kind="see"><para><ref refid="_power_c_c26_x_x_8h_1a46422725a0c7c694a589472fb625f92e" kindref="member">PowerCC26XX_switchXOSC_HF()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1a46422725a0c7c694a589472fb625f92e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26XX_switchXOSC_HF</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_switchXOSC_HF</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Switch the HF clock source to XOSC_HF. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_power_c_c26_x_x_8h_1a46422725a0c7c694a589472fb625f92e" kindref="member">PowerCC26XX_switchXOSC_HF()</ref> returns true.</para></simplesect>
This function should only be called when using the PowerCC26XX_SWITCH_XOSC_HF_MANUALLY power constraint after ensuring the XOSC_HF is stable. If the driver cannot switch to the XOSC_HF despite the crystal being stable, a clock will be scheduled in the future and the callback will try to switch again.</para><para><simplesect kind="see"><para><ref refid="_power_c_c26_x_x_8h_1ac415ca8b39f16660c12bc636ed429b6b" kindref="member">PowerCC26XX_isStableXOSC_HF()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1aea49c1a01cb045b1ce6be1ecb3587498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26XX_standbyPolicy</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_standbyPolicy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The STANDBY Power Policy. </para>        </briefdescription>
        <detaileddescription>
<para>This is an agressive Power Policy, which considers active constraints, sleep state transition latencies, and time until the next scheduled work, and automatically transitions the device into the deepest sleep state possible.</para><para>The first goal is to enter STANDBY; if that is not appropriate given current conditions (e.g., the sleep transition latency is greater greater than the time until the next scheduled Clock event), then the secondary goal is the IDLE state; if that is disallowed (e.g., if the PowerCC26XX_DISALLOW_IDLE constraint is declared), then the policy will fallback and simply invoke WFI, to clock gate the CPU until the next interrupt.</para><para>In order for this policy to run, it must be selected as the Power Policy (either by being specified as the &apos;policyFxn&apos; in the <ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref> structure, or specified at runtime with <ref refid="_power_8h_1aa4af0d238813058bf6146df6021df8cc" kindref="member">Power_setPolicy()</ref>), and the Power Policy must be enabled (either via &apos;enablePolicy&apos; in the <ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref> structure, or via a call to <ref refid="_power_8h_1ae8d6092a8fb35b6db52a69a35fcc327f" kindref="member">Power_enablePolicy()</ref> at runtime). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="638" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1a534e5a58297592a785933b137a8198f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26XX_schedulerDisable</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_schedulerDisable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="640" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x_x_8h_1a416f870ed88a1aeb7b771410fb2dd1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26XX_schedulerRestore</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26XX_schedulerRestore</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h" line="641" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Power manager interface for CC26XX/CC13XX. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para>The Power header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/Power.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/power/PowerCC26XX.h&gt;</highlight></codeline>
</programlisting></para><para>Refer to <ref refid="_power_8h" kindref="compound">Power.h</ref> for a complete description of APIs.</para><para><heading level="2">Implementation</heading>
</para><para>This header file defines the power resources, constraints, events, sleep states and transition latencies for CC26XX/CC13XX. <hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2018,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQueueNTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_power_PowerCC26XX_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_power_PowerCC26XX_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/HwiP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/ClockP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_power_8h" kindref="compound">ti/drivers/Power.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>PowerCC26XX_Resource;<sp/></highlight><highlight class="comment">/*<sp/>Resource<sp/>identifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="_power_c_c26_x_x_8h_1a27633fb4e1e9ef1d16b4c526f564cd22" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_RESUMETIMESTANDBY<sp/><sp/>750</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="_power_c_c26_x_x_8h_1a7fa063e42fa24f7d5d7db2c0d420c4a6" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_TOTALTIMESTANDBY<sp/><sp/><sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="_power_c_c26_x_x_8h_1a03efface3d3941dd7b91d9653cc992b4" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_WAKEDELAYSTANDBY<sp/><sp/><sp/>240</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="_power_c_c26_x_x_8h_1af69c407f50204cbe8e3f71f78d1633bf" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_INITIALWAITRCOSC_LF<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_power_c_c26_x_x_8h_1a6976f53c142aad31a7deb67d6a370e4a" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_RETRYWAITRCOSC_LF<sp/><sp/><sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="_power_c_c26_x_x_8h_1ae154f9cbcf8d09e8bc2cb417b1e48c16" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_INITIALWAITXOSC_HF<sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="_power_c_c26_x_x_8h_1ad31fbc0ab3dbd0aa6298d9f90a538534" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_RETRYWAITXOSC_HF<sp/><sp/><sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="_power_c_c26_x_x_8h_1a5b63c7d42624c45f7e99957ef9cebd69" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_INITIALWAITXOSC_LF<sp/><sp/>10000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_power_c_c26_x_x_8h_1a5ca11beb72ea210b1ba5c1172654993d" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_RETRYWAITXOSC_LF<sp/><sp/><sp/><sp/>5000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>resource<sp/>IDs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_power_c_c26_x_x_8h_1aa15ce915efc606bfc93aa1a1dba3c766" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_GPT0<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="_power_c_c26_x_x_8h_1a1af8297196f468c056ab88ff4b6adaf3" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_GPT1<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="_power_c_c26_x_x_8h_1a07689c7adbc7112e4c7fedfcd6465abe" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_GPT2<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_power_c_c26_x_x_8h_1a554b5da09234a5a12deabe92e8c60112" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_GPT3<sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="_power_c_c26_x_x_8h_1a0086b3809cd19916dc83fe3707ae721f" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_SSI0<sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="_power_c_c26_x_x_8h_1af0bae9873af0845e4a1151e4f1717113" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_SSI1<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="_power_c_c26_x_x_8h_1a1fcd75795174d11d9bcf8fedae2e63fc" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_UART0<sp/><sp/><sp/>6<sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="_power_c_c26_x_x_8h_1a1637c7e9df94ea4619c8c72594071b92" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_I2C0<sp/><sp/><sp/><sp/>7<sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="_power_c_c26_x_x_8h_1af7aecb869e5c26ebc49257026be7269c" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_TRNG<sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="_power_c_c26_x_x_8h_1aa1cabaa5a4591d59c71b88e94923b89a" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_GPIO<sp/><sp/><sp/><sp/>9<sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="_power_c_c26_x_x_8h_1a9f672f8e724079777b448f3e31a63307" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_UDMA<sp/><sp/><sp/><sp/>10<sp/></highlight></codeline>
<codeline lineno="124" refid="_power_c_c26_x_x_8h_1ab7e5798bed1f87a647ca6a963e0c3336" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_CRYPTO<sp/><sp/>11<sp/></highlight></codeline>
<codeline lineno="126" refid="_power_c_c26_x_x_8h_1abe23c943cc254781d2193b054dbf8685" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_I2S<sp/><sp/><sp/><sp/><sp/>12<sp/></highlight></codeline>
<codeline lineno="128" refid="_power_c_c26_x_x_8h_1a915d52fe49b00163be68301b8e3e23fc" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH_RFCORE<sp/><sp/>13<sp/></highlight></codeline>
<codeline lineno="130" refid="_power_c_c26_x_x_8h_1a0363d14e004e085a63c2bf312542d11a" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_XOSC_HF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_power_c_c26_x_x_8h_1aaa165396fa3e549f034262cbd7c527dd" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DOMAIN_PERIPH<sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="_power_c_c26_x_x_8h_1a80c11363509b3eb0ca1587b24439b764" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DOMAIN_SERIAL<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="_power_c_c26_x_x_8h_1ad86ecb1e5493071d9b856137ebfeba1c" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DOMAIN_RFCORE<sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="_power_c_c26_x_x_8h_1a2f6486327eb9ca7b1c746fa8def3546b" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DOMAIN_SYSBUS<sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_NUMRESOURCES<sp/><sp/><sp/>19<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>resources<sp/>in<sp/>database<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>resource<sp/>record<sp/>bitmasks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_PERIPH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80<sp/></highlight><highlight class="comment">/*<sp/>resource<sp/>is<sp/>a<sp/>peripheral<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_SPECIAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40<sp/></highlight><highlight class="comment">/*<sp/>resource<sp/>requires<sp/>special<sp/>handler<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_DOMAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00<sp/></highlight><highlight class="comment">/*<sp/>resource<sp/>is<sp/>a<sp/>domain<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_PARENTMASK<sp/><sp/><sp/><sp/><sp/><sp/>0x3F<sp/></highlight><highlight class="comment">/*<sp/>parent<sp/>resource<sp/>mask<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_NOPARENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3F<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>resource<sp/>has<sp/>no<sp/>parent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="_power_c_c26_x_x_8h_1acb2ec2d3aa2f104d5691710fd2ba89b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_STANDBY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>flags<sp/>for<sp/>enabling/disabling<sp/>resources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_ENABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_DISABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>constraints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="_power_c_c26_x_x_8h_1a3ef4f975166b6195651bc4a1295196d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_RETAIN_VIMS_CACHE_IN_STANDBY<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="_power_c_c26_x_x_8h_1a169ec80ef6871b27768a145f477447a5" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DISALLOW_SHUTDOWN<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="_power_c_c26_x_x_8h_1a45e6ce6cd0332d1aee0357739aaf20b7" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DISALLOW_STANDBY<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="_power_c_c26_x_x_8h_1ab80d8e6de86d3acfa903ceab156da031" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DISALLOW_IDLE<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="_power_c_c26_x_x_8h_1a1f1dee2876bca97a20c152ca9b6c2fb5" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_NEED_FLASH_IN_IDLE<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="_power_c_c26_x_x_8h_1a14166f9527e26cbb95021795afc95588" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_SWITCH_XOSC_HF_MANUALLY<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="_power_c_c26_x_x_8h_1ae508511dd31f28553b4dffdc00aebd97" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_DISALLOW_XOSC_HF_SWITCHING<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_NUMCONSTRAINTS<sp/><sp/>7<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>constraints<sp/>supported<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deprecated<sp/>constraint<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_SD_DISALLOW<sp/><sp/>PowerCC26XX_DISALLOW_SHUTDOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_SB_DISALLOW<sp/><sp/>PowerCC26XX_DISALLOW_STANDBY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_IDLE_PD_DISALLOW<sp/><sp/>PowerCC26XX_DISALLOW_IDLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_XOSC_HF_SWITCHING_DISALLOW<sp/>PowerCC26XX_DISALLOW_XOSC_HF_SWITCHING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_SB_VIMS_CACHE_RETAIN<sp/>PowerCC26XX_RETAIN_VIMS_CACHE_IN_STANDBY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/><sp/>Events</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/><sp/>Each<sp/>event<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two<sp/>and<sp/>must<sp/>be<sp/>sequential</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/><sp/>without<sp/>any<sp/>gaps.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="_power_c_c26_x_x_8h_1a88d658da388e2fc58328283b3349003e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_ENTERING_STANDBY<sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="_power_c_c26_x_x_8h_1a09692bd5d3fb7c16fcf320b0490f29fa" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_ENTERING_SHUTDOWN<sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="_power_c_c26_x_x_8h_1a7f9f2c7a5f0c307aeab0b9854d2384b9" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_AWAKE_STANDBY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="_power_c_c26_x_x_8h_1ae9a4db5e58593a5bc2f6cbba3c8ed283" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_AWAKE_STANDBY_LATE<sp/><sp/>0x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="_power_c_c26_x_x_8h_1a592028a2a5ba6e323205a6400ef11b07" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_XOSC_HF_SWITCHED<sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="_power_c_c26_x_x_8h_1acaed4f189f650d485596cd173016ca1b" refkind="member"><highlight class="preprocessor">#define<sp/>PowerCC26XX_JTAG_PD_TURNED_ON<sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_NUMEVENTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>events<sp/>supported<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/><sp/>Calibration<sp/>stages</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_SETUP_CALIBRATE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_INITIATE_CALIBRATE<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PowerCC26XX_DO_CALIBRATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\cond<sp/>*/</highlight></codeline>
<codeline lineno="322"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PowerCC26XX_ResourceRecord<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>flags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>resource<sp/>type<sp/>|<sp/>first<sp/>parent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>driverlibID;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>corresponding<sp/>driverlib<sp/>ID<sp/>for<sp/>this<sp/>resource<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}<sp/>PowerCC26XX_ResourceRecord;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>\endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="struct_power_c_c26_x_x___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_power_c_c26_x_x___config" kindref="compound">PowerCC26XX_Config</ref><sp/>{</highlight></codeline>
<codeline lineno="336" refid="struct_power_c_c26_x_x___config_1aa5fa2edd433b84788c63277a21bc8dea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_power_8h_1a435fdeb71d13ea6be86f599c9b6a0d78" kindref="member">Power_PolicyInitFxn</ref><sp/><ref refid="struct_power_c_c26_x_x___config_1aa5fa2edd433b84788c63277a21bc8dea" kindref="member">policyInitFxn</ref>;</highlight></codeline>
<codeline lineno="358" refid="struct_power_c_c26_x_x___config_1acd4011995544865f832440e9d869b563" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_power_8h_1a333038d1e9cd5f93dda7b83f8a1afa8b" kindref="member">Power_PolicyFxn</ref><sp/><ref refid="struct_power_c_c26_x_x___config_1acd4011995544865f832440e9d869b563" kindref="member">policyFxn</ref>;</highlight></codeline>
<codeline lineno="370" refid="struct_power_c_c26_x_x___config_1a92f68736067cceef7bbc32408b5bec96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*calibrateFxn)(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int);</highlight></codeline>
<codeline lineno="397" refid="struct_power_c_c26_x_x___config_1a2984f1a5a8939c690067bcaa82f8edba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_power_c_c26_x_x___config_1a2984f1a5a8939c690067bcaa82f8edba" kindref="member">maxStandbyDuration</ref>;</highlight></codeline>
<codeline lineno="414" refid="struct_power_c_c26_x_x___config_1a7878a56b4a04b55c66e3a32f102fb525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_power_c_c26_x_x___config_1a7878a56b4a04b55c66e3a32f102fb525" kindref="member">vddrRechargeMargin</ref>;</highlight></codeline>
<codeline lineno="427" refid="struct_power_c_c26_x_x___config_1a34214625d9b49848b0297e40d4af8188" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___config_1a34214625d9b49848b0297e40d4af8188" kindref="member">enableMaxStandbyDuration</ref>;</highlight></codeline>
<codeline lineno="440" refid="struct_power_c_c26_x_x___config_1a0dabcd65e4700189af683ce0f54e8479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___config_1a0dabcd65e4700189af683ce0f54e8479" kindref="member">enablePolicy</ref>;</highlight></codeline>
<codeline lineno="449" refid="struct_power_c_c26_x_x___config_1ae5541ad9e9fb883e9bdf9c68d1c0226b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___config_1ae5541ad9e9fb883e9bdf9c68d1c0226b" kindref="member">calibrateRCOSC_LF</ref>;</highlight></codeline>
<codeline lineno="458" refid="struct_power_c_c26_x_x___config_1a896b6c56c0d1be28de7ce4ef09fe616a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___config_1a896b6c56c0d1be28de7ce4ef09fe616a" kindref="member">calibrateRCOSC_HF</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/><ref refid="_power_c_c26_x_x_8h_1adb528c35432da8c5cae957cdbf874740" kindref="member">PowerCC26XX_Config</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="struct_power_c_c26_x_x___module_state" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_power_c_c26_x_x___module_state" kindref="compound">PowerCC26XX_ModuleState</ref><sp/>{</highlight></codeline>
<codeline lineno="468" refid="struct_power_c_c26_x_x___module_state_1ab7a30da55e342a00e49baab649ad1fc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_list___list" kindref="compound">List_List</ref><sp/><ref refid="struct_power_c_c26_x_x___module_state_1ab7a30da55e342a00e49baab649ad1fc0" kindref="member">notifyList</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469" refid="struct_power_c_c26_x_x___module_state_1ad500e504e794086911ecad33c3134f37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1ad500e504e794086911ecad33c3134f37" kindref="member">constraintMask</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470" refid="struct_power_c_c26_x_x___module_state_1ae62e5716b9434790354784fa05b73482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ClockP_Struct<sp/><ref refid="struct_power_c_c26_x_x___module_state_1ae62e5716b9434790354784fa05b73482" kindref="member">clockObj</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471" refid="struct_power_c_c26_x_x___module_state_1aa5af578b28c4ec73a9e6a74b4d7ca4c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ClockP_Struct<sp/><ref refid="struct_power_c_c26_x_x___module_state_1aa5af578b28c4ec73a9e6a74b4d7ca4c7" kindref="member">xoscClockObj</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472" refid="struct_power_c_c26_x_x___module_state_1ab954ff9d624f9b75fe313a3f0e10311c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ClockP_Struct<sp/><ref refid="struct_power_c_c26_x_x___module_state_1ab954ff9d624f9b75fe313a3f0e10311c" kindref="member">lfClockObj</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473" refid="struct_power_c_c26_x_x___module_state_1a5db1ac70532dcfd9b52948e0be8c4538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ClockP_Struct<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a5db1ac70532dcfd9b52948e0be8c4538" kindref="member">calClockStruct</ref>;<sp/></highlight></codeline>
<codeline lineno="474" refid="struct_power_c_c26_x_x___module_state_1a13cca41139bf5dcee868fe03782c1446" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HwiP_Struct<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a13cca41139bf5dcee868fe03782c1446" kindref="member">hwiStruct</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475" refid="struct_power_c_c26_x_x___module_state_1aa85213d5686bba5b7b214207deb27637" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1aa85213d5686bba5b7b214207deb27637" kindref="member">nDeltaFreqCurr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476" refid="struct_power_c_c26_x_x___module_state_1a964421fa101fbf783bcaf061380614ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a964421fa101fbf783bcaf061380614ef" kindref="member">nCtrimCurr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477" refid="struct_power_c_c26_x_x___module_state_1afa3ea38f50ef03b11159820b2ea40385" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1afa3ea38f50ef03b11159820b2ea40385" kindref="member">nCtrimFractCurr</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478" refid="struct_power_c_c26_x_x___module_state_1a88f64a21ba0bf629a4a053acc7437b4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a88f64a21ba0bf629a4a053acc7437b4d" kindref="member">nCtrimNew</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479" refid="struct_power_c_c26_x_x___module_state_1ae73577d0ac8b0e0ac6066a51da2e2069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1ae73577d0ac8b0e0ac6066a51da2e2069" kindref="member">nCtrimFractNew</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480" refid="struct_power_c_c26_x_x___module_state_1a72a304c2f61537e3419cf94ae9428dcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a72a304c2f61537e3419cf94ae9428dcc" kindref="member">nRtrimNew</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481" refid="struct_power_c_c26_x_x___module_state_1a71ecdf485b5ac83bda9f50683912cf80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a71ecdf485b5ac83bda9f50683912cf80" kindref="member">nRtrimCurr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482" refid="struct_power_c_c26_x_x___module_state_1a5ba698f9b08cd1fa921a376c386f4002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a5ba698f9b08cd1fa921a376c386f4002" kindref="member">nDeltaFreqNew</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483" refid="struct_power_c_c26_x_x___module_state_1abbeb88a5424af553d50baa10acad9804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1abbeb88a5424af553d50baa10acad9804" kindref="member">bRefine</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="484" refid="struct_power_c_c26_x_x___module_state_1a94573418a672016214ff7c62dc27bc8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a94573418a672016214ff7c62dc27bc8f" kindref="member">state</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485" refid="struct_power_c_c26_x_x___module_state_1a89a7943515d2c6eb7da22a2017c3891c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1a89a7943515d2c6eb7da22a2017c3891c" kindref="member">xoscPending</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486" refid="struct_power_c_c26_x_x___module_state_1aac1b3efea8ce636fe2ccfdc97fe03aa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1aac1b3efea8ce636fe2ccfdc97fe03aa3" kindref="member">calLF</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487" refid="struct_power_c_c26_x_x___module_state_1ae1e7421cc42f5181b00720174d81ede7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1ae1e7421cc42f5181b00720174d81ede7" kindref="member">hwiState</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488" refid="struct_power_c_c26_x_x___module_state_1a9311e19be396a5ab3c8b2d5f6bfff6f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1a9311e19be396a5ab3c8b2d5f6bfff6f3" kindref="member">busyCal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489" refid="struct_power_c_c26_x_x___module_state_1a45966e49f7fc38e3006ef3aa68761188" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_power_c_c26_x_x___module_state_1a45966e49f7fc38e3006ef3aa68761188" kindref="member">calStep</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490" refid="struct_power_c_c26_x_x___module_state_1a702ec4760d50a0bcb6577ff029938ae5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1a702ec4760d50a0bcb6577ff029938ae5" kindref="member">firstLF</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491" refid="struct_power_c_c26_x_x___module_state_1ad1d986fdb2bc8fe27a4d5341eaa059ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1ad1d986fdb2bc8fe27a4d5341eaa059ef" kindref="member">enablePolicy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492" refid="struct_power_c_c26_x_x___module_state_1a587f4424044334445086b426953a3e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_power_c_c26_x_x___module_state_1a587f4424044334445086b426953a3e5c" kindref="member">initialized</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor">#if<sp/>defined(DeviceFamily_CC26X0R2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emulatorAttached;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="struct_power_c_c26_x_x___module_state_1af141040006ff722deab0a60947de14c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>constraintCounts[PowerCC26XX_NUMCONSTRAINTS];</highlight></codeline>
<codeline lineno="498" refid="struct_power_c_c26_x_x___module_state_1af13aa7f8e1d035365a1f2b8b30e57a61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>resourceCounts[PowerCC26XX_NUMRESOURCES];</highlight></codeline>
<codeline lineno="500" refid="struct_power_c_c26_x_x___module_state_1ac8d49a96f7ae612895080a07378d3dbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int<sp/>(*resourceHandlers[3])(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int);</highlight></codeline>
<codeline lineno="502" refid="struct_power_c_c26_x_x___module_state_1a11876366e8d0d07879231d033ab31e57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_power_8h_1a333038d1e9cd5f93dda7b83f8a1afa8b" kindref="member">Power_PolicyFxn</ref><sp/><ref refid="struct_power_c_c26_x_x___module_state_1a11876366e8d0d07879231d033ab31e57" kindref="member">policyFxn</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal">}<sp/><ref refid="_power_c_c26_x_x_8h_1a2903fa8d575b7c6d33d95bd652625561" kindref="member">PowerCC26XX_ModuleState</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1a27a4c7312d5cf59eb699ad5f87104408" kindref="member">PowerCC26XX_calibrate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1ad4ff77b3854dd494aac42e42f70bdee7" kindref="member">PowerCC26XX_doWFI</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">ClockP_Handle<sp/><ref refid="_power_c_c26_x_x_8h_1ad90c836c979f3569fa0981154dbd245c" kindref="member">PowerCC26XX_getClockHandle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">uint32_t<sp/><ref refid="_power_c_c26_x_x_8h_1ace6e106b5cef8823de93a6d4b66ca964" kindref="member">PowerCC26XX_getXoscStartupTime</ref>(uint32_t<sp/>timeUntilWakeupInMs);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1aac76ed82c4d33897111e7e3e863e2c9c" kindref="member">PowerCC26XX_injectCalibration</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1a39c82b7c57a1b5c013f5e285e98232e9" kindref="member">PowerCC26XX_noCalibrate</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1ac415ca8b39f16660c12bc636ed429b6b" kindref="member">PowerCC26XX_isStableXOSC_HF</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1a46422725a0c7c694a589472fb625f92e" kindref="member">PowerCC26XX_switchXOSC_HF</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1aea49c1a01cb045b1ce6be1ecb3587498" kindref="member">PowerCC26XX_standbyPolicy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1a534e5a58297592a785933b137a8198f8" kindref="member">PowerCC26XX_schedulerDisable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x_x_8h_1a416f870ed88a1aeb7b771410fb2dd1f0" kindref="member">PowerCC26XX_schedulerRestore</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="_power_c_c26_x_x_8h_1a33c66d2d8a05f50274105eef817c41b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Power_getPerformanceLevel(void)<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="_power_c_c26_x_x_8h_1a5c634ae909d29db6dd48c6bd104b62e5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Power_setPerformanceLevel(level)<sp/><sp/>Power_EFAIL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>POWER_CC26XX_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/power/PowerCC26XX.h"/>
  </compounddef>
</doxygen>
