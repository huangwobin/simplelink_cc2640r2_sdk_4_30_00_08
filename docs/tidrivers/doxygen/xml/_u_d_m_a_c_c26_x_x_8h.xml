<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_u_d_m_a_c_c26_x_x_8h" kind="file" language="C++">
    <compoundname>UDMACC26XX.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_power_8h" local="no">ti/drivers/Power.h</includes>
    <includes refid="_power_c_c26_x_x_8h" local="no">ti/drivers/power/PowerCC26XX.h</includes>
    <includes local="no">ti/devices/DeviceFamily.h</includes>
    <includes local="no">DeviceFamily_constructPath(inc/hw_types.h)</includes>
    <includes local="no">DeviceFamily_constructPath(driverlib/udma.h)</includes>
    <includedby refid="_a_d_c_buf_c_c26_x2_8h" local="no">ADCBufCC26X2.h</includedby>
    <includedby refid="_a_d_c_buf_c_c26_x_x_8h" local="no">ADCBufCC26XX.h</includedby>
    <includedby refid="_s_p_i_c_c26_x2_d_m_a_8h" local="no">SPICC26X2DMA.h</includedby>
    <includedby refid="_s_p_i_c_c26_x_x_d_m_a_8h" local="no">SPICC26XXDMA.h</includedby>
    <incdepgraph>
      <node id="864">
        <label>stdbool.h</label>
      </node>
      <node id="868">
        <label>ti/drivers/power/PowerCC26XX.h</label>
        <link refid="_power_c_c26_x_x_8h"/>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="863">
        <label>stdint.h</label>
      </node>
      <node id="865">
        <label>ti/drivers/Power.h</label>
        <link refid="_power_8h"/>
        <childnode refid="866" relation="include">
        </childnode>
      </node>
      <node id="867">
        <label>stddef.h</label>
      </node>
      <node id="862">
        <label>UDMACC26XX.h</label>
        <link refid="_u_d_m_a_c_c26_x_x_8h"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>ti/drivers/utils/List.h</label>
        <link refid="_list_8h"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
      </node>
      <node id="871">
        <label>ti/devices/DeviceFamily.h</label>
      </node>
      <node id="869">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="870">
        <label>ti/drivers/dpl/ClockP.h</label>
      </node>
      <node id="872">
        <label>DeviceFamily_constructPath(inc/hw_types.h)</label>
      </node>
      <node id="873">
        <label>DeviceFamily_constructPath(driverlib/udma.h)</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="877">
        <label>SPICC26X2DMA.h</label>
        <link refid="_s_p_i_c_c26_x2_d_m_a_8h"/>
      </node>
      <node id="875">
        <label>ADCBufCC26X2.h</label>
        <link refid="_a_d_c_buf_c_c26_x2_8h"/>
      </node>
      <node id="878">
        <label>SPICC26XXDMA.h</label>
        <link refid="_s_p_i_c_c26_x_x_d_m_a_8h"/>
      </node>
      <node id="874">
        <label>UDMACC26XX.h</label>
        <link refid="_u_d_m_a_c_c26_x_x_8h"/>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
      </node>
      <node id="876">
        <label>ADCBufCC26XX.h</label>
        <link refid="_a_d_c_buf_c_c26_x_x_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_u_d_m_a_c_c26_x_x___object" prot="public">UDMACC26XX_Object</innerclass>
    <innerclass refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" prot="public">UDMACC26XX_HWAttrs</innerclass>
    <innerclass refid="struct_u_d_m_a_c_c26_x_x___config" prot="public">UDMACC26XX_Config</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_u_d_m_a_c_c26_x_x_8h_1ab956c64f89045e5c6546115ec6062a7f" prot="public" static="no">
        <name>UDMACC26XX_CONFIG_BASE</name>
        <initializer>0x20001800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Base address for the DMA control table, must be 1024 bytes aligned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="158" column="13" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_u_d_m_a_c_c26_x_x_8h_1a5c7843573980a2380bd0adf65f58a433" prot="public" static="no">
        <name>UDMACC26XX_SET_TRANSFER_SIZE</name>
        <param><defname>SIZE</defname></param>
        <initializer>(((SIZE - 1) &lt;&lt; UDMA_XFER_SIZE_S) &amp; UDMA_XFER_SIZE_M)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make sure DMA control table base address is 1024 bytes aligned</para><para>Compiler specific macros to allocate DMA control table entries</para><para>Sets the DMA transfer size in number of items </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="185" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_u_d_m_a_c_c26_x_x_8h_1af51cbac1b7f6cc86b9ea0db72426dade" prot="public" static="no">
        <name>UDMACC26XX_GET_TRANSFER_SIZE</name>
        <param><defname>CONTROL</defname></param>
        <initializer>(((CONTROL &amp; UDMA_XFER_SIZE_M) &gt;&gt; UDMA_XFER_SIZE_S) + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the DMA transfer size in number of items </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="187" column="9" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_u_d_m_a_c_c26_x_x_8h_1a3645577cacce45f1ad3b4879e3ef5afc" prot="public" static="no">
        <type>struct <ref refid="struct_u_d_m_a_c_c26_x_x___object" kindref="compound">UDMACC26XX_Object</ref></type>
        <definition>typedef struct UDMACC26XX_Object  UDMACC26XX_Object</definition>
        <argsstring></argsstring>
        <name>UDMACC26XX_Object</name>
        <briefdescription>
<para>UDMACC26XX object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_d_m_a_c_c26_x_x_8h_1ac9e26a57f30a829b5b2e3174e1df812f" prot="public" static="no">
        <type>struct <ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref></type>
        <definition>typedef struct UDMACC26XX_HWAttrs  UDMACC26XX_HWAttrs</definition>
        <argsstring></argsstring>
        <name>UDMACC26XX_HWAttrs</name>
        <briefdescription>
<para>UDMACC26XX hardware attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_d_m_a_c_c26_x_x_8h_1a59acc64eb8db50a7a37b44fb4fa5fad1" prot="public" static="no">
        <type>struct <ref refid="struct_u_d_m_a_c_c26_x_x___config" kindref="compound">UDMACC26XX_Config</ref></type>
        <definition>typedef struct UDMACC26XX_Config  UDMACC26XX_Config</definition>
        <argsstring></argsstring>
        <name>UDMACC26XX_Config</name>
        <briefdescription>
<para>UDMACC26XX Global configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" prot="public" static="no">
        <type>struct <ref refid="struct_u_d_m_a_c_c26_x_x___config" kindref="compound">UDMACC26XX_Config</ref> *</type>
        <definition>typedef struct UDMACC26XX_Config* UDMACC26XX_Handle</definition>
        <argsstring></argsstring>
        <name>UDMACC26XX_Handle</name>
        <briefdescription>
<para>A handle that is returned from a <ref refid="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff" kindref="member">UDMACC26XX_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="239" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a380c8790a135edeacf0345e59c6cbc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UDMACC26XX_hwiIntFxn</definition>
        <argsstring>(uintptr_t callbacks)</argsstring>
        <name>UDMACC26XX_hwiIntFxn</name>
        <param>
          <type>uintptr_t</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a8bb3d9eff25abd3378f9cbc3189440bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void UDMACC26XX_init</definition>
        <argsstring>(UDMACC26XX_Handle handle)</argsstring>
        <name>UDMACC26XX_init</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to initialize the CC26XX DMA driver. </para>        </briefdescription>
        <detaileddescription>
<para>The function will set the isOpen flag to false, and should be called prior to opening the DMA driver.</para><para><simplesect kind="pre"><para>Calling context: Hwi, Swi, Task</para></simplesect>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="see"><para><ref refid="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff" kindref="member">UDMACC26XX_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="256" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="256" bodyend="265"/>
        <references refid="struct_u_d_m_a_c_c26_x_x___config_1a9b87747e67e7cba15e71ccdd495bbf65" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="232">UDMACC26XX_Config::object</references>
        <references refid="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff">UDMACC26XX_open</references>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
        <definition>UDMACC26XX_Handle UDMACC26XX_open</definition>
        <argsstring>()</argsstring>
        <name>UDMACC26XX_open</name>
        <briefdescription>
<para>Function to initialize the CC26XX DMA peripheral. </para>        </briefdescription>
        <detaileddescription>
<para>The function will set a dependency on the peripheral power domain, i.e. power up the module and enable the clock. Note this function always uses the first DMA entry in the global UDMACC26XX_config list.</para><para><simplesect kind="pre"><para><ref refid="_u_d_m_a_c_c26_x_x_8h_1a8bb3d9eff25abd3378f9cbc3189440bf" kindref="member">UDMACC26XX_init()</ref> has to be called first. Calling context: Task</para></simplesect>
<simplesect kind="return"><para>UDMACC26XX_Handle on success or NULL if error or if it has been already opened</para></simplesect>
<simplesect kind="see"><para><ref refid="_u_d_m_a_c_c26_x_x_8h_1a5529a47329f27d70c490c5ed1c1b19f0" kindref="member">UDMACC26XX_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="282" column="1"/>
        <referencedby refid="_u_d_m_a_c_c26_x_x_8h_1a8bb3d9eff25abd3378f9cbc3189440bf" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="256" endline="265">UDMACC26XX_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a1eec9bde0731a07b492a9f483b0c554b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void UDMACC26XX_channelEnable</definition>
        <argsstring>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</argsstring>
        <name>UDMACC26XX_channelEnable</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channelBitMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="297" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="297" bodyend="306"/>
        <references refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="201">UDMACC26XX_HWAttrs::baseAddr</references>
        <references refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="233">UDMACC26XX_Config::hwAttrs</references>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a5725e1db13295ef9096723f2b7c6364c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE bool</type>
        <definition>__STATIC_INLINE bool UDMACC26XX_channelDone</definition>
        <argsstring>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</argsstring>
        <name>UDMACC26XX_channelDone</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channelBitMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="326" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="326" bodyend="335"/>
        <references refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="201">UDMACC26XX_HWAttrs::baseAddr</references>
        <references refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="233">UDMACC26XX_Config::hwAttrs</references>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a1571fcbf7f44fca000fef38d8955eae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void UDMACC26XX_clearInterrupt</definition>
        <argsstring>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</argsstring>
        <name>UDMACC26XX_clearInterrupt</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channelBitMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="354" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="354" bodyend="363"/>
        <references refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="201">UDMACC26XX_HWAttrs::baseAddr</references>
        <references refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="233">UDMACC26XX_Config::hwAttrs</references>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a0cd214fa0e13f1ddb1a519a30acfe30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void UDMACC26XX_channelDisable</definition>
        <argsstring>(UDMACC26XX_Handle handle, uint32_t channelBitMask)</argsstring>
        <name>UDMACC26XX_channelDisable</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channelBitMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="382" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="382" bodyend="387"/>
        <references refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="201">UDMACC26XX_HWAttrs::baseAddr</references>
        <references refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="233">UDMACC26XX_Config::hwAttrs</references>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a3118471d8450fd14aaf03f3e1b087a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_INLINE void</type>
        <definition>__STATIC_INLINE void UDMACC26XX_disableAttribute</definition>
        <argsstring>(UDMACC26XX_Handle handle, uint32_t channelNum, uint32_t attr)</argsstring>
        <name>UDMACC26XX_disableAttribute</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>channelNum</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="409" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" bodystart="409" bodyend="415"/>
        <references refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="201">UDMACC26XX_HWAttrs::baseAddr</references>
        <references refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="233">UDMACC26XX_Config::hwAttrs</references>
        <references refid="_u_d_m_a_c_c26_x_x_8h_1a5529a47329f27d70c490c5ed1c1b19f0">UDMACC26XX_close</references>
      </memberdef>
      <memberdef kind="function" id="_u_d_m_a_c_c26_x_x_8h_1a5529a47329f27d70c490c5ed1c1b19f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UDMACC26XX_close</definition>
        <argsstring>(UDMACC26XX_Handle handle)</argsstring>
        <name>UDMACC26XX_close</name>
        <param>
          <type><ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close the DMA driver. </para>        </briefdescription>
        <detaileddescription>
<para>Will disable the DMA hardware, release the power dependency and destruct the HWI interrupt.</para><para><simplesect kind="pre"><para><ref refid="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff" kindref="member">UDMACC26XX_open()</ref> has to be called first. Calling context: Task</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A SPI_Handle returned from <ref refid="_s_p_i_8h_1a9c9022decfb136991d6b53f7dd2ae2fc" kindref="member">SPI_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="see"><para>SPICC26XXDMA_open </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h" line="432" column="1"/>
        <referencedby refid="_u_d_m_a_c_c26_x_x_8h_1a3118471d8450fd14aaf03f3e1b087a17" compoundref="_u_d_m_a_c_c26_x_x_8h" startline="409" endline="415">UDMACC26XX_disableAttribute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>UDMACC26XX driver implementation. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><heading level="1">Driver include</heading>
</para><para>The UDMACC26XX header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/dma/UDMACC26XX.h&gt;</highlight></codeline>
</programlisting></para><para><heading level="1">Overview</heading>
</para><para>The UDMACC26XX driver currently only supports being used by the <ref refid="_s_p_i_c_c26_x_x_d_m_a_8h" kindref="compound">SPICC26XXDMA.h</ref>. module. In other words, the application should never call any of the functions in this file.</para><para><heading level="1">General Behavior</heading>
</para><para>This driver is used implicitly by the <ref refid="_s_p_i_c_c26_x_x_d_m_a_8h" kindref="compound">SPICC26XXDMA.h</ref> driver so user should not have to interface to this driver from the application. The uDMA HW makes use of a control table in RAM which must be 1024 bytes aligned. The default base address of this control table is 0x20000400, however this can be changed by simply changing UDMACC26XX_CONFIG_BASE. The <ref refid="_s_p_i_c_c26_x_x_d_m_a_8h" kindref="compound">SPICC26XXDMA.h</ref> supports SPI0 and SPI1, and uses both TX and RX DMA channels. Each control table entry is 16 bytes, so if an application uses both SSI0 and SSI1 the total RAM usage will be 4*16=64 bytes. If only one SSI module is used only 2*16=32 bytes of RAM is used. Please see <ref refid="_u_d_m_a_c_c26_x_x_8h_1USE_CASE" kindref="member">Use cases</ref> for example.</para><para><heading level="1">Error handling</heading>
</para><para>Error handling is handled by the overlying driver which uses the DMA, currently this is only <ref refid="_s_p_i_c_c26_x_x_d_m_a_8h" kindref="compound">SPICC26XXDMA.h</ref></para><para><heading level="1">Power management</heading>
</para><para>Power management is handled by the overlying driver which uses the DMA, currently this is only <ref refid="_s_p_i_c_c26_x_x_d_m_a_8h" kindref="compound">SPICC26XXDMA.h</ref></para><para><heading level="1">Supported functions</heading>
</para><para>Note that these functions should never be called from the application, they are only called from other drivers. They are however included here for completeness:</para><para><table rows="3" cols="2"><row>
<entry thead="yes"><para>API function </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff" kindref="member">UDMACC26XX_open()</ref> </para></entry><entry thead="no"><para>Initialize and enable the uDMA HW and set system dependencies. </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_u_d_m_a_c_c26_x_x_8h_1a5529a47329f27d70c490c5ed1c1b19f0" kindref="member">UDMACC26XX_close()</ref> </para></entry><entry thead="no"><para>Disable uUDMA HW and release system dependencies </para></entry></row>
</table>
<simplesect kind="note"><para>These functions should not be called by code. These functions are called by drivers who&apos;re using the DMA.</para></simplesect>
<heading level="1">Unsupported Functionality</heading>
</para><para>No known limitations</para><para><heading level="1">Use Cases<anchor id="_u_d_m_a_c_c26_x_x_8h_1USE_CASE"/></heading>
</para><para>The DMA is only used together with the <ref refid="_s_p_i_c_c26_x_x_d_m_a_8h" kindref="compound">SPICC26XXDMA.h</ref> driver, so the application should never call any of the functions in this driver directly. The only thing that the application is allowed to modify is the base address of the DMA control table in RAM. (Default value is 0x2000_0400) Remember it must be 1024 bytes aligned. <programlisting><codeline><highlight class="normal">#define<sp/>UDMACC26XX_CONFIG_BASE<sp/>0x2000_0400</highlight></codeline>
</programlisting></para><para><itemizedlist>
<listitem><para>If only SSI0 is used, this will allocate 2*16=32 RAM bytes at address:<linebreak/>
[0x2000_0430-0x2000_044F] = SSI0 RX/TX DMA channels</para></listitem><listitem><para>If only SSI1 is used, this will allocate 2*16=32 RAM bytes at address:<linebreak/>
[0x2000_0500-0x2000_051F] = SSI1 RX/TX DMA channels</para></listitem><listitem><para>If both SSI0 and SSI1 are used, this will allocate 4*16=64 RAM bytes at addresses:<linebreak/>
[0x2000_0430-0x2000_044F] = SSI0 RX/TX DMA channels<linebreak/>
[0x2000_0500-0x2000_051F] = SSI1 RX/TX DMA channels</para></listitem></itemizedlist>
</para><para><heading level="1">Instrumentation</heading>
</para><para>The SPI driver interface produces log statements if instrumentation is enabled.</para><para><table rows="3" cols="2"><row>
<entry thead="yes"><para>Diagnostics Mask </para></entry><entry thead="yes"><para>Log details  </para></entry></row>
<row>
<entry thead="no"><para>Diags_USER1 </para></entry><entry thead="no"><para>basic SPI operations performed </para></entry></row>
<row>
<entry thead="no"><para>Diags_USER2 </para></entry><entry thead="no"><para>detailed SPI operations performed </para></entry></row>
</table>
<hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2018,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_UDMACC26XX__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_UDMACC26XX__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_power_8h" kindref="compound">ti/drivers/Power.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_power_c_c26_x_x_8h" kindref="compound">ti/drivers/power/PowerCC26XX.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/devices/DeviceFamily.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(inc/hw_types.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(driverlib/udma.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">/*<sp/>Add<sp/>DMACC26XX_STATUS_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="comment">/*<sp/>Add<sp/>DMACC26XX_CMD_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor">#if<sp/>!defined(UDMACC26XX_CONFIG_BASE)<sp/>&amp;&amp;<sp/>(DeviceFamily_PARENT<sp/>==<sp/>DeviceFamily_PARENT_CC13X2_CC26X2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="_u_d_m_a_c_c26_x_x_8h_1ab956c64f89045e5c6546115ec6062a7f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UDMACC26XX_CONFIG_BASE<sp/>0x20001800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(UDMACC26XX_CONFIG_BASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>UDMACC26XX_CONFIG_BASE<sp/>0x20000400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor">#if(UDMACC26XX_CONFIG_BASE<sp/>&amp;<sp/>0x3FF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;Base<sp/>address<sp/>for<sp/>DMA<sp/>control<sp/>table<sp/>&apos;UDMACC26XX_CONFIG_BASE&apos;<sp/>must<sp/>be<sp/>1024<sp/>bytes<sp/>aligned.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor">#if<sp/>defined(__IAR_SYSTEMS_ICC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOCATE_CONTROL_TABLE_ENTRY(ENTRY_NAME,<sp/>CHANNEL_INDEX)<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor">__no_init<sp/>static<sp/>volatile<sp/>tDMAControlTable<sp/>ENTRY_NAME<sp/>@<sp/>UDMACC26XX_CONFIG_BASE<sp/>+<sp/>CHANNEL_INDEX<sp/>*<sp/>sizeof(tDMAControlTable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TI_COMPILER_VERSION__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOCATE_CONTROL_TABLE_ENTRY(ENTRY_NAME,<sp/>CHANNEL_INDEX)<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">PRAGMA(LOCATION(<sp/>ENTRY_NAME<sp/>,<sp/>UDMACC26XX_CONFIG_BASE<sp/>+<sp/>CHANNEL_INDEX<sp/>*<sp/>sizeof(tDMAControlTable)<sp/>);)\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor">static<sp/>volatile<sp/>tDMAControlTable<sp/>ENTRY_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRAGMA(x)<sp/>_Pragma(#x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOCATE_CONTROL_TABLE_ENTRY(ENTRY_NAME,<sp/>CHANNEL_INDEX)<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>int<sp/>UDMACC26XX_<sp/>##<sp/>ENTRY_NAME<sp/>##<sp/>_is_placed;<sp/>__attribute__<sp/>((section(&quot;.&quot;#ENTRY_NAME)))<sp/>static<sp/>volatile<sp/>tDMAControlTable<sp/>ENTRY_NAME<sp/>=<sp/>{&amp;UDMACC26XX_<sp/>##<sp/>ENTRY_NAME<sp/>##<sp/>_is_placed}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;don&apos;t<sp/>know<sp/>how<sp/>to<sp/>define<sp/>ALLOCATE_CONTROL_TABLE_ENTRY<sp/>for<sp/>this<sp/>toolchain&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="_u_d_m_a_c_c26_x_x_8h_1a5c7843573980a2380bd0adf65f58a433" refkind="member"><highlight class="preprocessor">#define<sp/>UDMACC26XX_SET_TRANSFER_SIZE(SIZE)<sp/><sp/><sp/><sp/>(((SIZE<sp/>-<sp/>1)<sp/>&lt;&lt;<sp/>UDMA_XFER_SIZE_S)<sp/>&amp;<sp/>UDMA_XFER_SIZE_M)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="_u_d_m_a_c_c26_x_x_8h_1af51cbac1b7f6cc86b9ea0db72426dade" refkind="member"><highlight class="preprocessor">#define<sp/>UDMACC26XX_GET_TRANSFER_SIZE(CONTROL)<sp/>(((CONTROL<sp/>&amp;<sp/>UDMA_XFER_SIZE_M)<sp/>&gt;&gt;<sp/>UDMA_XFER_SIZE_S)<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="struct_u_d_m_a_c_c26_x_x___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_d_m_a_c_c26_x_x___object" kindref="compound">UDMACC26XX_Object</ref><sp/>{</highlight></codeline>
<codeline lineno="193" refid="struct_u_d_m_a_c_c26_x_x___object_1a90be70e4c9fd4907abdb17412c0cc7f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___object_1a90be70e4c9fd4907abdb17412c0cc7f4" kindref="member">isOpen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194" refid="struct_u_d_m_a_c_c26_x_x___object_1a0a6e8a9bdd1a5b20d30e157bd7efa391" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HwiP_Struct<sp/><ref refid="struct_u_d_m_a_c_c26_x_x___object_1a0a6e8a9bdd1a5b20d30e157bd7efa391" kindref="member">hwi</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a3645577cacce45f1ad3b4879e3ef5afc" kindref="member">UDMACC26XX_Object</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/>{</highlight></codeline>
<codeline lineno="201" refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" kindref="member">baseAddr</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a77e02a4666668a7d35d012e5dd7b2d24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PowerCC26XX_Resource<sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a77e02a4666668a7d35d012e5dd7b2d24" kindref="member">powerMngrId</ref>;<sp/></highlight></codeline>
<codeline lineno="203" refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a842b5f7c2c0a2563eaf6f037cff07785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a842b5f7c2c0a2563eaf6f037cff07785" kindref="member">intNum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a56b5f00f14e051a08329130b6d2c6fe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a56b5f00f14e051a08329130b6d2c6fe6" kindref="member">intPriority</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}<sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1ac9e26a57f30a829b5b2e3174e1df812f" kindref="member">UDMACC26XX_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="struct_u_d_m_a_c_c26_x_x___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_d_m_a_c_c26_x_x___config" kindref="compound">UDMACC26XX_Config</ref><sp/>{</highlight></codeline>
<codeline lineno="232" refid="struct_u_d_m_a_c_c26_x_x___config_1a9b87747e67e7cba15e71ccdd495bbf65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a9b87747e67e7cba15e71ccdd495bbf65" kindref="member">object</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233" refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}<sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a59acc64eb8db50a7a37b44fb4fa5fad1" kindref="member">UDMACC26XX_Config</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_d_m_a_c_c26_x_x___config" kindref="compound">UDMACC26XX_Config</ref><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="_u_d_m_a_c_c26_x_x_8h_1a969a9feb0f822c4764ef1da2ff5066cf" kindref="member">UDMACC26XX_Handle</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Extern&apos;d<sp/>hwiIntFxn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a380c8790a135edeacf0345e59c6cbc29" kindref="member">UDMACC26XX_hwiIntFxn</ref>(uintptr_t<sp/>callbacks);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="_u_d_m_a_c_c26_x_x_8h_1a8bb3d9eff25abd3378f9cbc3189440bf" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a8bb3d9eff25abd3378f9cbc3189440bf" kindref="member">UDMACC26XX_init</ref>(UDMACC26XX_Handle<sp/>handle)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___object" kindref="compound">UDMACC26XX_Object</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a9b87747e67e7cba15e71ccdd495bbf65" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>(<ref refid="struct_u_d_m_a_c_c26_x_x___object" kindref="compound">UDMACC26XX_Object</ref><sp/>*)(handle-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a9b87747e67e7cba15e71ccdd495bbf65" kindref="member">object</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>the<sp/>module<sp/>as<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;isOpen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>UDMACC26XX_Handle<sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1aa7a244c7cfec8551f11ad5d4b5afa0ff" kindref="member">UDMACC26XX_open</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="_u_d_m_a_c_c26_x_x_8h_1a1eec9bde0731a07b492a9f483b0c554b" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a1eec9bde0731a07b492a9f483b0c554b" kindref="member">UDMACC26XX_channelEnable</ref>(UDMACC26XX_Handle<sp/>handle,<sp/>uint32_t<sp/>channelBitMask)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>hwAttrs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>hwAttrs<sp/>=<sp/>(<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/>*)(handle-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>DMA<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>HWREG(hwAttrs-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" kindref="member">baseAddr</ref><sp/>+<sp/>UDMA_O_SETCHANNELEN)<sp/>=<sp/>channelBitMask;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="_u_d_m_a_c_c26_x_x_8h_1a5725e1db13295ef9096723f2b7c6364c" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a5725e1db13295ef9096723f2b7c6364c" kindref="member">UDMACC26XX_channelDone</ref>(UDMACC26XX_Handle<sp/>handle,<sp/>uint32_t<sp/>channelBitMask)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>hwAttrs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>hwAttrs<sp/>=<sp/>(<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/>*)(handle-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>REQDONE<sp/>is<sp/>set<sp/>for<sp/>a<sp/>specific<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uDMAIntStatus(hwAttrs-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" kindref="member">baseAddr</ref>)<sp/>&amp;<sp/>channelBitMask)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="_u_d_m_a_c_c26_x_x_8h_1a1571fcbf7f44fca000fef38d8955eae6" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a1571fcbf7f44fca000fef38d8955eae6" kindref="member">UDMACC26XX_clearInterrupt</ref>(UDMACC26XX_Handle<sp/>handle,<sp/>uint32_t<sp/>channelBitMask)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>hwAttrs<sp/>and<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>hwAttrs<sp/>=<sp/>(<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/>*)(handle-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>UDMA<sp/>done<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>uDMAIntClear(hwAttrs-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" kindref="member">baseAddr</ref>,<sp/>channelBitMask);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="_u_d_m_a_c_c26_x_x_8h_1a0cd214fa0e13f1ddb1a519a30acfe30c" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a0cd214fa0e13f1ddb1a519a30acfe30c" kindref="member">UDMACC26XX_channelDisable</ref>(UDMACC26XX_Handle<sp/>handle,<sp/>uint32_t<sp/>channelBitMask)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref><sp/>=<sp/>handle-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>HWREG(hwAttrs-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" kindref="member">baseAddr</ref><sp/>+<sp/>UDMA_O_CLEARCHANNELEN)<sp/>=<sp/>channelBitMask;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="_u_d_m_a_c_c26_x_x_8h_1a3118471d8450fd14aaf03f3e1b087a17" refkind="member"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a3118471d8450fd14aaf03f3e1b087a17" kindref="member">UDMACC26XX_disableAttribute</ref>(UDMACC26XX_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>channelNum,<sp/>uint32_t<sp/>attr)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref><sp/>=<sp/>(<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs" kindref="compound">UDMACC26XX_HWAttrs</ref><sp/>*)<sp/>handle-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___config_1a394867c60268267c4c503fb10100d960" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>uDMAChannelAttributeDisable(hwAttrs-&gt;<ref refid="struct_u_d_m_a_c_c26_x_x___h_w_attrs_1a62ff254a8b85ecced4f749c35065515d" kindref="member">baseAddr</ref>,<sp/>channelNum,<sp/>attr);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_d_m_a_c_c26_x_x_8h_1a5529a47329f27d70c490c5ed1c1b19f0" kindref="member">UDMACC26XX_close</ref>(UDMACC26XX_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_UDMACC26XX__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/dma/UDMACC26XX.h"/>
  </compounddef>
</doxygen>
